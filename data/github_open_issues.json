[
    [
        {
            "index": 0,
            "date": "Jul 21, 2023",
            "title": "[NEW FEATURE] Timestamping management allowing synchronized network, or not.",
            "url": "https://github.com/Luos-io/luos_engine/issues/444",
            "poster_name": "#444\n            opened Jul 21, 2023 by\n            nicolas-rabault",
            "description": "Details\nLuos engine have been made for simple microcontrollers. Since version 3.0.0, Luos have been unleashed and able to run anywhere and use any network.\nHistorically to manage timestamping Luos was considering that no synchronization was available among the nodes. This is not true anymore because some advanced network can rely on time synchronization.\nDescribe the expected behavior of the feature\nTo be able to benefits from these synchronized network we have to be able to remove the latency based timestamping and use a plain date instead. This need to be a phy choice depending on it's capabilities.\nthis will be a boolean value stored in the luos_phy_t struct. This boolean will change the behavior of the Phy_ComputeMsgTimestamp, instead of computing the differential value we will just return the plain timestamp.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 1,
            "date": "Jul 17, 2023",
            "title": "[NEW FEATURE] WebSocket Network",
            "url": "https://github.com/Luos-io/luos_engine/issues/443",
            "poster_name": "#443\n            opened Jul 17, 2023 by\n            nicolas-rabault",
            "description": "What feature would you like to be included in Luos?\nAdd a webSocket network allowing to use IP networks.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n Simonbdy reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 2,
            "date": "Jul 17, 2023",
            "title": "[NEW FEATURE] Serial network support on Windows and Linux.",
            "url": "https://github.com/Luos-io/luos_engine/issues/442",
            "poster_name": "#442\n            opened Jul 17, 2023 by\n            nicolas-rabault",
            "description": "What feature would you like to be included in Luos?\nMake sure that the Native HAL for Serial Network of Luos 3.0.0 is working properly.\nDescribe the expected behavior of the feature\nWe should have the same behavior that the Mac version.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n Simonbdy reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 3,
            "date": "Jul 17, 2023",
            "title": "[BUG] Multi-threaded services with Luos V3",
            "url": "https://github.com/Luos-io/luos_engine/issues/441",
            "poster_name": "#441\n            opened Jul 17, 2023 by\n            nicolas-rabault",
            "description": "Which version the bug has been detected on\nLuos engine 3.0.0\nDescription of the bug\nHaving a multithreaded access to Luos generate some data race conditions.\nHow to reproduce the bug\nThe easiest way to reproduced it is to run a native Gate websocket with Luos 3.0.0. Make sure by looking in the main that the code is executed ion separated threads.\nGate is specially good for this because the complete project (Gate + Pipe) is using callback and polling methods resulting in a big mess...\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 4,
            "date": "Jul 17, 2023",
            "title": "[BUG] Arduino crash with Serial Network communication",
            "url": "https://github.com/Luos-io/luos_engine/issues/440",
            "poster_name": "#440\n            opened Jul 17, 2023 by\n            nicolas-rabault",
            "description": "Which version the bug has been detected on\nLuos engine 3.0.0\nDescription of the bug\nBy running simple Gate <=> service configuration using Serial network on Arduino, I experienced some communication failures\nContext and environment\nArduino hosting a led or a button service\nA native Gate websocket using Serial Network\nHow to reproduce the bug\nFollow the context and environment described above and try to use pyluos to get the routing table.\nThe detection will fail.\nPossible solution\nI started to debug this and I see that the first Gate detections seems to be OK. But when Pyluos perform another one, Serial seems to break. Serial object may be created another time at detection resulting in a Serial failure situation.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 5,
            "date": "Jul 17, 2023",
            "title": "[BUG] Native Serial_network Gate websocket segfault.",
            "url": "https://github.com/Luos-io/luos_engine/issues/439",
            "poster_name": "#439\n            opened Jul 17, 2023 by\n            nicolas-rabault",
            "description": "Which version the bug has been detected on\n*Luos engine 3.0.0\nDescription of the bug\nBy executing a gate websocket in a native environment using Serial network communication with a board I experience some random segfault.\nI removed the service multithreading on the main but I still have the same behavior.\nI tried to check it, but it doesn't seem to occur in debug mode.\nContext and environment\nA native gate websockeet connected through a Serial Network with a simple button on any board running on Luos_engine 3.0.0\nHow to reproduce the bug\nFollow the context and environment condition, connect to the gate using pyluos. You should see the gate and the button. Wait a bit and you should see the gate segfault on the Gate terminal few minutes later.\nPossible solution\nWill have to print debug and try to reproduce this bug in other situations than Gate to have a better understanding on the bug condition.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 6,
            "date": "Mar 31, 2023",
            "title": "[BUG] Native streaming asserts with windows",
            "url": "https://github.com/Luos-io/luos_engine/issues/432",
            "poster_name": "#432\n            opened Mar 31, 2023 by\n            JeromeGalan",
            "description": "Details\nWhich version the bug has been detected on\nLuos engine 2.9.0\nDescription of the bug\nAfter a few minutes in native environment ONLY WITH WINDOWS (ie Mac & Liinux  are OK):\nASSERT on line 63 of \"luos_engine\\engine\\core\\src\\streaming.c\"\nContext and environment\n\nNative with 3 three services in 3 native nodes : a gate, a button and a led\n\nHow to revproduce the bug\nJust wait a bit.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 7,
            "date": "Mar 22, 2023",
            "title": "[NEW FEATURE] Multiple kind of network",
            "url": "https://github.com/Luos-io/luos_engine/issues/429",
            "poster_name": "#429\n            opened Mar 22, 2023 by\n            nicolas-rabault",
            "description": "Multiple kind of network\nBased on #428 , the multi-phy feature will allow Luos engine to deal with multiple and different networks at the same time (WiFi, CAN, Robus, \u2026), acting like a switch. This feature will allow to deal with multiple networks on your device, multiply data bandwidth, and break the frontier between your embedded networks and your cloud or computer applications.\nTo allow that :\n\nReception context is saved in the phy side allowing parallel reception.\nPhy add/remove is managed the same way services are.\nEvery phy have its own TX_job list (message to transmit to a target).\nThe node is considered as a phy (this is the localhost transportation interface)\nFiltering is able to filter messages for any phy interface.\nRX messages are filtered to all phy and converted into phy TX_job if needed.\nNo more dynamical size variability over time in messages allocation.\n\n\n\nUser point of view\nThis new version should not change anything on the service development side. A few API may be changed but services algorithm shouldn't change at all.\nUsers will have to add physical layers on the main.c the same way they are managing services (only by calling phy init).\nExpected results\nIn the end of this project, we should have Luos services on a computer and multiple board able to exchange information and detect  each other using serial communication over USB and Robus at the same time.\nAll services across all network should appear as a global unified architecture in the routing table.\nTasks :\n\n Manage phy instanciation and dynamical phy table management\n Deal with hardware flexible node_id listing\n Deal with hardware efficient RX\n Deal with hardware efficient TX\n Simplify msg_alloc by removing reallocation.\n Move msg_alloc tasks to phy structs\n Modify luos_tasks to become localhost TX_job list.\n Deal with filtering. node_id and service_id for each phy is indexed on the phy struct.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 8,
            "date": "Mar 22, 2023",
            "title": "[NEW FEATURE] Any kind of network support",
            "url": "https://github.com/Luos-io/luos_engine/issues/428",
            "poster_name": "#428\n            opened Mar 22, 2023 by\n            nicolas-rabault",
            "description": "Any kind of network support\nThe main goal of this feature is to drastically simplify the addition of various networks\u2019 support into the Luos engine library. Luos engine will not be limited to the Robus network layer anymore, and will be able to deal with any kind of network.\nThe closure of this issue will lead to the creation of a v3.0.0 release of Luos.\n\n\nUser point of view\nThis new version should not change anything on the service development side. A few API may be changed but services algorithm shouldn't change at all.\nUsers may have more options on the transportation layer side allowing them to choose different ones depending on there configuration.\nUsers can design there own transportation layer allowing to deal with custom one.\nTransportation layer should be considered as kind of packages.\nExpected results\nIn the end of this project, we should have Luos services on a computer and a board able to exchange information and detect using serial communication over USB.\nTasks :\n\n Move files from Robus to IO folder (msg_alloc, filtering, reception, ...)\n Rename files functions and check for unit tests\n Check for configuration files\n Add an IO init and loop functions\n Add a phy struct gathering physical layers informations\n Simplify rx msg_allocation by adding a buffer on the phy struct\n Also use buffer to manage RX treatment out of IRQ\n Add a topology IO management function\n Create phy.h function template\n\n Manage init / loop interface\n Manage reception interface\n Manage detection interface\n Manage transmission interface\n\n\n Create phy interface for Robus\n Unit tests of Luos V3\n Hardware test of Luos V3\n Create phy interface for serial USB\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 9,
            "date": "Mar 22, 2023",
            "title": "[NEW FEATURE] Multi-phy support",
            "url": "https://github.com/Luos-io/luos_engine/issues/427",
            "poster_name": "#427\n            opened Mar 22, 2023 by\n            nicolas-rabault",
            "description": "Multi-phy support\nToday Luos use Robus as physical transportation.\nRobus is able to deal with various half-duplex physical network and have very hard real time constraints to get very efficient results and reliability on the Luos usage.\nBut most of the time devices have multiple different network to deal with, for example to communicate with a computer or with a specific electronic board.\nThe main objective of the multi-phy support is to enable the usage of any kind of network and the ability to use multiple of them regrouped under the same software architecture.\n\n\nHere is the complete expected code architecture :\n\n\nStep 1 : Any kind of network #428\nBefore thinking about how to deal with multiple physical transportation, we need to actually support different ones. So the first step goal is to make Luos work with or without Luos.\nIn the end of this Step, we should have Luos services on a computer and a board exchanging information using serial communication over USB.\n\n\nStep 2 : Multiple kind of network #429\nIn Step 1 we created the support of any kind of network, but we only can use one of them. Now it's time to allow users to have multiple network.\nIn the end of this step, we should have Luos services on a computer exchanging information using serial communication over USB and multiple boards exchanging information using serial communication over USB with the computer service and Robus with services on other boards.\n\n\nStep3 : Demonstrate it by allowing a Gate service to run on a computer or a board without any difference.\nOn this last step we should be able to run a Gate service application on a computer or in an electronic board without any difference (except for performances).\nProject support :\nThis project is financially supported and motivated by 2 companies :\n3Ditex       : https://www.3ditex.com\nNimbl'bot : https://nimbl-bot.com\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 10,
            "date": "Feb 9, 2023",
            "title": "[BUG] ESP build test temporarily didn't work",
            "url": "https://github.com/Luos-io/luos_engine/issues/423",
            "poster_name": "#423\n            opened Feb 9, 2023 by\n            nicolas-rabault",
            "description": "Details\nESP build system recently change, with this change old build system also change using new tools. Those tool doesn't seems to work on windows.\nWe had to remove the build of ESP on GH just to bypass it.\nWe have to put it back when these tool will work.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 11,
            "date": "Nov 18, 2022",
            "title": "[NEW FEATURE] Luos updates to be launched by Pyluos and not by Gate",
            "url": "https://github.com/Luos-io/luos_engine/issues/405",
            "poster_name": "#405\n            opened Nov 18, 2022 by\n            BiliouriV",
            "description": "Before to begin\nThank you for contributing to the Luos project!\nBefore to begin, please ensure that the feature you are requesting doesn't exist yet (you can use the GitHub searchbar with keywords to look for other issues).\nIf you only have a usage question, ask it to the Luos Community.\nAt last, feel free to read the Luos contribution's guidelines and the documentation page to have more insight about how to contribute to Luos!\nDetails\nPlease replace the italic test by your inputs and details in each of the following sections:\nWhat feature would you like to be included in Luos?\nUpdates should be initiated by a Pyluos Command and not by default in gate after the end of a detection\nDescribe the expected behavior of the feature\nIn Pyluos each time we finish a detection by default we should launch the updates in order to get the values we need of each node. Right now its the gate that does this automatically. In other cases as for example the detection launched before starting the bootloader we should not ask for updates because we should not provoke the collision of necessary messages that may harm the procedure.\nWhat is the motivation / use case for changing the behavior?\nThe first bootloader message that puts the boards in APP_RELOAD_MODE does not always arrives to every node because of unecessary updates that should not exist in that case. Anyways the gate should not ask by default for the updates. The updates when we use gate to get them are only used in high level (for example when we use pyluos) so it is on high level that we should ask the nodes to start sending them.\nThank you! Your issue will be reviewed by our admins.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 12,
            "date": "Nov 18, 2022",
            "title": "[NEW FEATURE]  Command to demand the nodes' Bootloader Mode",
            "url": "https://github.com/Luos-io/luos_engine/issues/404",
            "poster_name": "#404\n            opened Nov 18, 2022 by\n            BiliouriV",
            "description": "Before to begin\nThank you for contributing to the Luos project!\nBefore to begin, please ensure that the feature you are requesting doesn't exist yet (you can use the GitHub searchbar with keywords to look for other issues).\nIf you only have a usage question, ask it to the Luos Community.\nAt last, feel free to read the Luos contribution's guidelines and the documentation page to have more insight about how to contribute to Luos!\nDetails\nPlease replace the italic test by your inputs and details in each of the following sections:\nWhat feature would you like to be included in Luos?\nIt would be nice to have a message sent from Pyluos  and Gate in order to demand each node's bootloader mode.\nDescribe the expected behavior of the feature\nPyluos before starting the uploading procedure should verify the bootloader mode of each node. We should be able to check that the mode is in APP_RELOAD_MODE in order to start the procedure.\nWhat is the motivation / use case for changing the behavior?\nIn case that we have a busy network with a lot of messages like updates, it is possible that the first message when we want to reflash the boards is not received by the corresponding board (Collisions etc). For this reason we need to verify if the message is received and resend it if not.\nThank you! Your issue will be reviewed by our admins.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 13,
            "date": "Nov 15, 2022",
            "title": "[NEW FEATURE] Luos engine working with low consumtion routine",
            "url": "https://github.com/Luos-io/luos_engine/issues/403",
            "poster_name": "#403\n            opened Nov 15, 2022 by\n            Salem-Tho",
            "description": "Luos need to works with product that not always run the execution loop of a firmware.\nIn low consumption product at the end of a loop a \"sleep function\" can be call to stop the processor and enter in low consumption mode. Often the MCU is wake by a interruption provide from a peripheral like a timer, an IO, or a reception of a byte on usart.\nLuos should have in the HAL, a function to start the sleep routine to put the MCU in sleep mode and the possibility to trigger an event to wake the MCU and start the routine of going out of the sleep mode.\nAt the end the loop, a luos API should be call by user. this function will block the loop process, finish to treat msg and message handling calling, send a message to all service to but them in sleep mode and enter in sleep mode.\nThe loop process can retrieve in by a timer to wake up periodically the MCU , with the PTP by poking nodes or directly with the reception of a byte on robus\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 14,
            "date": "Oct 20, 2022",
            "title": "[BUG] PTP stucked to high level during booltloader data transfer",
            "url": "https://github.com/Luos-io/luos_engine/issues/391",
            "poster_name": "#391\n            opened Oct 20, 2022 by\n            JeromeGalan",
            "description": "Details\nPlease replace the italic test by your inputs and details in each of the following sections:\nWhich version the bug has been detected on\nLuos engine 2.6.4\nDescription of the bug\nThe PTP is stucked to HIGH level after a 2nd flash with pyluos bootloader.\n\nContext and environment\nGate L0 + Nucleo L432KC with a LED service\nHow to reproduce the bug\nThe Nucleo was in bootloader mode. A Led service has been flashed with pyluos bootloader. We try to flash it a second time with the same service.\nPossible solution\nMaybe we should do a \"pyluos-bootloader reset\" before each bootloader flash ? Or even call a reset automatically in bootloader machine state ?\nTo be verified : is it specified in the documentation ?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 15,
            "date": "Sep 15, 2022",
            "title": "Use Ack information (timeout and framing error)[NEW FEATURE]",
            "url": "https://github.com/Luos-io/luos_engine/issues/364",
            "poster_name": "#364\n            opened Sep 15, 2022 by\n            Salem-Tho",
            "description": "an robus ackwnoledge protocol is composed by :\n\nidentifier : 0xF Always this value in case to detect a wrong byte\nrx_error : CRC wrong\nrx_timeout : timeout receive before ACK\nrx_framing_error : flag framing error is raise during the reception (possible collision with another frame)\n\nOnly rx error is used to \"ACK or NACK\" a frame the two other one is just information and we should use it and maybe add a new flag for user information\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 16,
            "date": "Sep 7, 2022",
            "title": "[NEW FEATURE] CRC_IBM",
            "url": "https://github.com/Luos-io/luos_engine/issues/360",
            "poster_name": "#360\n            opened Sep 7, 2022 by\n            Salem-Tho",
            "description": "A CRC calculation on Luos can be change to correspond to standard CRC-16 ANSI / IBM\nActual Luos CRC\n\nWidth = 16 bits\nTruncated polynomial = 0x0007\nInitial value = 0xFFFF\nInput data is NOT reflected\nOutput CRC is NOT reflected\nNo XOR is performed on the output CRC\n\nCRC-16 ANSI / IBM\n\nWidth = 16 bits\nTruncated polynomial = 0x8005\nInitial value = 0x0000\nInput data is reflected\nOutput CRC is reflected\nNo XOR is performed on the output CRC\n\ncode example:\n`uint16_t crc16_ibm(char* data, unsigned int data_len)\n{\nuint16_t crc = 0;\nif (data_len == 0)\n    return 0;\n\nfor (unsigned int i = 0; i < data_len; ++i) {\n    uint16_t dbyte = bit_reflect(data[i], 8);\n    crc ^= dbyte << 8;\n    \n    for (unsigned char j = 0; j < 8; ++j) {\n        uint16_t mix = crc & 0x8000;\n        crc = (crc << 1);\n        if (mix)\n            crc = crc ^ 0x8005;\n    }\n}\n\nreturn bit_reflect(crc, 16);\n\n}`\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 17,
            "date": "Aug 12, 2022",
            "title": "[MCU PORTING] RP2040",
            "url": "https://github.com/Luos-io/luos_engine/issues/334",
            "poster_name": "#334\n            opened Aug 12, 2022 by\n            ThotAlion",
            "description": "What MCU would you like Luos to be compatible with?\nRP2040\nLink the datasheet of this MCU:\nhttps://datasheets.raspberrypi.com\nDescribe your project:\nAfter several tests on RPi Pico, Pico W and Arduino Nano RP2040, this chip appears as very powerful with a classical architecture (M0 cortex *2). The advantage of RP2040 with respect to others ESP32 or SAMD21 is the price and the big community of Raspberry Pi behind.\nDedicated, in the future to education.\nDescribe the electronic board hosting the MCU:\nsee the Raspberry Pi Pico W :\nsee the Arduino Nano RP2040 : https://docs.arduino.cc/hardware/nano-rp2040-connect\nsee the Seeeduino XIAO RP2040 : https://www.seeedstudio.com/XIAO-RP2040-v1-0-p-5026.html\nEnsure that every box bellow is checked:\n\n[ x] The MCU is not in the compatible list in the documentation.\n[ x] The MCU is not already in an existing porting issue.\n The issue has the label porting.\n[x ] The issue is added to the Porting project.\n\nAdditional context\nAdd any other context about the porting request here.\nRP2040 ported in Arduino IDE and Platform IO with the MBed framework.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n nicolas-rabault reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 18,
            "date": "Jul 28, 2022",
            "title": "[NEW FEATURE] Luos on NuttX RTOS",
            "url": "https://github.com/Luos-io/luos_engine/issues/293",
            "poster_name": "#293\n            opened Jul 28, 2022 by\n            nicolas-rabault",
            "description": "Luos is already able to run on RTOS\nIt should be a nice idea to have a POSIX port to use OS peripherals. NuttX is following many of Linux ideas, then it will be easier test thing on Linux and then just compile it for NuttX.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n acassis reacted with thumbs up emoji\n \u2764\ufe0f\n1\n btashton reacted with heart emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction\n\n\n\u2764\ufe0f\n1 reaction",
            "comments": []
        },
        {
            "index": 19,
            "date": "Jul 26, 2022",
            "title": "[NEW FEATURE] Flash support for luos_engine core native HAL",
            "url": "https://github.com/Luos-io/luos_engine/issues/289",
            "poster_name": "#289\n            opened Jul 26, 2022 by\n            nicolas-rabault",
            "description": "Until now we avoid the emulation of flash on native HAL. This means that we can't use Luos in bootloader mode on a native target.\nInstead of writing binaries on a flash, we could write them on a file, then instead of jumping to another address of the flash to run the application, we could run the downloaded program.\nOn this native HAL instead of flash addresses, we should have files name allowing us to \"jump\" from one to another easily.\nThis could allow us to easily perform advanced test and validation on the bootloader in a native target.\nThis features will be really useful in the future of Luos allowing to flash computer and embedded nodes using the exact same way.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 20,
            "date": "Jul 26, 2022",
            "title": "[NEW FEATURE] Mdns support of websocket native Pipe",
            "url": "https://github.com/Luos-io/luos_engine/issues/288",
            "poster_name": "#288\n            opened Jul 26, 2022 by\n            nicolas-rabault",
            "description": "In Native example Pipe is the service dealing with the WebSocket and allowing other things to interact with the native luos_engine network.\nFor now this pipe create a WS (websocket) server and relay all input and output of the websocket to the Gate or Inspector service. This way Pyluos can send information for the Gate or Inspector trough this WS pipe.\nPyluos is able to list the compatible interfaces available on the system. For now we are able to list available serial interface, but we should be able to make it also with this WS Pipe.\nTo do that we should add an Mdns(also known as Bonjour) support on the native WS Pipe, allowing the WS Pipe to declare itself on the network to be \"discoverable\".\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 21,
            "date": "Jun 17, 2022",
            "title": "[NEW FEATURE] [POLLING] Pull messages of specific topic",
            "url": "https://github.com/Luos-io/luos_engine/issues/250",
            "poster_name": "#250\n            opened Jun 17, 2022 by\n            BiliouriV",
            "description": "What feature would you like to be included in Luos?\nWe need to have functions to check if we have into msg buffer a message of specific topic, and to pull a luos task of this topic.\nWe need  2 new Luos APIS and 1 or 2 Functions in msg alloc.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 22,
            "date": "May 17, 2022",
            "title": "[BUG] Send 2 start detection messages instead of 1",
            "url": "https://github.com/Luos-io/luos_engine/issues/229",
            "poster_name": "#229\n            opened May 17, 2022 by\n            JeromeGalan",
            "description": "** Which version the bug has been detected **\nLuos engine 2.4.2\nDescribe the bug\nWhen asking many detections with a gate and a button, the start detection is sometimes sent 2 times.\nTwo cases :\n-First image : 2 messages\n\nSecond image : the 2nd messages is broken. Only a few bytes are sent, then Tx enable goes to 0. The message is not sent on the network.\n\n\nNetwork configuration\n\nA Gate\nA Button (wirh autopupdate)\n\nHow to reproduce the bug\nAsk several detections.\nAdditional context\n\nBefore versions 2.4.2, this bug could be seen juste before the crash of an autoupdate service (issue [BUG] Assert when pulling from Tx task in case of several detections\u00a0#222 is now closed).\nNow, app continue to work well. But this behaviour is weird.\nThis bug seems to appear only when there are nodes sending autoupdate messaged (to be confirmed...).\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 23,
            "date": "Apr 22, 2022",
            "title": "[BUG] Detection concurency",
            "url": "https://github.com/Luos-io/luos_engine/issues/187",
            "poster_name": "#187\n            opened Apr 22, 2022 by\n            nicolas-rabault",
            "description": "Describe the bug\nIf another node than the gate one perform a detection the Gate seems to react really weirdly.\nNetwork configuration\nA gate node and an other one performing a detection.\nHow to reproduce the bug\nI discover this bug by uploading the master node of my stair firmware.\nSo the gate is already running with nothing happening on it (just keep alive messages from Gate to computer)\nThen the master boot and launch a detection.\nThe gate seems to slow down and don't ask for any auto-update :\n\nI zoom a little bit more on the detection :\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 24,
            "date": "Apr 5, 2022",
            "title": "[BUG] At startup, unwanted pulse on PTP line crashes the network",
            "url": "https://github.com/Luos-io/luos_engine/issues/180",
            "poster_name": "#180\n            opened Apr 5, 2022 by\n            JeromeGalan",
            "description": "Describe the bug\n\nWhen a Gate is already power up (Discovery STM32-F0) and no detection have occured : if another board is hot plugged and powered by the first board, its GPIO initialisation state can accidentally crash all the networks (PTP line remains indefinitelly to 1).\n\n\nIn the picture above, network haven't crashed thanks to a new detection asked by the user. Without this detection, you're dead...\n\nMore generally, any unwanted pulse on PTP line could crash all the network.\n\nNetwork configuration\n\n\nRTB :\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\u2503  \u256dnode 1            /!\\ Not certified\n\u2503  \u2502  Type                Alias               ID\n\u2503  \u251c> Gate                gate                1\n\u2503  \u2570> Pipe                Pipe                2\n\u2554>\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\u2551     \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\u255a\u2550\u2550 0>\u25031 \u256dnode 2            /!\\ Not certified\n\u2503  \u2502  Type                Alias               ID\n\u2503  \u2570> Void                boot_service\n\n\u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\n\n\nPower input configuration :\n\nA Gate is already power up (Discovery STM32-F0),\nThen, a L0 board is hotplugged and powerered-up by the STM32.\n\n\n\nHow to reproduce the bug\nPower on the STM32 and then hotplug the L0 board.\nAdditional context\nSoft should more robust to such events. Maybe you should add a filter on PTP machine state.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 25,
            "date": "Mar 16, 2022",
            "title": "[NEW FEATURE] New LuosHAL_SetIrqState",
            "url": "https://github.com/Luos-io/luos_engine/issues/166",
            "poster_name": "#166\n            opened Mar 16, 2022 by\n            Salem-Tho",
            "description": "What feature would you like to be included in Luos?\nIt's will be nice in LuosHAL in the function LuosHAL_SetIrqState(uint8_t Enable) to just enable/disable LuosHAL interrupt and anot all the interrupt of the ship\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 26,
            "date": "Dec 21, 2021",
            "title": "[NEW FEATURE] allow custom type and command enum on node_config.h and product_config.h",
            "url": "https://github.com/Luos-io/luos_engine/issues/132",
            "poster_name": "#132\n            opened Dec 21, 2021 by\n            nicolas-rabault",
            "description": "As described in the documentation, product-related definition and enums should be put on a product_config.h .\nBut if I want to create and maintain my product App type list with the Luos offset or a custom command list, this will not work because I need to include luos_list.h first.\nexample :\ntypedef enum\n{\n    MY_APPLICATION_TYPE = LUOS_LAST_TYPE,\n    MY_SENSORAPP_TYPE\n} ;\nThe product_config.h is included using -include ../product_config.h on the platformio.ini file that's why you don't have any luos related values.\nWe have to find a way to make it.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 27,
            "date": "Dec 8, 2021",
            "title": "[BUG] Gate auto-update with big RTB",
            "url": "https://github.com/Luos-io/luos_engine/issues/129",
            "poster_name": "#129\n            opened Dec 8, 2021 by\n            nicolas-rabault",
            "description": "Describe the bug\nWhen we create a lot of auto-update at the same time all the services reply in a short period of time. But after few seconds we can see that this period of time become larger and larger. The space between boards diverge.\nNetwork configuration\n\nAny\n\nHow to reproduce the bug\nJust use a gate with some service with the standard configuration\nAdditional context\nThe auto-update feature have a ms granularity. We could reduce this granularity to reduce this divergence.\nMost importantly auto-update is computed on luos_loop(). If Luos_loop is executed later after the deadline we create divergence because after send the message we do :\nnew_trigger_date = current_time + update_time\nWe should do :\nnew_trigger_date = last_trigger_date + update_time\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 28,
            "date": "Nov 8, 2021",
            "title": "[Quality Improvment] Warnings in Luos code",
            "url": "https://github.com/Luos-io/luos_engine/issues/118",
            "poster_name": "#118\n            opened Nov 8, 2021 by\n            JeromeGalan",
            "description": "On GitHub Action \"BUILD\" workflow, all Luos repository are correctly compiled, without any warning.\nBut on some OS (like Ubuntu), GCC basic parameters are generating too many warnings.\nMaybe those warnings are not relevant. But we should take a little time to think about that.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 29,
            "date": "Sep 24, 2020",
            "title": "Compil and test with all optimize option",
            "url": "https://github.com/Luos-io/luos_engine/issues/35",
            "poster_name": "#35\n            opened Sep 24, 2020 by\n            Salem-Tho",
            "description": "pb works well at O1 but not at O0 certainly du to timings and loop for or while\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        }
    ],
    [
        {
            "index": 0,
            "date": "Oct 25, 2023",
            "title": "SI units: slope vs. rate",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4215",
            "poster_name": "#4215\n            opened Oct 25, 2023 by\n            tobolar",
            "description": "There are defined units indicating change of the unit over time. They have a suffix \"slope\" or \"rate\".\nThe question is:\n\nShouldn't this be unified?\nShall such units even be a part of Units.SI at all? See https://github.com/modelica/ModelicaStandardLibrary/pull/4103/files#r1152856158\n\n\nSlope:\n\nModelica.Units.SI.CurrentSlope\nModelica.Units.SI.TemperatureSlope\nModelica.Units.SI.VoltageSlope\n\nRate:\n\nModelica.Units.SI.MassFlowRate\nModelica.Units.SI.VolumeFlowRate\nModelica.Units.SI.EntropyFlowRate\netc.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 1,
            "date": "Oct 24, 2023",
            "title": "Broken link to 3-Clause BSD license on modelica.org",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4214",
            "poster_name": "#4214\n            opened Oct 24, 2023 by\n            tobolar",
            "description": "The link to the 3-Clause BSD license on https://modelica.org/licenses/modelica-3-clause-bsd seems to be broken (after the webpage relaunch):\n\n\n\nModelicaStandardLibrary/Modelica/package.mo\n\n\n         Line 2829\n      in\n      d3ad60c\n\n\n\n\n\n\n <li>The license has been changed to BSD 3-clause, visit: <a href=\\\"https://modelica.org/licenses/modelica-3-clause-bsd\\\">https://modelica.org/licenses/modelica-3-clause-bsd</a>.</li> \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 2,
            "date": "Oct 20, 2023",
            "title": "I don't understand the relationship between enthalpy and energy in modelica_fluid",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4210",
            "poster_name": "#4210\n            opened Oct 20, 2023 by\n            zhouchunshu",
            "description": "There are two equations below:\n0 = port_a.m_flow * actualStream(port_a.h_outflow) + port_b.m_flow *\nactualStream(port_b.h_outflow) + Q_flow * 1000;\nport_a.h_outflow = port_b.h_outflow;\nWhy is there energy input, but the specific enthalpy remains constant?Are the above two equations contradictory?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 3,
            "date": "Oct 20, 2023",
            "title": "Problem with the function setState_phX",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4209",
            "poster_name": "#4209\n            opened Oct 20, 2023 by\n            congtoantran",
            "description": "I have a library which works well on Modelica 3.3.2, but when converted to Modelica 4.0.0, it doesn't work anymore, and the message error is \"Non-real equation in continuous time are not legal:\".\nI'm trying to understand the problem by using a very simple example (see below):\nmodel model1a\n  replaceable package Medium = Modelica.Media.R134a.R134a_ph \"Medium model\" \n    annotation (choicesAllMatching=true);\n  Medium.ThermodynamicState state_a ;\n  Modelica.Units.SI.AbsolutePressure p=Medium.p_default;\n  Modelica.Units.SI.SpecificEnthalpy h=Medium.h_default;\n\nequation \n  state_a = Medium.setState_phX(Medium.p_default, Medium.h_default);\n  //     state_a = Medium.setState_phX(p, h);\nend model1a;\nThe above model runs sucessfully. But when I redefine the variable state_a by using the second line in the equation part, the model does not work and the error is :\n  Non-real equation in continuous time are not legal:\n  state_a.phase = Modelica.Media.R134a.R134a_ph.getPhase_ph(p, h);\n\nAny help to understand the error? Many thanks. I use Dymola 2021, Modelica 4.0.0\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 4,
            "date": "Oct 18, 2023",
            "title": "Why Evaluate for T_start and h_start in Modelica.Fluid.Interfaces.PartialDistributedVolume?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4207",
            "poster_name": "#4207\n            opened Oct 18, 2023 by\n            HansOlsson",
            "description": "I don't see why this case is different, and the Evaluate=true is missing from\nPartialLumpedVolume (and the parameters are not present in PartialDistributedFlow).\nAs far as I could see it was introduced in the original commit 3487fff and not changed.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 5,
            "date": "Sep 29, 2023",
            "title": "Utilities.Streams.writeRealMatrix seems to not work properly",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4201",
            "poster_name": "#4201\n            opened Sep 29, 2023 by\n            mpradovelasco",
            "description": "Hi,\nThis issue derives from a previous comment in discussion forum (#4198). I have a block component that writes in a mat file using the following code:\nString dataName(start = getInstanceName() + \"_dsignal\", fixed = true);\nalgorithm  \n  /* Write */\n  when terminal() and saveToFile then\n    dataName := Utilities.Strings.replace(dataName, \".\", \"_\");\n    success := Utilities.Streams.writeRealMatrix(fileName, dataName, \n      dataSignal, format=format, append=true);\n  end when;\nThe first line simply substitutes \".\" by \"_\" for matlab compatibility.\nDespite using append = true when calling, the data are written only if the file does not exist. This manner, if I have two components that append data and the file does not exist, only the first call is attended (the names of arrays to be saved are different). The following image shows the file with the data from the first call.\n\nIf the file exist, no one writes in the file (in that case Matlab indicates that mat file is empty). I have tried with different Mat formats and append values without success.\nThis issue occurs with System: MSL 4.0.0 under OMEdit 1.22 and Windows 11.\nThanks for your help.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 6,
            "date": "Sep 19, 2023",
            "title": "Unit issue in Modelica.Mechanics.Translational.Components.ElastoGap",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4197",
            "poster_name": "#4197\n            opened Sep 19, 2023 by\n            HansOlsson",
            "description": "The commit 0315615 changed ElastoGap to be unit-unsafe. In particular the previous s_ref parameter was removed, and the non-linear exponent n=0 was replaced with the general exponent n=1 (roughly it replaced (s_rel-s_rel0)*abs((s_rel-s_rel0)/s_ref)^n by (s_rel-s_rel0)^n).\nThe solution seems to be to restore s_ref (e.g., parameter SI.Position s_ref=1 annotation(enable=n>1 or n<1);) and replace c*abs(s_rel - s_rel0)^n by c*abs((s_rel - s_rel0)/s_ref)^n*s_ref. The extra factor s_ref ensures that c keeps its previous unit (and especially doesn't have a unit depending on the real parameter n).\nMy assumption is that if someone is investigating non-linear elasto gaps the additional freedom of setting s_ref is actually helpful.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 7,
            "date": "Sep 18, 2023",
            "title": "Inconsistent use of tol in ModelicaTest.MultiBody.Forces.Damper",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4193",
            "poster_name": "#4193\n            opened Sep 18, 2023 by\n            qlambert-pro",
            "description": "The variable used as tolerance margin to decide whether two Real values are equal is used to compare position and speed at the same time.\nWe could turn tol into a constant as we don't expect the infer the unit of constants based on their usage or maybe use Modelica.Constants.eps?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 8,
            "date": "Sep 18, 2023",
            "title": "Unit errors when calling Modelica.Mechanics.MultiBody.Frames.from_nxy",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4192",
            "poster_name": "#4192\n            opened Sep 18, 2023 by\n            qlambert-pro",
            "description": "Modelica.Mechanics.MultiBody.Frames.from_nxy is expecting unit \"1\" inputs but in at least:\nModelica.Mechanics.MultiBody.Parts.BodyCylinder and Modelica.Mechanics.MultiBody.Parts.BodyBox it is being called with variables expressed in \"m\".\nI see two solutions to address this issue, one would be to divide the corresponding variable by its length, and the other would be to call Modelica.Units.Conversions.to_unit1.\nWhich one is preferred?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 9,
            "date": "Sep 12, 2023",
            "title": "Revisit initialization?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4190",
            "poster_name": "#4190\n            opened Sep 12, 2023 by\n            HansOlsson",
            "description": "The issue #799 for fixing the initial conditions was introduced at about the same time that Modelica Language Specification 3.3 defined a recommended procedure for start-values (which has been later refined in Modelica Language Specification 3.6).\nIt might thus be time to revisit that and have at least test-cases that don't use fixed=true for all initial conditions, but still have uniquely defined initial conditions (due to that procedure).  This should likely be scheduled after MSL 4.1.0 is released.\nThe reason is to have more realistic use-cases, and also find if the logic is lacking (somewhere).\nThe reason for adding this issue now is that it is otherwise impossible to write\na proper test-case for #4189 (but that PR would be good to include in 4.1.0). With proper test-case I mean a test-case that tests the functionality, fails before the PR is applied, and works afterwards. (Obviously the PR can be tested in the normal way so that it doesn't break anything.)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 10,
            "date": "Aug 31, 2023",
            "title": "Class name as text in Diagram in Electrical.Analog",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4186",
            "poster_name": "#4186\n            opened Aug 31, 2023 by\n            maltelenz",
            "description": "A lot of the examples in Modelica.Electrical.Analog.Examples have a large Text item on the Diagram basically replicating the information of the class name.\nOther sub-libraries in MSL don't have this, and any tool would presumably show the class name somewhere close when showing the diagram, so replicating this information on the diagram only adds clutter.\nWould a pull request removing these Text items be accepted?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n2\n tobolar and christiankral reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n2 reactions",
            "comments": []
        },
        {
            "index": 11,
            "date": "Aug 31, 2023",
            "title": "Over-zealous null-pointer guards in ModelicaStandardTables_CombiTimeTable_init (etc)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4185",
            "poster_name": "#4185\n            opened Aug 31, 2023 by\n            HansOlsson",
            "description": "If you look at the declaration of ModelicaStandardTables_CombiTimeTable_init (and similar ones) you notice that all pointer arguments are declared to be non-NULL (using nonnull-attribute for Gcc and SAL for Visual Studio).\nHowever, if the table is read from a file then table isn't used (or even checked) and can safely be NULL.\nThe correction for Gcc will be a bit messy (specify all non-NULL pointers) so I didn't want to make the PR unless it is likely to be accepted.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 12,
            "date": "Aug 16, 2023",
            "title": "Pure functions calling impure functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4182",
            "poster_name": "#4182\n            opened Aug 16, 2023 by\n            abuntrock",
            "description": "Description\nThere are some pure MSL 4.0.0 functions, which call other (impure) MSL functions, which is not allowed according to Modelica specification section 12.3.\nI found the issues #3857, #3856, #3855 , and #3655, which are all still open.\nSince from our perspective more tools are checking this now, the number of warnings thrown during simulation increased. Is there something planned regarding those issues?\nExpected behaviour\nImpure functions are only called in the circumstances allowed by the Modelica specification section 12.3.\nTested version\nMSL 4.0.0\nThanks for looking into this\nAaron Buntrock\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 13,
            "date": "Aug 10, 2023",
            "title": "Recompilation of binaries necessary",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4178",
            "poster_name": "#4178\n            opened Aug 10, 2023 by\n            MatthiasBSchaefer",
            "description": "In the master branch e.g. commit ce36c07 examples which include a CombiTimeTable are not compiling, because the function\nModelicaStandardTables_CombiTimeTable_init3\ncan not be found in the binaries. The function was added to ModelicaStandardTables.c after the last built of the binaries.\nSo a recompilation of the binaries for all platforms is necessary.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 14,
            "date": "Aug 7, 2023",
            "title": "Which Modelica Language version for MSL 4.1.0?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4175",
            "poster_name": "#4175\n            opened Aug 7, 2023 by\n            HansOlsson",
            "description": "Known issues (will check if more):\n\nConditional connectors (Modelica Language 3.4 is problematic).\n\n#3947 indicate that the current library is not correct according to Modelica Language 3.4 - basically one should get a diagnostics for some examples; and it doesn't make sense to patch them for 3.4 semantics.\nThus if we want MSL to be correct and be able to detect if  Modelica.Mechanics.Rotational.Components.IdealGear has enabled and unconnected support-connector we need 3.6 semantics and a new annotation in the library (mustBeConnected).\nIf we skip detecting IdealGear issue we can say that we use 3.6 semantics but the library does not contain 3.6 features.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 15,
            "date": "Jul 31, 2023",
            "title": "Unused parameters in Modelica.Electrical.Digital.Examples.Utilities.DFF",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4174",
            "poster_name": "#4174\n            opened Jul 31, 2023 by\n            ssj123456",
            "description": "The parameters Tdel and QInit are not used.\nI assume they should just be propagated to the RSFF1.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 16,
            "date": "Jul 31, 2023",
            "title": "Connection error in Modelica.Electrical.Digital.Examples.Utilities.JKFF",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4173",
            "poster_name": "#4173\n            opened Jul 31, 2023 by\n            ssj123456",
            "description": "The connect-clause \"connect(RS1.qn, q)\" and \"connect(RS1.q, qn)\" seem to be \"connect(RS1.q, q)\" and \"connect(RS1.qn, qn)\" respectively.\n\nWhen simulating Modelica.Electrical.Digital.Examples.FlipFlop in MWorks.Sysplorer, the variable FF.q is not matched with JK flip flop's truth table.\nThe truth table is shown below:\n\nThe simulation result is shown below:\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 17,
            "date": "Jul 11, 2023",
            "title": "Problems with zero flow through Modelica.Fluid.Fittings.GenericResistances.VolumeFlowRate",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4170",
            "poster_name": "#4170\n            opened Jul 11, 2023 by\n            julfrei-hystar",
            "description": "Running the model with the code below on OpenModelica v1.20.0 (64-bit) on Windows 11 Pro, I get the following timer values:\n127.642s [ 60.1%] simulation\n212.397s [100.0%] total\n\nSetting the constant openingA to 0 and openingB to 1, the following timer values are achieved:\n0.339589s [ 31.5%] simulation\n1.07687s [100.0%] total\n\nThe only difference between the two lines is the element Modelica.Fluid.Fittings.GenericResistances.VolumeFlowRate.\nDoes anyone know the reason for this significant difference?\nmodel fluidCircuit\n\n  inner Modelica.Fluid.System system(T_start = 308, energyDynamics = Modelica.Fluid.Types.Dynamics.FixedInitial, m_flow_start = 16.5, massDynamics = Modelica.Fluid.Types.Dynamics.FixedInitial) annotation(\n    Placement(visible = true, transformation(origin = {-90, 90}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  replaceable package Medium = Modelica.Media.CompressibleLiquids.LinearWater_pT_Ambient constrainedby Modelica.Media.Interfaces.PartialMedium;\n\n  Modelica.Fluid.Vessels.OpenTank tank(redeclare package Medium = Medium, crossArea = 0.3, height = 0.8, nPorts = 3, portsData = {Modelica.Fluid.Vessels.BaseClasses.VesselPortsData(diameter = 0.065), Modelica.Fluid.Vessels.BaseClasses.VesselPortsData(diameter = 0.065, height = 0.3), Modelica.Fluid.Vessels.BaseClasses.VesselPortsData(diameter = 0.065, height = 0.3)}) annotation(\n    Placement(visible = true, transformation(origin = {110, 70}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));\n\n  Modelica.Blocks.Sources.Constant const(k = 1500) annotation(\n    Placement(visible = true, transformation(origin = {-10, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Fluid.Machines.PrescribedPump pump(redeclare package Medium = Medium, redeclare function flowCharacteristic = Modelica.Fluid.Machines.BaseClasses.PumpCharacteristics.polynomialFlow(V_flow_nominal = {0, 0.01, 0.02, 0.026, 0.034}, head_nominal = {25.5, 25, 24, 22, 17.5}), redeclare function powerCharacteristic = Modelica.Fluid.Machines.BaseClasses.PumpCharacteristics.quadraticPower(V_flow_nominal = {0.01, 0.02, 0.03}, W_nominal = {4000, 6000, 7800}), N(start = 1500), N_nominal = 1500, V = 0.005, use_powerCharacteristic = true) annotation(\n    Placement(visible = true, transformation(origin = {80, -20}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));\n\n  Modelica.Blocks.Sources.Constant openingA(k = 1) annotation(\n    Placement(visible = true, transformation(origin = {50, 90}, extent = {{-10, 10}, {10, -10}}, rotation = -180)));\n  Modelica.Fluid.Valves.ValveLinear valveA(redeclare package Medium = Medium, dp_nominal(displayUnit = \"Pa\") = 100000, m_flow_nominal = 10) annotation(\n    Placement(visible = true, transformation(origin = {20, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Blocks.Sources.Constant openingB(k = 0) annotation(\n    Placement(visible = true, transformation(origin = {-40, 90}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Fluid.Valves.ValveLinear valveB(redeclare package Medium = Medium, dp_nominal(displayUnit = \"Pa\") = 100000, m_flow_nominal = 10) annotation(\n    Placement(visible = true, transformation(origin = {-10, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n\n  Modelica.Fluid.Fittings.GenericResistances.VolumeFlowRate resistance2(redeclare package Medium = Medium, a = 30000000, b = 0) annotation(\n    Placement(visible = true, transformation(origin = {-70, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Fluid.Fittings.GenericResistances.VolumeFlowRate resistance1(redeclare package Medium = Medium, a = 30000000, b = 0) annotation(\n    Placement(visible = true, transformation(origin = {20, -20}, extent = {{-10, 10}, {10, -10}}, rotation = -180)));\n\n  Modelica.Fluid.Pipes.StaticPipe pipe1(redeclare package Medium = Medium, diameter = 0.1, length = 5) annotation(\n    Placement(visible = true, transformation(origin = {110, 10}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));\n  Modelica.Fluid.Pipes.StaticPipe pipe2(redeclare package Medium = Medium, diameter = 0.1, length = 5) annotation(\n    Placement(visible = true, transformation(origin = {50, -20}, extent = {{-10, 10}, {10, -10}}, rotation = -180)));\n  Modelica.Fluid.Pipes.StaticPipe pipe3a(redeclare package Medium = Medium, diameter = 0.1, length = 5) annotation(\n    Placement(visible = true, transformation(origin = {-40, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Fluid.Pipes.StaticPipe pipe3b(redeclare package Medium = Medium, diameter = 0.1, length = 5) annotation(\n    Placement(visible = true, transformation(origin = {-40, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Fluid.Pipes.StaticPipe pipe4a(redeclare package Medium = Medium, diameter = 0.1, length = 5) annotation(\n    Placement(visible = true, transformation(origin = {50, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  Modelica.Fluid.Pipes.StaticPipe pipe4b(redeclare package Medium = Medium, diameter = 0.1, length = 5) annotation(\n    Placement(visible = true, transformation(origin = {50, 60}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));\n  \nequation\n  connect(pipe3b.port_b, valveB.port_a) annotation(\n    Line(points = {{-30, 60}, {-20, 60}}, color = {0, 127, 255}));\n  connect(pipe3a.port_b, valveA.port_a) annotation(\n    Line(points = {{-30, 30}, {10, 30}}, color = {0, 127, 255}));\n  connect(resistance1.port_a, pipe2.port_b) annotation(\n    Line(points = {{30, -20}, {40, -20}}, color = {0, 127, 255}));\n  connect(valveB.port_b, pipe4b.port_a) annotation(\n    Line(points = {{0, 60}, {40, 60}}, color = {0, 127, 255}));\n  connect(valveA.port_b, pipe4a.port_a) annotation(\n    Line(points = {{30, 30}, {40, 30}}, color = {0, 127, 255}));\n  connect(resistance2.port_a, resistance1.port_b) annotation(\n    Line(points = {{-80, 60}, {-90, 60}, {-90, -20}, {10, -20}}, color = {0, 127, 255}));\n  connect(pipe1.port_a, tank.ports[1]) annotation(\n    Line(points = {{110, 20}, {110, 50}}, color = {0, 127, 255}));\n  connect(pipe4a.port_b, tank.ports[2]) annotation(\n    Line(points = {{60, 30}, {70, 30}, {70, 50}, {110, 50}}, color = {0, 127, 255}));\n  connect(pipe4b.port_b, tank.ports[3]) annotation(\n    Line(points = {{60, 60}, {70, 60}, {70, 50}, {110, 50}}, color = {0, 127, 255}));\n  connect(pipe2.port_a, pump.port_b) annotation(\n    Line(points = {{60, -20}, {70, -20}}, color = {0, 127, 255}));\n  connect(pump.port_a, pipe1.port_b) annotation(\n    Line(points = {{90, -20}, {110, -20}, {110, 0}}, color = {0, 127, 255}));\n  connect(const.y, pump.N_in) annotation(\n    Line(points = {{1, 0}, {80, 0}, {80, -10}}, color = {0, 0, 127}));\n  connect(pipe3a.port_a, resistance1.port_b) annotation(\n    Line(points = {{-50, 30}, {-70, 30}, {-70, -20}, {10, -20}}, color = {0, 127, 255}));\n  connect(resistance2.port_b, pipe3b.port_a) annotation(\n    Line(points = {{-60, 60}, {-50, 60}}, color = {0, 127, 255}));\n  connect(openingB.y, valveB.opening) annotation(\n    Line(points = {{-28, 90}, {-10, 90}, {-10, 68}}, color = {0, 0, 127}));\n  connect(openingA.y, valveA.opening) annotation(\n    Line(points = {{39, 90}, {20, 90}, {20, 38}}, color = {0, 0, 127}));\n  annotation(\n    Diagram(coordinateSystem(extent = {{-100, 100}, {140, -40}})),\n    uses(Modelica(version = \"4.0.0\")),\n    version = \"\");\nend fluidCircuit;\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 18,
            "date": "Jul 7, 2023",
            "title": "Rename unit with historical meaning of debye",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4168",
            "poster_name": "#4168\n            opened Jul 7, 2023 by\n            henrikt-ma",
            "description": "When adding support in System Modeler for all units seen in the MSL, we encountered a definition of \"debye\" that Wikipedia refers to as \"historical\":\n\n\n\nModelicaStandardLibrary/Modelica/Media/package.mo\n\n\n         Line 758\n      in\n      e55884b\n\n\n\n\n\n\n       <td>dipole moment of molecule in Debye (1 debye = 3.33564e10-30 C.m)</td></tr> \n\n\n\n\n\nPerhaps the unit should be renamed somehow to not cause confusion in relation to the (assumedly) more modern CGS definition of the debye?  To make a concrete proposal, how about using the unit symbol \"debyeCharge\" instead of \"debye\" in DipoleMoment:\n\n\n\nModelicaStandardLibrary/Modelica/Media/package.mo\n\n\n        Lines 6631 to 6635\n      in\n      e55884b\n\n\n\n\n\n\n type DipoleMoment = Real ( \n\n\n\n     min=0.0, \n\n\n\n     max=2.0, \n\n\n\n     unit=\"debye\", \n\n\n\n     quantity=\"ElectricDipoleMoment\") \n\n\n\n\n\nThe reason behind suggesting the name \"debyeCharge\" is that the definition corresponds to the charge interpretation of the statcoloumb:\nhttps://en.wikipedia.org/wiki/Statcoulomb\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 19,
            "date": "Jul 3, 2023",
            "title": "The Modelica Standard Library User's Guide should promote the consistent use of a style guide for writing documentation",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4166",
            "poster_name": "#4166\n            opened Jul 3, 2023 by\n            gwr69",
            "description": "Extending #4162 I would suggest that the Modelica Standard Library should\u2014if for historical reasons it cannot do so itself\u2014encourage consistent use of either British (BE) or American English (AE).\nWithin the MSL, it seems that the use of AE (mostly) prevails:\n\nDates are written as \"July 31, 2023\" (AE) not \"31 July 2023\" (BE)\nThere are 10 matches for \"organization\" (AE) versus 1 match for \"organisation\" (BE)\nThere are 12055 matches for \"color\" (AE) versus 1 match for \"colour\" (BE)\nThere are 286 matches for \"center\" (AE) versus 0 matches for \"centre\" (BE)\nThere are 148 matches for \"modeling\" (AE) versus 72 matches for \"modelling\" (BE)\nThere are 4 matches for \"reorganization\" (AE) versus 1 match for \"reorganisation\" (BE)\nThere are 108 matches for \"behavior\" (AE) versus 83 matches for \"behaviour\" (BE)\nThere are 13 matches for \"meter\" (AE) versus 20 matches for \"metre\" (BE)\nThere are 0 matches for \"kilometer\" (AE) versus 8 matches for \"kilometre\" (BE)\nThere are 12 matches for \"program\" (AE) versus 1 match for \"programme\" (BE)\nThere are 463 matches for \"i.e.,\" (AE) versus 57 matches for \"i.e. \" (BE)\nThere are 433 matches for \"e.g.,\" (AE) versus 66 matches for \"e.g. \" (BE)\n...\n\nWithout (once more) getting into petty arguments regarding \"parsing of syntax\" (which appears to be rather nontrivial for humans), I believe that MSL (at least in its Users Guide) should encourage consistent use of either AE or BE, where usage is clearly different, e.g., \"organization\" is correct\u2014albeit infrequent\u2014use in BE.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 20,
            "date": "Jun 28, 2023",
            "title": "IEEE citation style necessitates the use of American punctuation rules, e.g., UsersGuide.Conventions.UsersGuide.References",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4162",
            "poster_name": "#4162\n            opened Jun 28, 2023 by\n            gwr69",
            "description": "I just note that the examples given in UsersGuide.Conventions.UsersGuide.References use British punctuation conventions\u2014not the appropriate American ones, i.e., the quotation marks should be placed after the comma and not before it (cf. Wikipedia: Quotation marks in English).\nPlease also see this example for the proper use of punctation in the IEEE Transactions citation style:\nhttps://pitt.libguides.com/citationhelp/ieee\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 21,
            "date": "Jun 23, 2023",
            "title": "M_OLine example PR deleted by mistake!",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4159",
            "poster_name": "#4159\n            opened Jun 23, 2023 by\n            max-privato",
            "description": "Dear all,\nI did create a PR M_OLine example a couple of years ago.\nAfter two years the PR has got life again a few weeks ago.\nI was notified of an issue of the PR that I solved just a few hours ago.\nSo, I was ready to revive that PR successfully.\nUnfortunately I did not realise that deleting a repository from my own gitHub account I would have deleted everything about that PR.\nSo now it seems totally lost.\nHowever, I'm ready to re-create it again, since all the issues of that PR had been solved.\nI apologise to anyone that had spent some time on that PR!\nI will try to remember as much as I can of the content of the previous discussion on previous PR, and try su create a new PR that is easily checked and, finally and hopefully, merged.\nSorry again for the inconvenience created to anyone!\nThe new PR will appear under my new gitHub name: \"ceraolo\"\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 22,
            "date": "Jun 13, 2023",
            "title": "Modelica.Fluid.Machines.SweptVolume lacks support",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4153",
            "poster_name": "#4153\n            opened Jun 13, 2023 by\n            HansOlsson",
            "description": "In order to use translational components in a system model you have to consider the model as attached to two sides (either two normal flanges, or a normal and a support-flange); and the component corresponds to the offset between those flanges.\nThe SweptVolume lacks this and thus the use of the model is limited - in particular you cannot connect its volume to another SweptVolume. See https://stackoverflow.com/questions/76380814/how-to-reverse-the-sweptvolume-block/76465574\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n justnielsen reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 23,
            "date": "Jun 2, 2023",
            "title": "Dimension mismatch in function linearPower",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4144",
            "poster_name": "#4144\n            opened Jun 2, 2023 by\n            julfrei-hystar",
            "description": "In this line of the function linearPower, it should be ones(2) instead of ones(3) in order to match the dimensions of the equation.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 24,
            "date": "May 26, 2023",
            "title": "How can I change the reference state in Modelica.Media.Water?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4142",
            "poster_name": "#4142\n            opened May 26, 2023 by\n            anushkaperera",
            "description": "Water media models given in Modelica.Media.Water are defined based on the reference at 273.15K and 1bar. As far as I can see there is no way of changing the reference state, for example, to 298.15K and 1bar. On the other hand this is possible for gas models; for gas media models we can set to excludeEnthalpyOfFormation=false and referenceChoice=Modelica.Media.Interfaces.Choices.ReferenceEnthalpy.ZeroAt25C. I had to edit the source code of Modelica.Media.Water to fix this issue and this is a messy solution, there are must be better solution. I think Modelica.Media.Water media models should also have the possibility of changing the reference state. Any thoughts?\nIn the documentation of Modelica.Media.Water (IF97.pdf) it says that how u, h, rho, etc. are calculated. There are 5 regions defined, for example for region 1, thermodynamic properties are calculated using appropriate partial derivatives of the specific Gibbs free energy g, here the reference state defined at T=273.15K. g should be changed to g* = g + h_0 - T*s_0 where h_0 and s_0 are reference specific enthalpy and entropy at some given reference temperature, for example T0 = 273.15 + 25. I think Modelica.Media.Water library should be updated with this correction.\nhttps://stackoverflow.com/questions/76326366/how-can-i-change-the-reference-state-in-modelica-media-water\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 25,
            "date": "May 9, 2023",
            "title": "Investigating regfun3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4128",
            "poster_name": "#4128\n            opened May 9, 2023 by\n            TManikantan",
            "description": "OK, I made some more enquiries using the very nice OMC [algorithmic debugger](https://openmodelica.org/doc/OpenModelicaUsersGuide/latest/debugger.html#the-algorithmic-debugger).\n\nThis MWE replicates the problem with regFun3() at the point were the mass flow rate function jumps:\nmodel TestRegFun3\n  Real x = 1.5023328;\n  Real x0 = 0;\n  Real x1 = 1.5023328811860801;\n  Real y0 = 0;\n  Real y1 = 0.0015270174250288026;\n  Real yd0 = 0.0010172719108540143;\n  Real yd1 = 0.0010164308084791662;\n  Real y = Modelica.Fluid.Utilities.regFun3(x, x0, x1, y0, y1, yd0, yd1);\nend TestRegFun3;\nSince x is very close to x1, one would expect y to be very close to y1 = 0.0015270174250288026. Instead one gets y = 0.00137275.\nWhat I understand is that the derivative yd1 is very, very close to (y1-y0)/(x1-x0), while the derivative yd0 is slightly larger. I can replicate the issue with round figures:\nmodel TestRegFun3_round\n  Real x = time;\n  Real x0 = 0;\n  Real x1 = 1;\n  Real y0 = 0;\n  Real y1 = 0.001;\n  Real yd0 = 0.0010008;\n  Real yd1 = 0.001;\n  Real y = Modelica.Fluid.Utilities.regFun3(x, x0, x1, y0, y1, yd0, yd1);\n  annotation(experiment(StopTime = 1, StartTime = 0, Tolerance = 1e-06, Interval = 0.002));\nend TestRegFun3_round;\n\nVariable y should go from y0 to y1, and quite obviously it doesn't do that.\nBottom line: regFun3() is numerically ill-conditioned when the two supplied derivatives are very close to the slope of the curve connecting the two points. I'm not sure whether this is inherent to the algorithm by Gasparo and Morandi or if it is just @sielemann's implementation that has some glitch in those conditions.\nAt this point this is no longer a Fluid issue, but a plain old computer science problem, so I gladly hand it over to someone else who's more competent than I am. @sielemann, @gkurzbach, @beutlich any suggestion? @hubertus65 do you think Michael would be interested at plunging back into this problem?\nOriginally posted by @casella in #3758 (comment)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n casella reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 26,
            "date": "Apr 29, 2023",
            "title": "Heating System example broken",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4125",
            "poster_name": "#4125\n            opened Apr 29, 2023 by\n            giovachiap",
            "description": "Hi everybody, I'm a newbie to Modelica and I'm trying to get my head around thermal and fluid modelica libraries. A great example I tried to simulate is the Heating System example. Despite running the latest version of OpenModelica and Modelica Library, i cannot find a way to simulate it properly. Keeps on failing at time = 0, due to a problem in the dynamic pipe called \"radiator\". Attached the log file.\nHeatingSystem fail log.txt\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 27,
            "date": "Apr 28, 2023",
            "title": "Spherical Harmonics integration",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4123",
            "poster_name": "#4123\n            opened Apr 28, 2023 by\n            weberscode",
            "description": "Dear Community,\nis there already a library for the integration of spherical harmonics in Modelica?\nI have started something. Could someone proof it? It is important that the function outputs complex-valued later, since I want to work with a linear combination of several bases.\nThanks for the feedback.\nKind regards\nSimon Weber, M.Sc.\nResearch Associate\nInstitute for Acoustics and Building Physics\nPfaffenwaldring 7\n70569 Stuttgart\nGermany\nTel: +49 711 685 66301\nE-Mail: simon.weber@iabp.uni-stuttgart.de\nWebsite: http://www.iabp.uni-stuttgart.de\nhttps://orcid.org/0000-0002-6268-8547\nfunction sphericalHarmonics\n  input Integer M;\n  input Integer L;\n  input Real theta \"Altitude within (0,pi]\";\n  input Real phi \" Azimuth within [0,2pi]\";\n  output Complex spharm;\n\nprotected \n  parameter Real pi = Modelica.Constants.pi;\n  Real Nlm = sqrt( (2*L+1)/2 * factorial(L-M)/factorial(L+M));\n  Real Plm = if M<0 then (-1)^M * factorial(L-M) / factorial(L+M) * LegendrePolynom(M,L,cos(theta)) else LegendrePolynom(M,L,cos(theta));\n  Complex Elm = Modelica.ComplexMath.exp(Complex(0,M*phi));\n\nalgorithm \n  spharm :=sqrt(1/2/pi)*Nlm*Plm*Elm;\n\nend sphericalHarmonics;\nfunction LegendrePolynom\n  input Integer M;\n  input Integer L;\n  input Real x \"Cos(Altitude) within [1,-1]\";\n  output Real legPoly;\n\nprotected \n  parameter Integer L2Floor = integer(floor(L/2));\n  Real dPL = 0;\n  Real dx;\nalgorithm \n\n  for k in 0:L2Floor loop\n    dx := if noEvent(x == 0 and L - 2*k - M == 0) then factorial(L - 2*k)/factorial(L - 2*k - M) elseif noEvent(x == 0) then 0 else factorial(L\n       - 2*k)/factorial(L - 2*k - M)*x^(L - 2*k - M) \"M-th derivative wrt x of x^(L-2*k); This avoids 0^0 error\";\n    dPL := dPL + (-1)^k*factorial(2*L - 2*k)/(factorial(k)*factorial(L - k)*factorial(L - 2*k))*dx;\n  end for;\n\n  legPoly := if noEvent(1-x^2==0 and M/2==0) then (-1)^M * 1 / 2^L * dPL elseif noEvent(1-x^2==0) then 0 else (-1)^M * (1-x^2)^(M/2) / 2^L * dPL;\n\nend LegendrePolynom;\nfunction factorial \"n-th falling factorial\"\n  input Integer n;\n  output Integer f;\n\nprotected \n  Integer maxInt = 2147483646 \"Max 32-bit integer\";\n\nalgorithm \n    f := 1;\n  for i in 0:(n-1) loop\n    assert(f < maxInt, \"Integer overflow\");\n    f := f*(n-i);\n  end for;\n\nend factorial;\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 28,
            "date": "Apr 5, 2023",
            "title": "Quantity name \"Relative magnetization\" doesn't follow upper camel case convention",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4110",
            "poster_name": "#4110\n            opened Apr 5, 2023 by\n            henrikt-ma",
            "description": "This quantity does not follow the MSL convention of using upper camel case names: \n\n\nModelicaStandardLibrary/Modelica/Magnetic/FluxTubes/BaseClasses/GenericHysteresis.mo\n\n\n         Line 19\n      in\n      7051091\n\n\n\n\n\n\n output Real MagRel(final quantity=\"Relative magnetization\", final unit=\"1\", start=0, min=-1, max=1) \n\n\n\n\n\nA more suitable name would be \"RelativeMagnetization\".\nIdeally, the quantity should also be defined in a place like Modelica.Units.SI, where others can find it, to avoid ending up with multiple strings for the same quantity.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 29,
            "date": "Mar 29, 2023",
            "title": "Invalid record type passed to functions in Fittings",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4102",
            "poster_name": "#4102\n            opened Mar 29, 2023 by\n            bilderbuchi",
            "description": "Comment by sjoelund.se on 4 Apr 2014 08:02 UTC I think this would be rather important to resolve or clarify. Currently the MSL does not seem to care about the order: CurvedBend.Geometry and Bend.dp_curvedOverall_IN_con need to be type-compatible to translate some Fluid.Dissipation models, and the records are:\nrecord EdgedBend \"Input for bend\"\n  SI.Diameter d_hyd;\n  SI.Angle delta;\n  SI.Length K;\nend EdgedBend;\n\nrecord Bend \"Input for bend\"\n  extends EdgedBend;\n  SI.Radius R_0;\nend Bend;\n\nrecord dp_curvedOverall_IN_con\n  extends Modelica.Fluid.Dissipation.Utilities.Records.PressureLoss.Bend;\n  // d_hyd,delta,K,R_0\nend dp_curvedOverall_IN_con;\n\nrecord Geometry \"Geometric data for a curved bend\"\n  SI.Diameter d_hyd;\n  SI.Radius R_0;\n  SI.Angle delta;\n  Modelica.Fluid.Types.Roughness K;\nend Geometry;\n\nThere are also some user libraries out there that do precisely the r0 := r assignment.\n\nThis issue with CurvedBend has apparently never been fixed.\nI'm getting an \"error: passing 'Modelica_Fluid_Fittings_BaseClasses_Bends_CurvedBend_Geometry' to parameter of incompatible type 'Modelica_Fluid_Dissipation_PressureLoss_Bend_dp__curvedOverall__IN__con'\" on compilation in OpenModelica, and from what I can tell the situation sketched above by @sjoelund is still present in MSL 4 (so I don't think it's an OpenModelica problem at this point).\nOriginally posted by @bilderbuchi in #1245 (comment)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 30,
            "date": "Mar 28, 2023",
            "title": "Unit error in Modelica.Media.Examples.SimpleLiquidWater",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4099",
            "poster_name": "#4099\n            opened Mar 28, 2023 by\n            qlambert-pro",
            "description": "The following equation does not pass unit-checking:\nmedium2.p = 1e5 * time / 10;\n\nmedium2.p is expressed in \"Pa\" and time in \"s\"\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 31,
            "date": "Mar 28, 2023",
            "title": "Unit error in Modelica.Electrical.Batteries.Examples.BatteryDischargeCharge",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4098",
            "poster_name": "#4098\n            opened Mar 28, 2023 by\n            qlambert-pro",
            "description": "The bindings given to cellData1.Ri and cellData2.Ri do not pass unit checking.\nThey are both given an expression expressed in \"V\" when they are expecting one expressed in \"Ohm\".\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 32,
            "date": "Mar 28, 2023",
            "title": "Unit error in Modelica.Clocked.Examples.Systems.Utilities.ComponentsThrottleControl.IntakeManifold",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4097",
            "poster_name": "#4097\n            opened Mar 28, 2023 by\n            qlambert-pro",
            "description": "The following equation doesn't pass unit checking:\nm_ao_der = -0.366 + 0.08979 * N * P_m - 0.0337 * N * P_m ^ 2 + 0.0001 * N ^ 2 * P_m;\n\nN is expressed in \"rad/s\" and P_m in \"bar\" so - 0.0337 * N * P_m ^ 2  and 0.0001 * N ^ 2 * P_m don't have the same unit, for instance, despite being added.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 33,
            "date": "Mar 14, 2023",
            "title": "Provide CMake configuration as proof of concept for future standardization",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4093",
            "poster_name": "#4093\n            opened Mar 14, 2023 by\n            henrikt-ma",
            "description": "This issue is opened on behalf of the MAP-Lang design meeting taking place this week.\nOn the topic of improving the handling of external code in Modelica, the language group wants to go in the direction of standardizing on the use of CMake for building external code:\n\nBuildProjects to automatically compile Modelica binaries\u00a0ModelicaSpecification#1668 (comment)\n\nWe believe that instead of starting with standardizing this in the Modelica specification, it would be better to first work out a good CMake configuration for the MSL, that tool vendors can try out and contribute to if they want to.  When the MAP-Lib and interested tool vendors are satisfied with the setup, we can then proceed with standardization in the language group.\nThe idea isn't new, but it seems it hasn't been discussed for the 10 last years:\n\nBinaries in the Modelica Standard Library\u00a0#1155\nEvaluation of new OpenSourceTables\u00a0#1067 (comment)\n\nMaybe someone could shed some light on what CMake file that this comment from 2016 refers to?\n\nInclude writeMatrix from ExternData to MSL\u00a0#1856 (comment)\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 34,
            "date": "Mar 14, 2023",
            "title": "Establish BaseClasses in MultiBody",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4092",
            "poster_name": "#4092\n            opened Mar 14, 2023 by\n            tobolar",
            "description": "In Modelica.Mechanics.MultiBody.Interfaces, there are several classes which actually makes an impression of base classes, e.g.:\n\nModelica.Mechanics.MultiBody.Interfaces.PartialConstraint\nModelica.Mechanics.MultiBody.Interfaces.PartialElementaryJoint\nModelica.Mechanics.MultiBody.Interfaces.PartialForce\nModelica.Mechanics.MultiBody.Interfaces.PartialVisualizer\n\nSo they have to be moved into (new) BaseClasses package(s) of corresponding sub-packages.\nAdditionally, the class Modelica.Mechanics.MultiBody.Interfaces.PartialVisualizer could be extended by at least\nparameter Boolean animation... \ninput Types.SpecularCoefficient specularCoefficient = ...\n\nas these variables are used within all visualizers (see e.g. Modelica.Mechanics.MultiBody.Visualizers.FixedShape).\nThis issue relates to #2534 and #3739\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 35,
            "date": "Mar 12, 2023",
            "title": "Faulty parameter propagation in IntersectivePWM",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4089",
            "poster_name": "#4089\n            opened Mar 12, 2023 by\n            christiankral",
            "description": "In the model Modelica.Electrical.PowerConverters.DCAC.Control.IntersectivePWMIntersectivePWM there are issue with the propagation of three parameters:\n1 Array size of trapezoid\nModelica.Blocks.Sources.Trapezoid trapezoid[3](...);\nshould be\nModelica.Blocks.Sources.Trapezoid trapezoid[m](...);\n2 Start time porpagated to trapezoid\n  Modelica.Blocks.Sources.Trapezoid trapezoid[3](\n    each final amplitude=uMax,\n    each final width=0,\n    each final nperiod=-1,\n    each final offset=-uMax/2,\n    each final rising=0.5/f,\n    each final falling=0.5/f,\n    each final period=1/f,\n    final startTime={startTime - 1.25 + (if refType == ReferenceType.Triangle1\n         then 0 else k)/m for k in 0:m - 1}/f)\n         if (refType==ReferenceType.Triangle1 or refType==ReferenceType.Triangle3);\nThe units of the expression final startTime=startTime - 1.25 + (if refType == ReferenceType.Triangle1 then 0 else k)/m for k in 0:m - 1}/f do not match as startTime is added 1.25 and other real expressions.\n3 Start time porpagated to sawTooth\nSimilar issue as 2. The propagation reads final startTime={startTime - 1.5 + (if refType == ReferenceType.Sawtooth1 then 0 else k)/m for k in 0:m - 1}/f\n\nI understand the different phase start times associated with Triangle1 and Triangle3 but I can only suspect that the term 1.5 shall ensure that\n\nall the reference signals are fully up at time >= startTime\nthe first reference signal start with half the maximum value\n\nSo my understanding for a three phase saw tooth PWM is:\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 36,
            "date": "Mar 9, 2023",
            "title": "Are \"CircularWaveNumber\" and \"CircularWavenumber\" really two different quantities?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4088",
            "poster_name": "#4088\n            opened Mar 9, 2023 by\n            henrikt-ma",
            "description": "It seems very confusing to offer both of these:\n    type CircularWavenumber = Real (final quantity=\"CircularWavenumber\", final unit=\"m-1\");\n    type CircularWaveNumber = Real (final quantity=\"CircularWaveNumber\", final unit=\"rad/m\");\n\nIf it is intentional to have two different quantity strings for these, I suggest to at least clearly comment in the code why we have both.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 37,
            "date": "Mar 9, 2023",
            "title": "Some types in Units don't specify quantity",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4086",
            "poster_name": "#4086\n            opened Mar 9, 2023 by\n            henrikt-ma",
            "description": "Is it intentional that a type like this one doesn't come with a quantity?\n\n\n\nModelicaStandardLibrary/Modelica/Units.mo\n\n\n         Line 346\n      in\n      ef08d88\n\n\n\n\n\n\n type Stress = Real (final unit=\"Pa\"); \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 38,
            "date": "Mar 9, 2023",
            "title": "Strange quantities of TimeAging and ChargeAging",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4085",
            "poster_name": "#4085\n            opened Mar 9, 2023 by\n            henrikt-ma",
            "description": "What sort of quantity is this?\n\n\n\nModelicaStandardLibrary/Modelica/Units.mo\n\n\n         Line 1077\n      in\n      ef08d88\n\n\n\n\n\n\n type TimeAging = Real (final quantity=\"1/Modelica.Units.SI.Time\",final unit=\"1/s\"); \n\n\n\n\n\nShouldn't TimeAging be using the quantity of Modelica.Units.SI.Time instead of the name of the class in the TimeAging quantity, like this:\n    type TimeAging = Real (final quantity=\"1/Time\", final unit=\"1/s\");\n\nor maybe even something that doesn't look like quantity arithmetic?\n    type TimeAging = Real (final quantity=\"PerTime\", final unit=\"1/s\");\n\nor by analogy with \"MassFlowRate\" and \"VolumeFlowRate\":\n    type TimeAging = Real (final quantity=\"Rate\", final unit=\"1/s\");\n\nAlso affected:\n    type ChargeAging = Real (final quantity=\"1/Modelica.Units.SI.ElectricCharge\",final unit=\"1/(A.s)\");\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 39,
            "date": "Mar 9, 2023",
            "title": "How should specular coefficient be applied?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4083",
            "poster_name": "#4083\n            opened Mar 9, 2023 by\n            anotheruserofgithub",
            "description": "Questions:\n\n\n\n\nModelicaStandardLibrary/Modelica/Mechanics/MultiBody/Types/SpecularCoefficient.mo\n\n\n         Line 2\n      in\n      2308ab2\n\n\n\n\n\n\n type SpecularCoefficient = Modelica.Icons.TypeReal(min=0) \n\n\n\n\n -> Why no max=1?\nNot all components default to world.defaultSpecularCoefficient -> Is that intentional or should it be fixed?\nFrom the references below, I understand that instead of a single specular coefficient, there should be a specular color and a specular exponent (shininess), meaning, there are usually two degrees of freedom (color and shininess) to define the specular component. But with a single coefficient, I assume that it is meant to scale a white specular color, and that the shininess is fixed arbitrarily. That's how I implemented it for OpenModelica (see this commit of [OMEdit] Apply specular coefficient of material\u00a0OpenModelica/OpenModelica#10362), trying to get as close as possible to the example images below. Did I misunderstand something? @HansOlsson Maybe you would be able to give me a deeper insight and share how this is done in Dymola for instance?\n\nReferences:\n\nhttps://learnopengl.com/Lighting/Materials\n\u00a74: \"The specular material vector sets the color of the specular highlight on the surface (or possibly even reflect a surface-specific color). Lastly, the shininess impacts the scattering/radius of the specular highlight.\"\nhttps://people.inf.ethz.ch/fcellier/Lect/MMPS/Refs/Dymola5Manual.pdf\np.167: \"Specular is a coefficient defining white specular reflection.\"\nhttps://www.maplesoft.com/documentation_center/online_manuals/modelica/Modelica_UsersGuide_ReleaseNotes.html#Modelica.UsersGuide.ReleaseNotes.Version_2_2_1\nModelica.Mechanics.MultiBody.all models: \"All components with animation information have a new variable specularCoefficient to define the reflection of ambient light. The default value is world.defaultSpecularCoefficient which has a default of 0.7. By changing world.defaultSpecularCoefficient, the specularCoefficient of all components is changed that are not explicitly set differently.\"\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/2308ab206ffa874188d24b64962fa42dfeb3c81f/Modelica/Mechanics/MultiBody/Types/SpecularCoefficient.mo\nl.3: \"Reflection of ambient light (= 0: light is completely absorbed)\"\nhttps://github.com/openscenegraph/OpenSceneGraph/blob/b4152d9634984d75d0c591957feb9db534b890a6/src/osg/Material.cpp\nhttp://glprogramming.com/red/chapter05.html#name7\nhttps://www.claytex.com/blog/radar-modelling-reflection-of-an-em-wave/\nhttps://www.tomdalling.com/blog/modern-opengl/07-more-lighting-ambient-specular-attenuation-gamma/\nhttps://en.wikipedia.org/wiki/Specular_reflection\nhttps://en.wikipedia.org/wiki/Specularity\n\nExamples:\n\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/2308ab206ffa874188d24b64962fa42dfeb3c81f/Modelica/Resources/Images/Mechanics/MultiBody/Types/SpecularCoefficient.png\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/2308ab206ffa874188d24b64962fa42dfeb3c81f/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Loops/EngineV6_CAD.png\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/2308ab206ffa874188d24b64962fa42dfeb3c81f/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Systems/RobotR3/r3_fullRobot.png\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/2308ab206ffa874188d24b64962fa42dfeb3c81f/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/DoublePendulum.png\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 40,
            "date": "Mar 5, 2023",
            "title": "Migration of website search index configuration necessary",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4082",
            "poster_name": "#4082\n            opened Mar 5, 2023 by\n            beutlich",
            "description": "The Algolia powered search index of https://doc.modelica.org (for MSL) and https://specification.modelica.org (for MLS) previously was configured at https://github.com/algolia/docsearch-configs/blob/master/configs/modelica.json. This configuration has been replaced by the new Algolia infrastructure and should be migrated according to https://docsearch.algolia.com/docs/migrating-from-legacy/ for the upcoming MLS 3.6 release.\nSee #3579 and #3675 for previous Algolia related tasks.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 41,
            "date": "Mar 3, 2023",
            "title": "Unit error in Modelica.Electrical.Analog.Examples.CauerLowPassAnalog",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4079",
            "poster_name": "#4079\n            opened Mar 3, 2023 by\n            qlambert-pro",
            "description": "Both the value of capacitance c2 and c4 are expressed as inverse of inductance l1 and l2 respectively.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 42,
            "date": "Mar 3, 2023",
            "title": "Unit error in Modelica.Electrical.Analog.Examples.CauerLowPassOPV",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4078",
            "poster_name": "#4078\n            opened Mar 3, 2023 by\n            qlambert-pro",
            "description": "Both the value of capacitance c2 and c4 are expressed as inverse of capacitance l1 and l2 respectively.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 43,
            "date": "Mar 3, 2023",
            "title": "Unit error in Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.ArmatureStroke",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4077",
            "poster_name": "#4077\n            opened Mar 3, 2023 by\n            qlambert-pro",
            "description": "For:\n Modelica.Electrical.Analog.Sources.StepVoltage pmSource(startTime = 0, V = pmActuator.R * 1.5) \"Steady state current 1.5A\" annotation(Placement(transformation(origin = {-70, -30}, extent = {{-10, 10}, {10, -10}}, rotation = 270)));\n\nand\n  Modelica.Electrical.Analog.Sources.StepVoltage cSource(startTime = 0, V = cActuator.R * 1.5) \"Steady state current 1.5A\" annotation(Placement(transformation(origin = {-70, 40}, extent = {{-10, 10}, {10, -10}}, rotation = 270)));\n\nthe binding to V should probably involve constant expressed in \"A\".\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 44,
            "date": "Mar 3, 2023",
            "title": "Modelica.StateGraph.Examples.Utilities.Tank could set units for its variables.",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4076",
            "poster_name": "#4076\n            opened Mar 3, 2023 by\n            qlambert-pro",
            "description": "In particular:\n  Real level(start = 0, fixed = true, unit = \"1\") \"Tank level in % of max height\";\n  parameter Real A(unit = \"m2\") = 1 \"Ground area of tank in m^2\";\n  parameter Real a(unit = \"m2\") = 0.2 \"Area of drain hole in m^2\";\n  parameter Real hmax(unit = \"m\") = 1 \"Max height of tank in m\";\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 45,
            "date": "Feb 27, 2023",
            "title": "Icon layout of TerminateSimulation similar to 'expression' sources",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4075",
            "poster_name": "#4075\n            opened Feb 27, 2023 by\n            tobolar",
            "description": "The layout of icon of Blocks.Logical.TerminateSimulation shall be defined similar to other 'expression' sources (e.g. Blocks.Sources.RealExpression). This esp. concerns icon size and name text. The icon code can be like:\n    Icon(\n      coordinateSystem(\n        preserveAspectRatio=false,\n        extent={{-200,-100},{200,100}}),\n      graphics={\n        Rectangle(fillColor={235,235,235},\n          fillPattern=FillPattern.Solid,\n          lineThickness=5,\n          borderPattern=BorderPattern.Raised,\n          extent={{-200,-40},{200,40}}),\n        Text(extent={{-166,-15},{194,15}},\n          textString=\"%condition\"),\n        Rectangle(fillColor={161,35,41},\n          fillPattern=FillPattern.Solid,\n          borderPattern=BorderPattern.Raised,\n          extent={{-194,-14},{-168,14}}),\n        Text(textColor={0,0,255},\n          extent={{-200,90},{200,50}},\n          textString=\"%name\")})\n\nThis change would significanlty influence diagram layouts of classes where TerminateSimulation block is used. Therefore, a conversion script shall be provided to resize the element instance and, thus, to retain original diagram layout.\nReferences #3986\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 46,
            "date": "Jan 11, 2023",
            "title": "Problematic to compare h_outflow when m_flow is zero",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4069",
            "poster_name": "#4069\n            opened Jan 11, 2023 by\n            henrikt-ma",
            "description": "This is a question regarding the comparison signals for ModelicaTest.Fluid.TestComponents.Valves.TestValvesCompressibleReverse.\nFrom time 3.0 until the end at time 4.0, V5.port_b.m_flow is zero.  Doesn't this make V5.port_b.h_outflow a bad comparison signal?\n(If that's the case, it might be a good idea to go through all Fluid reference results and look for similar problems.)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 47,
            "date": "Jan 9, 2023",
            "title": "Fluid/Pipe model",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4068",
            "poster_name": "#4068\n            opened Jan 9, 2023 by\n            LPSavoie",
            "description": "It is well known the pipe model does not handle choked flow conditions at all.\nHowever valves and orifices are meant to handle choked flow conditions, and therefore it is good practice to add an orifice in series with a pipe when choked flows are present... but the problem is that even the orifices badly handle choked flow conditions.\nCould we start some investigations on choked flow conditions and get some improvement on the pipe or orifice models?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 48,
            "date": "Dec 2, 2022",
            "title": "Ill-defined event clock tick in LogicalSample",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4063",
            "poster_name": "#4063\n            opened Dec 2, 2022 by\n            henrikt-ma",
            "description": "Same model as in #3858, but a different issue.\nI am facing a simulation result that differs from the reference result for Modelica.Clocked.Examples.Elementary.ClockSignals.LogicalSample.\nThe error is seen in the variable sample_disjunctive.y, but originates from rotational_clock_1.less.  The inputs to the comparison look like this:\n\nIt looks ill-defined whether the comparison is expected to trigger an event at time 1.0, and next time a similar situation occurs, my simulation is not as lucky to reproduce the reference result behavior of not triggering an event.\nShould the timing of the model be adjusted to avoid ill-defined clock ticks like this?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 49,
            "date": "Nov 27, 2022",
            "title": "Wrong definition of units involving \"eV\"",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4062",
            "poster_name": "#4062\n            opened Nov 27, 2022 by\n            casella",
            "description": "The Modelica.Units.SI package contains several types involving the electronvolt unit\n  type FermiEnergy = Real (final quantity=\"Energy\", final unit=\"eV\");\n  type GapEnergy = Real (final quantity=\"Energy\", final unit=\"eV\");\n  type DonorIonizationEnergy = Real (final quantity=\"Energy\", final unit=\"eV\");\n  type AcceptorIonizationEnergy = Real (final quantity=\"Energy\", final unit=\n          \"eV\");\n  type ActivationEnergy = Real (final quantity=\"Energy\", final unit=\"eV\");\nAs I understand, the electronvolte is an accepted unit, like minute, hour, or degree, but it's not an SI unit. The SI unit for energy is \"J\". We should use \"eV\" as a displayUnit.\nHence, these declarations should be changed to\n  type FermiEnergy = Real (final quantity=\"Energy\", final unit=\"J\", displayUnit=\"eV\");\n  type GapEnergy = Real (final quantity=\"Energy\", final unit=\"J\", displayUnit=\"eV\");\n  type DonorIonizationEnergy = Real (final quantity=\"Energy\", final unit=\"J\", displayUnit=\"eV\");\n  type AcceptorIonizationEnergy = Real (final quantity=\"Energy\", final unit=\"J\", displayUnit=\"eV\");\n  type ActivationEnergy = Real (final quantity=\"Energy\", final unit=\"J\", displayUnit=\"eV\");\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 50,
            "date": "Nov 24, 2022",
            "title": "Standard Water Issue",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4060",
            "poster_name": "#4060\n            opened Nov 24, 2022 by\n            mgithubk",
            "description": "I am trying to get the density of water using the standard water library.\nThe command Modelica.Media.Water.StandardWaterOnePhase.density_pT(101325,275,1,1) returns 999.9\nhowever, the same command does not work in a function.\nIt yields the following error:\nUndeclared function Modelica.Media.Water.WaterIF97_pT.density_pT_Unique1.\nUndeclared function Modelica.Media.Water.WaterIF97_pT.density_pT_Unique1.\nFailed to expand Modelica.Media.Water.WaterIF97_pT.density_pT_Unique1(101325, 278, 1, 1).\nFailed to expand BasicFlowComponent.vaporMassTransport(275, 101325, 278, 5, 1, 0.001).\nThe function is provided here:\nfunction vaporMassTransport\n//Testing BasicFlowComponent.vaporMassTransport(275,101325,278,5,0.001) Modelica.Media.Water.StandardWater.density_pT(pressAir,tempSurf)\ninput Real tempAir \"air temperature\";\ninput Real pressAir \"air pressure\";\ninput Real tempSurf \"surface temperature\";\ninput Real convCoeff \"heat transfer coefficient\";\ninput Real area \" discharge coefficient\";\ninput Real massPerVap \"mass fraction\";\n//Modelica.Media.Water.StandardWaterOnePhase.ThermodynamicState stateDensH2O(p = 101325,T = 375);\nModelica.Media.Air.MoistAir.ThermodynamicState stateAir(p = pressAir,T = tempAir,X = {massPerVap, 1-massPerVap});\noutput Real vaporMassFlow \"pressure drop\";\nprotected\nReal diffAirWat =  6.429e-11 * tempAir^2 - 1.048e-8*tempAir + 1.067e-6;\nReal specHeatAir = Modelica.Media.Air.MoistAir.specificHeatCapacityCp(stateAir);\nReal densAir =  Modelica.Media.Air.MoistAir.density(stateAir);\nReal condAir = Modelica.Media.Air.MoistAir.thermalConductivity(stateAir);\nReal diffThermAir = condAir / (densAir * specHeatAir);\nReal hm = (convCoeff / (densAir * specHeatAir)) * (diffAirWat/diffThermAir)^(2/3);\n// Need the vapor pressure of water in the air.\nReal pVap[1] = Modelica.Media.Air.ReferenceMoistAir.Utilities.pd_pTX(pressAir,tempAir,[massPerVap, 1-massPerVap]);\nReal pSurf = Modelica.Media.Air.MoistAir.saturationPressure(tempSurf);\nReal densH2O =   Modelica.Media.Water.StandardWaterOnePhase.density_pT(pressAir,tempSurf,1,1);\nalgorithm\nvaporMassFlow := hmdensH2Oarea*(pSurf - pVap[1])/pressAir;\nend vaporMassTransport;\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 51,
            "date": "Nov 15, 2022",
            "title": "MoistAir, error in massFraction_pTphi",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4058",
            "poster_name": "#4058\n            opened Nov 15, 2022 by\n            GaelEnee",
            "description": "Hello,\nI would like to report an error in Modelica.Media.Air.MoistAir.massFraction_pTphi.\nI suggest the replacement of :\nprotected \n  constant Real k=0.621964713077499 \"Ratio of molar masses\";\n  AbsolutePressure psat=saturationPressure(T) \"Saturation pressure\";\nalgorithm \n  X_steam := phi*k/(k*phi + p/psat - phi);\n\nby :\nprotected \n  AbsolutePressure psat=saturationPressure(T) \"Saturation pressure\";\nalgorithm \n  X_steam := phi*k_mair/(p/psat - phi);\n\nThanks !\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 52,
            "date": "Nov 1, 2022",
            "title": "Model issues detected by unit checking ThreePhaseTwoLevel_PWM",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4054",
            "poster_name": "#4054\n            opened Nov 1, 2022 by\n            HansOlsson",
            "description": "Might add more later, but a first one is that Modelica.Electrical.PowerConverters.DCAC.Control.SVPWM used in Modelica.Electrical.PowerConverters.Examples.DCAC.PolyphaseTwoLevel.ThreePhaseTwoLevel_PWM has incorrect start-value for t0 (not only wrong unit - but wrong value).\nThe relevant parts are:\n discrete Real t0(start=samplePeriod, fixed=true) \"Relative time spans of vectors a, b, and 0\";\nalgorithm\n  when sampleTrigger then\n     t0=max(1-ta-tb,0);\n   end when;\n...\n   elseif (time - T0)/samplePeriod < (t0/4) then\n...\n\nIt is clear from both of the latter two equations as well as the description that t0 should have unit=\"1\", as it is a relative time-span.\nThat is not consistent with the start-value samplePeriod, and I would guess that a better start-value is 1.\n(I would also prefer rewriting the elseif-conditions as    elseif time < T0+samplePeriod*(t0/4) then since that is one of the forms that is discussed for time-events.)\nNote that this will only matter in weird cases, as it is only used after startTime and before the first triggering of sampleTrigger.\n(This is in addition to all the other related issues with PR.)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 53,
            "date": "Oct 27, 2022",
            "title": "Use unit consistent calculation of default machine parameters",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4050",
            "poster_name": "#4050\n            opened Oct 27, 2022 by\n            christiankral",
            "description": "As a result of modelica/ModelicaSpecification#3266 (comment), the default machine paramters shall be based on a consistent unit calculation.\nThis issue includes the following machine models:\n\nModelica.Electrical.Machines.BasicMachines\nModelica.Magnetic.FundamentalWave.BasicMachines\nModelica.Magnetic.QuasiStatic.FundamentalWave.BasicMachines\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 54,
            "date": "Oct 7, 2022",
            "title": "Units for mathematical constants?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4046",
            "poster_name": "#4046\n            opened Oct 7, 2022 by\n            mestinso",
            "description": "...reading through some of the recent activity in the Modelica spec(modelica/ModelicaSpecification#3259 and modelica/ModelicaSpecification#2127 and others), it seems like it might be a natural step to specify the units for the various mathematical constants in Modelica.Constants.\nI might propose the following, which seems a bit more correct:\nfinal constant Real e(unit=\"1\")=Modelica.Math.exp(1.0);\nfinal constant Real pi(unit=\"1\")=2*Modelica.Math.asin(1.0); // 3.14159265358979;\nfinal constant Real D2R(unit=\"rad/deg\")=pi/180 \"Degree to Radian\";\nfinal constant Real R2D(unit=\"deg/rad\")=180/pi \"Radian to Degree\";\nfinal constant Real gamma(unit=\"1\")=0.57721566490153286061\n\nWithout this step, it seems to me like we are missing out on some unit checking opportunities since the units for pi (and others) can be inferred incorrectly.\nThoughts/comments?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 55,
            "date": "Sep 18, 2022",
            "title": "Documentation of Surface visualizer is misleading",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4034",
            "poster_name": "#4034\n            opened Sep 18, 2022 by\n            anotheruserofgithub",
            "description": "There is a wording mismatch in the documentation of the Surface visualizer for the representation of surfaces.\nJust for reference, inputs and parameters of Surface are defined here, the replaceable function surfaceCharacteristic has its interface here, and the documentation of the Surface model can be found here.\nDocumentation talks about control points of the surface, but as far as I know, this terminology is only widely used in the context of B\u00e9zier/B-spline curves and surfaces.\nIn this context, however, the points described in the documentation do certainly not refer to control points (which generally do not lie on the surface), and while they may refer to knot points or knot vectors this would not account for the multiplicity of knots.\nInstead, it seems that the most widespread word defining the kind of point mentioned in the documentation is vertex (vertices in plural), as this is the atomic element used for instance by OpenGL and Vulkan to actually draw surfaces on screen.\nThis word is well suited in this context because it refers not only to the geometric coordinates of the point (X, Y, Z) but also to visual attributes like the color (C).\nI suppose the problem is because Surface was originally (intended to be) defined as a tensor product spline, but for sure this is no longer the case.\nOf course, a modeler is free to first design a tensor-product spline surface and then compute a set of vertices (by evaluating the spline at nu*nv points) in order to make use of the Surface visualizer.\nIMHO, problematic lines that should be updated are:\n\nhere nu and nv are not sets of parameters but simple parameters that define the number of vertices in each direction,\nhere \"control point\" should be changed to \"vertex\", and \"A time-varying position\" to \"Time-varying coordinates\" since a vertex is already defining a position in that sense,\nhere it is a combination of the above two amendments,\nhere again \"control point\" should be changed to \"vertex\" in two occurrences, better use \"in the form of\" rather than \"in form of\", and the reading would benefit from a line break before \"and an optional color array\",\nhere, here and here, maybe \"surface point\" should be changed to \"vertex\" as well,\nhere and here (two occurrences in each) \"points\" could be changed to \"vertices\",\nhere, here, and here, \"positions of points\" should be changed to \"coordinates of vertices\".\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 56,
            "date": "Sep 9, 2022",
            "title": "Very ill-conditioned initialization in ComparisonPullInStroke",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4029",
            "poster_name": "#4029\n            opened Sep 9, 2022 by\n            henrikt-ma",
            "description": "I'm a bit concerned regarding the initialization of Modelica.Magnetic.FluxTubes.Examples.SolenoidActuator.ComparisonPullInStroke.  When translated with System Modeler, I get a linear equation system with a condition estimate in the order of 10^15.  The equation system in question is the one with variables  der(simpleSolenoid.g_mAirWork.Phi), der(simpleSolenoid.g_mAirWork.V_m) and der(simpleSolenoid.g_mLeakWork.Phi).  The exact list of variables may vary from tool to tool, but I expect this information to be sufficient to allow others to identify which equation system I'm talking about.\nCan it be considered normal or a defect of the MSL to have such poorly conditioned equation systems?\nIn case it is considered normal, it would be interesting to hear if the developer of this model has any thoughts about how to handle such equation systems while at the same time being able to avoid arbitrary results for systems even closer to \"true\" singularity.  (I have some ad-hoc plans in mind, but their lack of elegance makes me reluctant to share them.)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 57,
            "date": "Sep 5, 2022",
            "title": "Thermodynamic inconsistency of Modelica.Media.Interfaces.PartialLinearFluid?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4028",
            "poster_name": "#4028\n            opened Sep 5, 2022 by\n            aaronAsAlways",
            "description": "Hello,\nI have been checking the simple fluid model of Modelica.Media.Interfaces.PartialLinearFluid (MSL 4.0.0) where constant coefficients kappa and beta are used to create linear relations for d(p,T) and h(p,T). It appears to me that this is thermodynamically inconsistent as it violates the relation of kappa and beta to density (i.e. the coefficient's very definition). Essentially, if one were to assume constant values of beta and kappa, one has to start from their definition equations, then integrate these (first-order differential) equations while using d(p_reference,T_reference) = d_reference as initial condition. The functional form of d(p,T) is then found to be an exponential, i.e. d=d_reference*exp(kappa*(p-p_reference)-beta*(T-T_reference)). The Taylor expansion of this solution matches the model equations Modelica.Media.Interfaces.PartialLinearFluid up to a cross-term ~(p-p_reference)*(T-T_reference), so it appears not even correct to first order. I have not yet computed enthalpy h in consistent form. Although I have not checked it, I would assume that such an inconsistency should lead to violations of mass and/or energy conservation depending on the process that is being simulated. What do you think?\nAaron\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 58,
            "date": "Aug 31, 2022",
            "title": "Obsolete tool-specific hack in 'state1' and friends?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4026",
            "poster_name": "#4026\n            opened Aug 31, 2022 by\n            henrikt-ma",
            "description": "What lies behind these function dummy inputs (here from the function Modelica.Blocks.Interfaces.Adaptors.Functions.state1)?\n\n\n\nModelicaStandardLibrary/Modelica/Blocks/Interfaces.mo\n\n\n        Lines 1647 to 1648\n      in\n      3a5289d\n\n\n\n\n\n\n input Real dummy \n\n\n\n \"Just to have one input signal that should be differentiated to avoid possible problems in the Modelica tool (is not used)\"; \n\n\n\n\n\nPerhaps the time is ripe for removing them (tools should have had ample time to fix the problem).  If not, I suppose the problem is so tricky to deal with that the documentation should go more into details about why they are still needed.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 59,
            "date": "Jul 30, 2022",
            "title": "Clocked.Sampler.SuperSampleInterpolated possibly unwanted behaviour",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4016",
            "poster_name": "#4016\n            opened Jul 30, 2022 by\n            julius-frenzel",
            "description": "Hi there,\n(I hope, this is the right place to post this)\nI have stumbled across some strange behavior in said class when trying to implement a time-discrete simulation.\nIt seems like the integer variable \"ticks\" constantly is 1 greater than its intended value. This leads to a misalignment between the fraction used to calculate the interpolated output and the input. The interpolated output is therefore not as \"smooth\" as it should be.\nI tried solvers DASSL and CVODE in OpenModelica. Attached is a picture of the issue, where \"Ueberabtastung_s_set\" is an instance of the class.\nI haven't found a proper fix for the issue. However, if I let \"ticks\" start at -1, I get nearly the desired behavior (the output should be offset by one step vertically).\nI.e.change line \"Integer ticks(start=0);\" to \"Integer ticks(start=-1);\"\nI attached a picture of this as well.\nThe proposed solution works well enough for me right now, but I wanted to report this anyway...\nBest\nJulius\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 60,
            "date": "Jul 16, 2022",
            "title": "regStep and smoothStep",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4013",
            "poster_name": "#4013\n            opened Jul 16, 2022 by\n            sertho",
            "description": "Whenever I need utility functions for example to regularize a characteristic I search within the Media and the Fluid libraries. I found that these two functions do the same:\n\nModelica.Fluid.Utilities.regStep\nModelica.Media.Common.smoothStep\n\nIs there any plan to create a new package where all these utility functions are gonna be collected? (maybe within Math.Numerics or similar)\nIt would make it much more easy for the users to find adequate functions for this kind of problems.\nIs there a function within the MSL similar to smoothStep, but with monotonicity ensured (e.g. using hermite splines for monotone cubic interpolation)?\nI found something similar in the Buildings library:\nhttps://simulationresearch.lbl.gov/modelica/releases/v9.0.0/help/Buildings_Utilities_Math_Functions.html#Buildings.Utilities.Math.Functions.smoothInterpolation\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 61,
            "date": "Jun 28, 2022",
            "title": "PartialMedium.Input* connectors should use Medium. types, not SI.",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4005",
            "poster_name": "#4005\n            opened Jun 28, 2022 by\n            bilderbuchi",
            "description": "Observed problem\nI tried to trace a puzzling inconsistency in nominal pressure values in a model.\nTo demonstrate, e.g. simulate Modelica.Fluid.Examples.PumpingSystem (MSL 4.0.0) with warnings for aliases with conflicting values activated (e.g. OpenModelica -d=aliasConflicts)\nI am seeing, among other warnings, this:\nTranslation Warning\nAlias set with conflicting nominal values\n\nCandidate: pumps.medium.sat.psat(nominal = 1000000.0, confidence number = 9)\nCandidate: pumps.heatTransfer.states[1].p(nominal = 1000000.0, confidence number = 9)\nCandidate: pumps.monitoring.state.p(nominal = 1000000.0, confidence number = 9)\nCandidate: pumps.medium.state.p(nominal = 1000000.0, confidence number = 9)\nCandidate: pipe.flowModel.states[1].p(nominal = 1000000.0, confidence number = 9)\nCandidate: pipe.port_a.p(nominal = 1000000.0, confidence number = 8)\nCandidate: pumps.port_b.p(nominal = 1000000.0, confidence number = 8)\nCandidate: pumps.medium.p(nominal = 100000.0, confidence number = 8)\n=> Select value from pumps.medium.p(nominal = 100000.0) for variable: pumps.medium.p\n\nI emphasized the only nominal value that is in disagreement, for pumps.medium.p.\nExpected behaviour\nAvoid conflicting values that need resolution when using MSL models.\nAnalysis\nI traced this back (I think) to the fact that in Modelica.Media.Interfaces.PartialMedium.BaseProperties here, we have\nconnector InputAbsolutePressure = input SI.AbsolutePressure\n      \"Pressure as input signal connector\";\n\nwhich is used to define p for a medium: InputAbsolutePressure p \"Absolute pressure of medium\";\nThe difference becomes visible when concrete Medium models (in this case Modelica.Media.Water.StandardWaterOnePhase) define their AbsolutePressure with a nominal value different from SI.AbsolutePressure.\nProposed resolution\nI think the connector definition in PartialMedium should use the AbsolutePressure type already available within it (via the extends Modelica.Media.Interfaces.Types;) instead of the one from SI:\nconnector InputAbsolutePressure = input AbsolutePressure\n      \"Pressure as input signal connector\";\n\nThe same approach is probably valid for other SI.-prefixed types used, like InputSpecificEnthalpy. I suspect that could solve a lot of the other present alias conflicts, but I have not done any investigation on that.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 62,
            "date": "Jun 25, 2022",
            "title": "Declare parameter records as replaceable?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4003",
            "poster_name": "#4003\n            opened Jun 25, 2022 by\n            AHaumer",
            "description": "Recently I had a discussion with @casella and @perost about parameter records, as used in Modelica.Magnetic.FluxTubes.\nAs today, the parameter record is instantiated as\n  parameter FluxTubes.Material.SoftMagnetic.BaseData material=Material.SoftMagnetic.BaseData()\n    annotation (choicesAllMatching=true);\n\nA tool is free to extend the standard and present a drop-down menu, modifying the parameter material with a record constructor\n  component(material=Modelica.Magnetic.FluxTubes.Material.SoftMagnetic.ElectricSheet.M350_50A())\nAs @casella pointed out, the specification is very clear:\n\nOnly classes and components declared as replaceable can be redeclared with a new type, which must have an interface compatible with the constraining interface of the original declaration, and to allow further redeclarations one must use redeclare replaceable.\n\nAs @perost pointed out, the specification currently only specifies the use of choicesAllMatching on replaceable elements,\nSo the point is: Either should the specification get extended to use choicesAllMatching for modifying parameters, too, or we should use in MSL the following instantiation:\n  replaceable parameter FluxTubes.Material.SoftMagnetic.BaseData material=Material.SoftMagnetic.BaseData()\n    annotation (choicesAllMatching=true);\n\ncausing the tool to use a redeclaration:\n  component(redeclare Modelica.Magnetic.FluxTubes.Material.SoftMagnetic.ElectricSheet.M350_50A material);\nDifferent tools should offer the same behaviour for MSL models. What's your opinion?\nI suppose the issue should get discussed in MAP-Lang and MAP-Lib.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 63,
            "date": "Jun 24, 2022",
            "title": "StateGraph example event handling clarification",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4002",
            "poster_name": "#4002\n            opened Jun 24, 2022 by\n            Maplesoft-fmigroup",
            "description": "We have identified an issue in some StateGraph example models that can affect the simulation result depending on the order\nin which the events get handled. We are looking for clarification on the event firing order.\nSpecifically, looking at the FirstExample_Variant2 model, we have the following equations (post trivial simplification):\nEvents:\nEvent trigger#1: transition2.localCondition := greaterEqual.u >=1\nEvent trigger#2: RVAR := transition1.t_start + 1 <= T\nContinuous equation:\ngreaterEqual.u := IF(step.localActive=true, T-timer.entryTime, 0.0)\nSubset of discrete equations:\nstep.localActive    := pre(step.newActive)\ntimer.entryTime     := WHEN(step.localActive, timer.entryTime=T)\ntransition1.t_start  := WHEN(transition1.enableFire, transition1.t_start=T)\nPrior to any events firing at T=2.0, these are valued at:\ntransition2.localCondition := false\nRVAR := true\nstep.localActive    := true\ntimer.entryTime     := 1.0\ntransition1.t_start  := 0.0\nAt T=2.0 the continuous part evaluates to:\ngreaterEqual.u := 1.0\nWith the above values, event trigger #1 fires, which results in the following values at the end of the discrete event iteration:\ntransition2.localCondition := true\nRVAR := true\nstep.localActive    := false\ntimer.entryTime     := 1.0\ntransition1.t_start  := 2.0\nNow if we handle event trigger #2 before evaluating the continuous equation then the simulation result is 'as expected'.\nThe problem is that if we evaluate the continuous part before handling trigger #2 then:\ngreaterEqual.u := 0.0\nand then both event trigger #1 and #2 switch from true to false.  This causes step.localActive  to switch back to true and thus the pulse of step.localActive remains in the ON position past T=2.0.\nWhat is the expected event handling behaviour when two events fire at the same time point?\nIs it acceptable to perform continuous evaluation after the first event has been handled or does the second event need to be serviced prior to continuous evaluation?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 64,
            "date": "Jun 23, 2022",
            "title": "HTML issue in Modelica.UsersGuide.ReleaseNotes.Version_1_5",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4001",
            "poster_name": "#4001\n            opened Jun 23, 2022 by\n            FadyNassif",
            "description": "Hello,\nThe content of the hmtl doesn't respect the HTML language, it contains HTML reserved characters in particular < >\nExample:\nL 7669: // parameter SIunits.Time startTime[:]={0} \"Output = offset for time < startTime\";\nShould be\n// parameter SIunits.Time startTime[:]={0} \"Output = offset for time &lt; startTime\";\nLine 7683\nBug in getInterpolationCoefficients for startTime **<>** 0 fixed:\nshould be\nBug in getInterpolationCoefficients for startTime **&lt;&gt;** 0 fixed:\nDouble quotes should also be fixed but this is in the hole documentation and not only in that file.\nPlease refer to the https://www.html.am/reference/html-special-characters.cfm for more information on the html reserved characters.\nThanks\nFady\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 65,
            "date": "Jun 21, 2022",
            "title": "Unclear behaviour of Mechanics.Rotational.Components.LossyGear",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/4000",
            "poster_name": "#4000\n            opened Jun 21, 2022 by\n            AHaumer",
            "description": "Can anybody tell me whether I'm using the LossyGear in a wrong way, or this is a bug in LossyGear?\nI want to model a gear with constant efficiency eta. For eta=1 I get the expected result.\nFor eta=0.85 the torque from both sides (drive and load) seem to get absorbed by the LossyGear, the mass won't move.\nHubtisch.zip\n.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 66,
            "date": "Jun 17, 2022",
            "title": "Silent error handling for Modelica.Utilities.Files.copy",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3996",
            "poster_name": "#3996\n            opened Jun 17, 2022 by\n            GarronFish",
            "description": "The Modelica.Utilities.Files.copy command currently causes an error which halts any function that is being run.  It would be useful to have an option in Modelica.Utilities.Files.copy where the errors could be displayed and an error code (or error status and error message) returned from the copy function and the calling function determine what action to take.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 67,
            "date": "Jun 15, 2022",
            "title": "Change record name form MuMetall to MuMetal",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3995",
            "poster_name": "#3995\n            opened Jun 15, 2022 by\n            christiankral",
            "description": "In the next major release with conversion script the German record name Modelica.Magnetic.FluxTubes.Material.SoftMagnetic.NickelIron.MuMetall shall be changed to Modelica.Magnetic.FluxTubes.Material.SoftMagnetic.NickelIron.MuMetal, see https://en.wikipedia.org/wiki/Mu-metal\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 68,
            "date": "Jun 13, 2022",
            "title": "Truncated prefix of \"Modelica\" in metadata",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3994",
            "poster_name": "#3994\n            opened Jun 13, 2022 by\n            henrikt-ma",
            "description": "It looks like there's a truncated \"Modelica\" \u2192 \"Ica\" in some metadata picked up by Google:\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 69,
            "date": "Jun 10, 2022",
            "title": "Transparency input for all MultiBody visualizers",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3992",
            "poster_name": "#3992\n            opened Jun 10, 2022 by\n            anotheruserofgithub",
            "description": "Feature Request\nThere are use cases where it could be great to be able to change the transparency of any visualizers in the animation window.\nFor instance, OMEdit allows to do that through a context menu (see OpenModelica/OpenModelica#9083), but this has to be done each time you simulate the model as the values are not persisted.\nInstead, it would be very useful to have a parameter, or even a time-varying input, that can be set in the model directly.\nSurface already has that, but not Shape nor Vector, while I do not see what could prevent them from having such a feature.\nThey all have a color, so why not a transparency?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 70,
            "date": "May 1, 2022",
            "title": "Icon and Diagram color of Modelica.Icons.SignalBus, SignalSubBus",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3978",
            "poster_name": "#3978\n            opened May 1, 2022 by\n            AHaumer",
            "description": "Extending from the above mentioned icons, it would be nice to be able to use different colours for different busses.\nI tried different solutions but didn't find a real nice one.\nHow is it possible to choose the colour of the icon and diagramm when extending from Modelica.Icons.{SignalBus, SignalSubBus}?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 71,
            "date": "Apr 27, 2022",
            "title": "Rotational freewheel",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3977",
            "poster_name": "#3977\n            opened Apr 27, 2022 by\n            AHaumer",
            "description": "I see that we have a rather sophisticated Mechanics.Rotational.Components.OneWayClutch, but no simple ideal freewheel (like the Electrical.Analog.Ideal.Diode). We could introduce such a component for usage e.g. in bicycle models. Any comments?\n@dietmarw @tobolar @MartinOtter @christiankral what's your opinion?\nFreeWheel.zip\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 72,
            "date": "Apr 7, 2022",
            "title": "Overriding final parameters",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3970",
            "poster_name": "#3970\n            opened Apr 7, 2022 by\n            HansOlsson",
            "description": "Reverting #1783 change implies that we have a number of final parameters that are part of records where the entire record gets a new value.\nIn most cases it's the same value (since the new record is using the same record class), and it could be that we should refine the specification to handle that better; that's a separate issue.\nHowever, in Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.InductionMachines.ComparisonPolyphase.IMC_DOL_Polyphase the value of aimcM.statorCoreParameters.m is 3 - which is unusual for a 5-phase machine.\nThere are at least 4 models with this mismatch in MSL, all in ComparisonPolyphase packages specifically:\n\nAll 3 models in Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.InductionMachines.ComparisonPolyphase\nModelica.Magnetic.FundamentalWave.Examples.BasicMachines.SynchronousMachines.ComparisonPolyphase.SMPM_Inverter_Polyphase\n\nSince they are intended for comparison it doesn't seem that critical - it more means that one variant works and the other does not.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 73,
            "date": "Apr 1, 2022",
            "title": "Improve error handling of loadResource()",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3969",
            "poster_name": "#3969\n            opened Apr 1, 2022 by\n            GarronFish",
            "description": "Currently when Modelica.Utilities.Files.loadResource() is used with a URL that is not found the URL is returned.  It would be useful if a status flag was also returned and the directory for the resource returned was an empty string.\nFor example:\nModelica.Utilities.Files.loadResource(\"modelica:\\ThisURLIsNot\\An\\Existing\\File\\OrDirectory\") currently would return:\n\"modelica:\\ThisURLIsNot\\An\\Existing\\File\\OrDirectory\"\nAn improvement would be:\n(resourcePath,status)=Modelica.Utilities.Files.loadResource(\"modelica:\\ThisURLIsNot\\An\\Existing\\File\\OrDirectory\");\nwould return:\nresourcePath=\"\"\nstatus=false\nThis ticket is requested by a Dymola customer that thought that the error handling of loadResource() should be improved.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 74,
            "date": "Mar 16, 2022",
            "title": "How can I display the input item of \"nports\"  in the parameter window ?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3962",
            "poster_name": "#3962\n            opened Mar 16, 2022 by\n            geewook100",
            "description": "I am modeling a piping system using the modelica.fluid library. I need to enter the number of ports, but I can't find the input item of \"nports\" in the parameter window of component. How can I display the input item of \"nports\"  in the parameter window ?\nIs there only one way to edit the source file to enter the number of ports?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 75,
            "date": "Feb 16, 2022",
            "title": "How to specify models that are meant to fail in a specific way in ModelicaTest?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3950",
            "poster_name": "#3950\n            opened Feb 16, 2022 by\n            casella",
            "description": "The ModelicaTest library contains a large number of test cases that are meant to test the behaviour of components of the MSL. They can of course also help to assess the quality of implementation of Modelica tools, based on their ability to run them successfully.\nThe convention, explicitly stated in the documentation, is that all models that are meant to be run have an experiment(StopTime) annotation. The implicit understanding is that all such models should run successfully. In fact, it could make a lot of sense to also include models that are expected to fail in a specific way, e.g. because of assertion violations, to test that such failures are indeed happening as expected and reported to the end user in a meaningful way.\nThis of course could also be useful for other libraries beyond ModelicaTest, but I understand ModelicaTest should set the standard bye example.\nNow, the ModelicaCompliance library already provides a similar feature by means of __ModelicaAssociation(TestCase) annotations. From the examples I see there, I understand this annotation has two fields, a Boolean shouldPass and a String section. The first declares whether the model is expected to pass or fail, and the second declares the relevant section of the specification in case of failure.\nThe first question is: where are these annotations defined? I couldn't find that anywhere. Or is the definition implicit in how we use them for ModelicaCompliance?\nThe second question, which is much broader, is: how could we extend it for simulation tests, in a way that is more informative than just pass/fail, but still tool-independent?\nOne simple proposal for simulation models could be the following:\nFor models with an experiment(StopTime) annotation, the default behaviour is that the model simulates successfully until the required StopTime, producing some simulation results. In case a model is instead expected to fail, the expected failure mode can be declared with\nannotation(__ModelicaAssociation(TestCase(\n  shouldInitialize = <Boolean, default = true>,\n  shouldSimulate = <Boolean, default = true>,\n  failureDescription = <String, default = \"\">)));\nshouldInitialize = true means that an initial solution should be found. Otherwise, shouldInitialize = false means that the model should not reach the point where the initial solution is computed, for some reason, e.g. assertion violation. It is not really possible to distinguish between compile-time and run-time failures, because that depends on which parameter evaluation policy a specific tool chooses.\nshouldSimulate = true means that the model should simulate successfully until StopTime, or until terminate() is called.  Otherwise, shouldSimulate = false means that the simulation won't be able to reach StopTime. If shouldInitialize = true, this means there must be a failure at some point during the simulation, e.g. because of an assert violation, otherwise the failure is expected to be during initialization or compilation.\nIn case of specified failure of any kind, failureDescription should contain a textual description of the reason of failure. I'd say that trying to specify this further in a tool-independent way is hopeless, but I guess tool vendors could manually check once that the output of their tool is consistent with that description, and then just do standard regression testing on their tool's output.\nWhat do you think?\nAdding @HSchatzTLK to the discussion, since he made the initial suggestion to make this possible.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 76,
            "date": "Feb 10, 2022",
            "title": "Support Unicode Strings in MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3946",
            "poster_name": "#3946\n            opened Feb 10, 2022 by\n            HansOlsson",
            "description": "Based on allowing Unicode strings in Modelica Language MO#3079\nWe should ideally also support that in MSL, as far as I can see there are two major issues:\n\n String handling should document that sub-string handling etc only work reliably when breaking at ASCII characters (and possibly at first UTF-8 character). To me that is primarily a documentation issue.\n File handling routines should accept file names encoded using UTF-8. (This can occur before allowing Unicode strings in models since loadResource could reference a package stored in a Unicode-named directory.)\n\nNotes:\n\nThe code in ModelicaStrings.c uses proper casts to (unsigned char) for isalpha etc, so it should work.\nThus using Modelica.Utilities.Strings.scanToken(\"\\\"\u20ac2\u00c5\u00c4\u00d6\\\"\"); does actually work already.\nIf the intended use is to produce good text-tables of results and substrings are used for alignment/truncating it will fail miserably for Unicode and one would need significantly more advanced string-handling. Merely counting Unicode-characters isn't enough due to combining characters. A good work-around is to generate HTML-tables instead.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 77,
            "date": "Feb 8, 2022",
            "title": "Bug in the SharpEdgedOrifice for Loss factors",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3944",
            "poster_name": "#3944\n            opened Feb 8, 2022 by\n            AlesVojacek",
            "description": "The Modelica.Fluid.Fittings.SharpEdgedOrifice using Modelica.Fluid.Fittings.BaseClasses.QuadraticTurbulent.LossFactorData.sharpEdgedOrifice for calculation of Loss factors zeta1 (for design flow) and zeta2 (for reverse flow) seems to be wrong when it compares to Idelchik.\nOne way to fix it:\ndata.zeta1 and data.zeta2 in the algorithm section of Modelica.Fluid.Fittings.BaseClasses.QuadraticTurbulent.LossFactorData.sharpEdgedOrifice shall be rewritten to:\ndata.zeta1 := ((1 - D_rel^2) + 0.707*(1 - D_rel^2)^0.375)^2*(1/D_rel^2)^2;\ndata.zeta2 := (k*(1 - D_rel^2)^0.75 + (1 - D_rel^2)^2 + 2*sqrt(k*(1 -D_rel^2)^0.375) + (1 - D_rel^2))*(1/D_rel^2)^2;\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 78,
            "date": "Jan 17, 2022",
            "title": "Leftovers in Modelica.Mechanics.MultiBody.World from adding vector visualizer?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3934",
            "poster_name": "#3934\n            opened Jan 17, 2022 by\n            otronarp",
            "description": "There seems to be some leftovers in Modelica.Mechanics.MultiBody.World after adding vector visualizers in #2501.\nShouldn't defaultN_to_m and defaultNm_to_m be removed from Modelica.Mechanics.MultiBody.World since it's up to the tool to scale force and torque vectors?\n\n\n\nModelicaStandardLibrary/Modelica/Mechanics/MultiBody/package.mo\n\n\n         Line 140\n      in\n      40e8cf6\n\n\n\n\n\n\n parameter Real defaultN_to_m(unit=\"N/m\", min=0) = 1000 \n\n\n\n\n\n\n\n\nModelicaStandardLibrary/Modelica/Mechanics/MultiBody/package.mo\n\n\n         Line 143\n      in\n      40e8cf6\n\n\n\n\n\n\n parameter Real defaultNm_to_m(unit=\"N.m/m\", min=0) = 1000 \n\n\n\n\n\nIf tools are expected to honor the defaultArrowDiameter that should be documented somewhere, if not the description is misleading since it gives the impression that it's used for force/torque/sensor vectors.\n\n\n\nModelicaStandardLibrary/Modelica/Mechanics/MultiBody/package.mo\n\n\n         Line 131\n      in\n      40e8cf6\n\n\n\n\n\n\n parameter SI.Length defaultArrowDiameter=nominalLength/40 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 79,
            "date": "Jan 16, 2022",
            "title": "Vector/arrow visualization",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3931",
            "poster_name": "#3931\n            opened Jan 16, 2022 by\n            beutlich",
            "description": "Even after reading #2501 (where the arrow visualization was refactored to utilize the newly introduced Vector visualizer) I cannot comprehend why the diameter visualization was removed.\nFor the following example model the arrow visualization of both the SignalArrow and AbsoluteSensor works well with MSL v3.2.3. After conversion to MSL v4.0.0 the arrow visualization is missing (when tested in Dymola and SystemModeler). Also the arrow diameter cannot be set.\nmodel Unnamed\n  inner Modelica.Mechanics.MultiBody.World world(animateWorld=false, animateGravity=false, label2=\"z\", label1=\"x\", n={0,0,-1})\n    annotation(Placement(transformation(origin={-110, 30}, extent={{-10, -10}, {10, 10}})));\n  Modelica.Mechanics.MultiBody.Joints.Revolute revolute1(n={0, 1, 0})\n    annotation(Placement(transformation(origin={-50, 30}, extent={{-10, -10}, {10, 10}})));\n  Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation1(r={0, -1, 0}, animation=false)\n    annotation(Placement(transformation(origin={10, 72.396}, extent={{-10, -10}, {10, 10}})));\n  Modelica.Mechanics.MultiBody.Parts.PointMass pointMass1(m=1)\n    annotation(Placement(transformation(origin={52.304, 30}, extent={{-10, -10}, {10, 10}})));\n  Modelica.Mechanics.MultiBody.Visualizers.SignalArrow signalArrow1(diameter=0.008)\n    annotation(Placement(transformation(origin={85, 55}, extent={{-10, -10}, {10, 10}})));\n  Modelica.Mechanics.MultiBody.Parts.FixedTranslation fixedTranslation2(r={1, 0, 0}, animation=false)\n    annotation(Placement(transformation(origin={17.792, 30}, extent={{-10, -10}, {10, 10}})));\n  Modelica.Mechanics.MultiBody.Sensors.AbsoluteSensor absoluteSensor1(get_r=true, resolveInFrame=Modelica.Mechanics.MultiBody.Types.ResolveInFrameA.world, arrowDiameter=0.008, arrowColor={255, 0, 255}) \n    annotation(Placement(transformation(origin={45, -21.932}, extent={{-10, -10}, {10, 10}})));\nequation \n  connect(revolute1.frame_a, world.frame_b) annotation(Line(origin={-80, 30}, points={{20, 0}, {-20, -0}}));\n  connect(revolute1.frame_b, fixedTranslation2.frame_a) annotation(Line(origin={-16.104, 30}, points={{-23.896, 0}, {23.896, 0}}));\n  connect(fixedTranslation1.frame_a, world.frame_b) annotation(Line(origin={-27.5, 51.198}, points={{27.5, 21.198}, {22.5, 21.198}, {22.5, -21.198}, {-72.5, -21.198}}));\n  connect(absoluteSensor1.r, signalArrow1.r_head) annotation(Line(origin={60, -16.449}, points={{-25, -16.483}, {-25, -21.483}, {25, -21.483}, {25, 59.449}}));\n  connect(fixedTranslation1.frame_b, signalArrow1.frame_a) annotation(Line(origin={36.25, 63.698}, points={{-16.25, 8.698}, {-11.25, 8.698}, {-11.25, -8.698}, {38.75, -8.698}}));\n  connect(fixedTranslation2.frame_b, pointMass1.frame_a) annotation(Line(origin={40.048, 30}, points={{-12.256, 0}, {12.256, 0}}));\n  connect(absoluteSensor1.frame_a, pointMass1.frame_a) annotation(Line(origin={39.922, -5.546}, points={{-4.922, -16.386},{-9.922,-16.386},{-9.922,-1.386},{12.382,-1.386},{12.382,35.546}}));\n  annotation(uses(Modelica(version=\"3.2.3\")), Diagram(coordinateSystem(extent={{-150, -90}, {150, 90}}, preserveAspectRatio=true, initialScale=0.1, grid={5, 5})), Icon(coordinateSystem(extent={{-100, -100}, {100, 100}}, preserveAspectRatio=true, initialScale=0.1, grid={5, 5}), graphics={  Rectangle(lineColor={0, 114, 195}, fillColor={255, 255, 255}, extent={{-100, -100}, {100, 100}}, radius=25), Text(textColor={64, 64, 64}, extent={{-150, 110}, {150, 150}}, textString=\"%name\")}));\nend Unnamed;\nThe issue was originally reported at https://stackoverflow.com/q/70534059/8520615 by @drthegirlfriend.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 80,
            "date": "Dec 22, 2021",
            "title": "Release cycle of MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3925",
            "poster_name": "#3925\n            opened Dec 22, 2021 by\n            AHaumer",
            "description": "Some time ago we discussed the release cycle of the Modelica Standard library.\nIt seems that we are making no progress (latest release: 4.0.0, 2020-06-04).\nThat means, we have for 1 1/2 years no new release.\nWhen during everyday's work with students I stumble upon a model or block that is missing in MSL or that could be improved, I create a PR. But having the new or improved model \"at your fingertips\" (i.e. in the latest MSL delivered with your simulator) takes too long. You have to store a copy of the model that eventually is included in the MSL at some time in future, and keep this copy aligned with the PR to continue with your work and keep your work compliant with future versions of MSL.\nEven worse: We have PRs that are not reviewed for a long time.\nOf course discussion about a PR is highly appreciated, but getting no review is demotivating.\nWhat could we do, what should we do to improve the situation?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 81,
            "date": "Dec 14, 2021",
            "title": "Modelica.Fluid uses non-SI units",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3917",
            "poster_name": "#3917\n            opened Dec 14, 2021 by\n            DagBruck",
            "description": "Examples in Modelica-Fluid use non-SI units as parameters, for example N_nominal in Modelica.Fluid.Machines.BaseClasses.PartialPump and N_const in Modelica.Fluid.Machines.PrescribedPump.\nIt would be desirable to replace them with SI unit-based type, possibly with an appropriate display unit.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 82,
            "date": "Dec 3, 2021",
            "title": "Breaking ModelicaServices cyclic dependency on Modelica",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3909",
            "poster_name": "#3909\n            opened Dec 3, 2021 by\n            sjoelund",
            "description": "Currently, ModelicaServices is backwards compatible with older versions of itself and has noneFromVersion conversion annotations. However, it has a uses-annotation on Modelica which in turn has a uses-annotation on ModelicaServices. This means that it is not possible to have for example Modelica 3.2.2 loaded with ModelicaServices 3.2.3 or 4.0.0.\nThere are some interfaces in MSL that are used as well as some icons, but I believe these would work just as well if they were put into ModelicaServices and if the uses-annotation was removed, it would instantly be possible to load a more recent ModelicaServices if needed.\nThe disadvantage would be that some form of sanity check from MSL's point of view would be lost and it would need to rely on ModelicaServices version/conversion annotations being correct.\nThis might for example make it possible for a Modelica tool vendor to ship only 1 version of ModelicaServices that is compatible with all previous MSL versions using ModelicaServices. It would also make package management easier.\nI should note that I have not tested such changes, but would like a discussion to see if this would be something we are interested in changing (and would perform tests on any pull request I create for this).\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 83,
            "date": "Nov 29, 2021",
            "title": "Issues with Modelica.Blocks.Math.ContinuousMean",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3906",
            "poster_name": "#3906\n            opened Nov 29, 2021 by\n            HansOlsson",
            "description": "I see two problems:\n\nIt is not possible to set another startTime as for most blocks, see https://stackoverflow.com/questions/70124980/dymola-modelica-how-can-i-calculate-the-mean-of-a-signal-only-in-the-steady-st/70127878 (a previous issue was that startTime had no effect).\nIt is using an odd formula - without any explanation. I would guess it is for performance reasons, but I don't see that it actually gains anything. It might also be to gain precision - see comments at the end. The downside of the formulation is that it has a singularity that will mess with integrators, even if worked around.\n\n\n\n\nModelicaStandardLibrary/Modelica/Blocks/Math.mo\n\n\n        Lines 2318 to 2319\n      in\n      8d09081\n\n\n\n\n\n\n der(mu) = noEvent(if time >= t_0 + t_eps then (u-mu)/(time-t_0) else 0); \n\n\n\n y       = noEvent(if time >= t_0 + t_eps then mu                else u); \n\n\n\n\n\nI would propose the simpler:\n  parameter Real startTime=0;\nprotected \n  Real mu(start=0, fixed=true) \"Internal integrator variable\";\nequation \n  der(mu) = if time>=startTime then u else 0;\n  y       = noEvent(if time > startTime + t_eps then mu/(time-startTime) else u);\n\nBasically just integrating the signal and dividing by time.\nNote that we can safely skip \"t_eps\" with this formulation due to the subtle change.\nIf we for some reason really need the extra precision I would propose switching between the two formulas after some time, i.e. use the simple formula for the first part and then switch to the current formula.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 84,
            "date": "Nov 24, 2021",
            "title": "CombiTimeTable does not have the ability to find max/min ordinate (y) value",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3900",
            "poster_name": "#3900\n            opened Nov 24, 2021 by\n            electricitybender",
            "description": "Tables in ModelicaStandardTables.c (in particular the source block CombiTimeTable) can find the maximum and minimum abscissa (x-value, or 'time'), but cannot find the maximum and minimum ordinate (y-value, or 'data'). I would like to ask if there is any limitation or consideration keeping such a functionality from being implemented; there can be situations where knowing the min/max values inside an input table is useful before the timestepping has started.\nI managed to make a copy of Modelica.Blocks.Sources.CombiTimeTable, add another parameter inside and call an external C function maximimValue as shown below.\nexternal_C_code_additon.c:\n/* redefine calls locally */\n#define TABLE_ROW0(j) table[j]\n#define TABLE_COL0(i) table[(i)*nCol]\n\n/* make some local definitions just as in the original, for the function to work */\ntypedef size_t Interval[2];\n\ntypedef struct CombiTimeTable {\n    char* key; /* Key consisting of concatenated names of file and table */\n    double* table; /* Table values */\n    size_t nRow; /* Number of rows of table */\n} CombiTimeTable;\n\n/* function */\ndouble maximumValue(void* _tableID) {\n    double yMax = 0.;\n    CombiTimeTable* tableID = (CombiTimeTable*)_tableID;\n    if (NULL != tableID && NULL != tableID->table) {\n        const double* table = tableID->table;\n        const size_t nRow = tableID->nRow;\n        yMax = TABLE_ROW0(0);\n        int i;\n        for (i = 1; i < nRow; i++) {\n        \tif (TABLE_ROW0(i) > yMax) {\n        \t\tyMax = TABLE_ROW0(i);\n        \t}\n        }\n    }\n    return yMax;\n}\n\nThis will probably work for my project. I wasn't able to edit the ModelicaStandardTables .c and .h files as it appears they are precompiled in OpenModelica - no changes seemed to be reflected in my test models.\nUnless there are objections, I may fork this repo and produce a pull request. (I am not familiar with development for MSL so it might take a while to be able to test the functionality properly). This might be same for all other MSL table blocks but I have not explored them.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 85,
            "date": "Oct 22, 2021",
            "title": "SweptVolume should have two Translational Flanges",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3883",
            "poster_name": "#3883\n            opened Oct 22, 2021 by\n            jonas-hagen",
            "description": "The current Modelica.Fluid.Machines.SweptVolume has a single Flange_b and an arrow, but is missing a Flange_a.\nI tried to make a model where one SweptVolume drives another one, such that they act against each another (think along the lines of der(SweptVolume1.V) = - der(SweptVolume2.V)). This seemed not to be possible with the one-flanged Modelica.Fluid.Machines.SweptVolume and I just could not interpret the meaning of the arrow in this context.\nI came up with the following Model, which extends Modelica.Mechanics.Translational.Interfaces.PartialCompliant and thus has two flanges and an arrow. This solved my problem (see image below) and in my opinion makes it much easier to understand the arrow and combine this element with other Translational models.\nHere is my alternative swept volume:\nmodel SweptVolumeAlternative\n  \"Varying cylindric volume depending on the position of the piston\"\n  extends Modelica.Mechanics.Translational.Interfaces.PartialCompliant;\n  import Modelica.Constants.pi;\n  import SI = Modelica.Units.SI;\n\n  parameter SI.Area pistonCrossArea \"Cross sectional area of piston\";\n  parameter SI.Volume clearance \"Remaining volume at zero piston stroke\";\n\n  SI.Volume V \"Fluid volume\";\n\n  // Mass and energy balance, ports\n  extends Modelica.Fluid.Vessels.BaseClasses.PartialLumpedVessel(\n    final fluidVolume = V,\n    heatTransfer(surfaceAreas={pistonCrossArea+2*sqrt(pistonCrossArea*pi)*(s_rel+clearance/pistonCrossArea)}));\n\nequation\n  assert(s_rel >= 0, \"Piston stroke (given by s_rel) must not be smaller than zero!\");\n\n  // volume size\n  V = clearance + s_rel * pistonCrossArea;\n\n  0 = f + (medium.p - system.p_ambient) * pistonCrossArea;\n\n  // energy balances\n  Wb_flow = medium.p * pistonCrossArea * (-der(s_rel));\n\n  // definition of port pressures\n  for i in 1:nPorts loop\n    vessel_ps_static[i] = medium.p;\n  end for;\n\n  annotation (\n    Icon(graphics = {Polygon(lineColor = {95, 95, 95}, fillColor = {135, 135, 135}, fillPattern = FillPattern.Backward, points = {{-52, 62}, {-48, 62}, {-48, -30}, {-52, -30}, {-52, 62}}), Line(visible = false, points = {{-100, 0}, {-52, 0}}, color = {198, 0, 0}), Polygon(lineColor = {95, 95, 95}, fillColor = {135, 135, 135}, fillPattern = FillPattern.Backward, points = {{-48, -90}, {48, -90}, {48, 70}, {52, 70}, {52, -94}, {-52, -94}, {-52, 70}, {-48, 70}, {-48, -90}}), Rectangle(lineColor = {95, 95, 95}, fillColor = {135, 135, 135}, fillPattern = FillPattern.Forward, extent = {{-48, 40}, {48, 30}}), Polygon(origin = {70, 14}, lineColor = {95, 127, 95}, fillColor = {95, 127, 95}, fillPattern = FillPattern.Solid, points = {{15, 0}, {-15, 10}, {-15, -10}, {15, 0}}), Polygon(lineColor = {95, 95, 95}, fillColor = {135, 135, 135}, fillPattern = FillPattern.Backward, points = {{48, 60}, {52, 60}, {52, -34}, {48, -34}, {48, 60}}), Rectangle(lineColor = {0, 0, 255}, fillColor = {170, 213, 255}, pattern = LinePattern.None, fillPattern = FillPattern.Solid, lineThickness = 1, extent = {{-50, 36}, {50, -90}}), Text(lineColor = {0, 0, 255}, extent = {{-150, 110}, {150, 150}}, textString = \"%name\"), Rectangle(lineColor = {95, 95, 95}, fillColor = {135, 135, 135}, fillPattern = FillPattern.Forward, extent = {{-6, 92}, {6, 40}}), Line(origin = {-26.7511, 10.9537}, points = {{-40, 2}, {86, 2}}, color = {95, 127, 95})}));\n\nend SweptVolumeAlternative;\nIf anyone happens to know how to deal with the overlapping HeatPort_a and Flange_a on the left side of the Icon, please leave a comment!\n\nWhat are your thoughts on that? Any chance that something like that could be included in the MSL?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n bilderbuchi reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 86,
            "date": "Oct 7, 2021",
            "title": "Missing vector * matrix implementation in Complex",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3877",
            "poster_name": "#3877\n            opened Oct 7, 2021 by\n            eshmoylova",
            "description": "Right now, there is no implementation of vector * matrix for Complex. According to the specification, Item 4.b in 14.5 it is left undefined by the tool, and would result in an error. That means:\n    ...\n    Complex U[3], V[3,2], W[2];\nequation\n    ...\n    W = U * V;\n    ...\n\nWould result in an error. Should it be defined in the library?\nAs far as I understand, the main issue with generalizing the rule from Section 10.6 is with the scalar product of two vectors. Or is there something else special about vector * matrix? If the issue is only with the scalar product, should there be a change to the specification defining vector * matrix as a vector of vector*vector? That is, the result is a vector where each element is:\nW[i] = U*V[:,i]; \n\nand the appropriate scalar product for vector * vector, if defined, should be used. If vector*vector is not defined, it  is an error.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 87,
            "date": "Aug 15, 2021",
            "title": "Suspicious reference result for Modelica.Clocked.Examples.Elementary.ClockSignals.LogicalSample",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3858",
            "poster_name": "#3858\n            opened Aug 15, 2021 by\n            rfranke",
            "description": "MSL 4.0.0 and trunk contain the example Modelica.Clocked.Examples.Elementary.ClockSignals.LogicalSample and document the expected result with a screenshot from Dymola. According to this, the variable rotational_clock_2.direction should get the value 1 at initial time, even though there doesn't appear to be an event triggering the respective clock:\n\nThe following example might exhibit the same problem. It counts the changes from negative to positive of cosine in two ways:\nmodel EventClockAndClassic\n  Real f = cos(5*time*Modelica.Constants.pi);\n  Boolean condition = f > 0;\n  Integer count1(start = 0);\n  Integer count2;\ninitial equation \n  count2 = 0;\nequation \n  when Clock(condition) then\n    count1 = previous(count1) + 1;\n  end when;\n  when condition then\n    count2 = pre(count2) + 1;\n  end when;\nend EventClockAndClassic;\nThe expected result is that count1 and count2 are identical. Dymola 2021 triggers the clock for count1 additionally at initial time:\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 88,
            "date": "Aug 9, 2021",
            "title": "More pure functions that contains calls to impure functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3857",
            "poster_name": "#3857\n            opened Aug 9, 2021 by\n            MarkusOlssonModelon",
            "description": "Here are some more functions that I think should be declared as impure:\n\nModelica.Math.FastFourierTransform.realFFTwriteToFile - contains calls to several impure functions, e.g. Modelica.Utilities.Files.removeFile.\nModelica.Math.Random.Utilities.initializeImpureRandom - contains call to impure function setInternalState.\nModelica.Utilities.Examples.readRealParameter - contains call to impure function Modelica.Utilities.Streams.readLine.\n\nUnlike in #3855 it looks like these functions are only called in places where calling impure functions are allowed.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 89,
            "date": "Aug 9, 2021",
            "title": "Calling impure function print from equation section in Inverse_sine example",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3856",
            "poster_name": "#3856\n            opened Aug 9, 2021 by\n            MarkusOlssonModelon",
            "description": "I have found an issue with Modelica.Media.Examples.SolveOneNonlinearEquation.Inverse_sine. It contains a call to Modelica.Utilities.Streams.print directly in the equation section. Since print is an impure function this is not allowed.\nI suggest adding an initial equation section and moving the call to print there.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 90,
            "date": "Aug 9, 2021",
            "title": "Impure function called from pure function MemoryBase.getMemory",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3855",
            "poster_name": "#3855\n            opened Aug 9, 2021 by\n            MarkusOlssonModelon",
            "description": "I have found an issue in Modelica.Electrical.Digital.Interfaces.MemoryBase.getMemory. It contains a function call to Modelica.Utilities.Streams.readLine which is an impure function, but getMemory is not declared as impure.\nI suggest adding the impure prefix to getMemory. This will also require changes in Modelica.Electrical.Digital.Memories.DLATRAM and Modelica.Electrical.Digital.Memories.DLATROM since they contain calls to getMemory. For that I think the simplest solution is to change the if-statements surrounding the calls to when-statements.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 91,
            "date": "Jul 14, 2021",
            "title": "Units.LogarithmicDecrement has units of Ohms (1/S).",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3853",
            "poster_name": "#3853\n            opened Jul 14, 2021 by\n            JoeRiel",
            "description": "Possibly the intention was 1/s, but even that doesn't make sense.  It should be dimensionless.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 92,
            "date": "Jun 12, 2021",
            "title": "External ModelicaStandardTables lack const qualifiers for array inputs (Modelica Language Specification version 3.5)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3839",
            "poster_name": "#3839\n            opened Jun 12, 2021 by\n            rfranke",
            "description": "The Modelica spec 3.5 finally added const qualifiers for the mapping of array inputs to external C functions -- see 3.5 vs 3.4\nModelicaStandardTables should follow the standard to not break the compilation of generated code.\nFor instance ModelicaStandardTables_CombiTable2D_init2 is declared without const qualifier for the table argument in ModelicaStandardTables.h:\nMODELICA_EXPORT void* ModelicaStandardTables_CombiTable2D_init2(_In_z_ const char* fileName,\n                                                _In_z_ const char* tableName,\n                                                _In_ double* table, size_t nRow,\n                                                size_t nColumn, int smoothness,\n                                                int extrapolation,\n                                                int verbose) MODELICA_NONNULLATTR;\nModelica.Blocks.Types.ExternalCombiTable2D calls this function with the array input table though:\nclass ExternalCombiTable2D\n  \"External object of 2-dim. table defined by matrix\"\n  extends ExternalObject;\n\n  function constructor \"Initialize 2-dim. table defined by matrix\"\n    extends Modelica.Icons.Function;\n    input String tableName \"Table name\";\n    input String fileName \"File name\";\n    input Real table[:, :];\n    input Modelica.Blocks.Types.Smoothness smoothness;\n    input Modelica.Blocks.Types.Extrapolation extrapolation=Modelica.Blocks.Types.Extrapolation.LastTwoPoints;\n    input Boolean verboseRead=true \"= true: Print info message; = false: No info message\";\n    output ExternalCombiTable2D externalCombiTable2D;\n  external \"C\" externalCombiTable2D = ModelicaStandardTables_CombiTable2D_init2(\n          fileName,\n          tableName,\n          table,\n          size(table, 1),\n          size(table, 2),\n          smoothness,\n          extrapolation,\n          verboseRead) annotation (IncludeDirectory=\"modelica://Modelica/Resources/C-Sources\", Include=\"#include \\\"ModelicaStandardTables.h\\\"\", Library={\"ModelicaStandardTables\", \"ModelicaIO\", \"ModelicaMatIO\", \"zlib\"});\n  end constructor;\n\n  ...\nend ExternalCombiTable2D;\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 93,
            "date": "May 28, 2021",
            "title": "skipWhiteSpace under-documented",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3820",
            "poster_name": "#3820\n            opened May 28, 2021 by\n            DagBruck",
            "description": "The function Modelica.Utilities.Strings.Advanced.skipWhiteSpace appears to be under-documented. The cases I have found are:\n\nWhat does it return when the given string contains only whitespace or is an empty string?\nWhat does it return if the start index is greater than the string length.\n\nHere are three test cases.\nModelica.Utilities.Strings.Advanced.skipWhiteSpace(\"\")\nModelica.Utilities.Strings.Advanced.skipWhiteSpace(\"  \")\nModelica.Utilities.Strings.Advanced.skipWhiteSpace(\" a \", 700)\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 94,
            "date": "Apr 22, 2021",
            "title": "Two AST_BatchPlant examples have no margin of error in initial tank levels",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3799",
            "poster_name": "#3799\n            opened Apr 22, 2021 by\n            henrikt-ma",
            "description": "Among the AST_BatchPlant examples, I've encountered two tanks where the level_start is equal to the height.\n\nModelica.Fluid.Examples.AST_BatchPlant.Test.TankWithEmptyingPipe2: tank1 (2.0 = 2.0)\nModelica.Fluid.Examples.AST_BatchPlant.Test.TanksWithEmptyingPipe1: tank1 (2.0 = 2.0)\n\nThis gives no margin of error in the TankWithTopPorts assert:\n  assert(level <= height, \"Tank starts to overflow (level = height = \" + String(level) + \")\");\n\nWhile I can see that the assert should hold for the initial value of the level in infinite precision arithmetic, the fact that there is no margin of error means that one can end up with a lottery where the assert will pass or fail depending on the last bits of the computed level.  I believe the correct thing to do would be to introduce some margin, either by increasing height or by decreasing level_start.\nIn case more detail is needed, this is how we compute level in System Modeler.\nIn the initialization problem:\n\nInitialize V based on level_start: tank1.V = tank1.V0 + (tank1.crossArea * tank1.level_start)\nInitialize state m based on V:  tank1.m = 995.586 * tank1.V\n\nIn the integration problem\n\nDetermine V based on m: tank1.V = tank1.m / 995.586\nDetermine level based on V: tank1.level = (tank1.V - tank1.V0) / tank1.crossArea\n\nThe detour from level_start to level via m and V involves numeric computation that cannot be assumed to produce level exactly equal to level_start.  (I actually get a passed assertion with the computations above, but changing the division by 995.586 to multiplication by 1.0 / 995.586 makes the assertion fail.)\nI note that Dymola selects level as state instead of m (seen in translate_passed.log), which could explain why they actually get the infinite precision result for level.  Still, is there anything in the model that would make m a less valid choice of state?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 95,
            "date": "Apr 19, 2021",
            "title": "Modelica.Fluid.Fittings.SimpleGenericOrifice zeta parameter value",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3795",
            "poster_name": "#3795\n            opened Apr 19, 2021 by\n            jfulem",
            "description": "The parameter zeta does not have any default or start value. Then in this equation for not using zeta:\nif use_zeta then\n  zeta_nominal = zeta;\nelse\n  zeta_nominal = 2*A_mean^2*d*dp_nominal/m_flow_nominal^2;\nend if;\n\nthe zeta_nominal is calculated from dp_nominal and m_flow_nominal, but the dp_nominal is:\nparameter SI.Pressure dp_nominal = if not system.use_eps_Re then 1e3 else \n   BaseClasses.lossConstant_D_zeta(diameter, zeta)/Medium.density_pTX(Medium.p_default, Medium.T_default, Medium.X_default)*m_flow_nominal^2\n      \"Nominal pressure drop\";\n\nThis means that if system.use_eps_Re is true this calculation requires the value for zeta.\nI would say the start value of zeta should be added or the default value should be used.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 96,
            "date": "Apr 14, 2021",
            "title": "2D table extrapolation documentation clarification request",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3793",
            "poster_name": "#3793\n            opened Apr 14, 2021 by\n            paultjevdh",
            "description": "Hello,\nI use the 2D table function in Dymola to lookup a periodic function in one direction.\nThe documentation simply states\nextrapolation = 3: Periodically repeat the table data (periodical function).\nThis does not mention the fact that it is assumed (by dymola) that the first and last rows of the table are identical (for example, if the tabulated function is a cosine in the u1 direction, the table should cover the values from 0 up to and including 2pi). When the table is periodically extrapolated, these rows will be overlapping.\nThis is a problem since it is just as justifiable to implement the phase of the cosine as an array [pi/10, 2pi/10, 3pi/10, ..., 19pi/10, 20pi/10], thus excluding the 0 at the start. This kind of table can simply be concatenated, without overlap.\nIt seems openmodelica behaves the same as dymola. I don't know how other programs implement this.\nI think the documentation should make the distinction clear, since making wrong assumptions will lead to errors.\nBest regards,\nPaul van der Hulst\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 97,
            "date": "Apr 8, 2021",
            "title": "String length of UTF-8 stings",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3789",
            "poster_name": "#3789\n            opened Apr 8, 2021 by\n            beutlich",
            "description": "What is the string length of UTF-8 strings? Is it the number of characters or the number of UTF-8 code points?\nExample:\nmodel M\n  Integer len = Modelica.Utilities.Strings.length(\"\u65e5\u672c\u8a9e!\")\n    \"Length: Is it number of characters or number of UTF-8 code points?\";\nend M;\nmight be converted to\n#include <string.h>\nint main() {\n    int len_characters = (int)wcslen(L\"\\u65e5\\u672c\\u8a9e\\u0021\"); // -> 4\n    int len_code_points = (int)strlen(\"\\xe6\\x97\\xa5\\xe6\\x9c\\xac\\xe8\\xaa\\x9e\\x21\"); // -> 10\n}\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 98,
            "date": "Mar 15, 2021",
            "title": "Why should function names start with a lower case letter?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3775",
            "poster_name": "#3775\n            opened Mar 15, 2021 by\n            HansOlsson",
            "description": "I noticed that we have the general guideline saying that classes start with upper case - except for functions:\n\n\n\nModelicaStandardLibrary/Modelica/package.mo\n\n\n         Line 1244\n      in\n      1973974\n\n\n\n\n\n\n      with the exception of functions, that start with a lower case letter.</li> \n\n\n\n\n\nI'm not necessarily proposing to change this, but wanted to discuss how important this is in general (also outside of MSL).\nIf we actually look at the usage it usually doesn't seem to matter, since package-names start with upper-case so it looks as follows:\nalgorithm \n  I_numerical[1] := Modelica.Math.Nonlinear.quadratureLobatto(\n      function Modelica.Math.Nonlinear.Examples.UtilityFunctions.fun4(),\n      0,\n      1,\n      tolerance);\n  I_analytical[1] := -cos(1) + cos(0);\n\n  I_numerical[2] := Modelica.Math.Nonlinear.quadratureLobatto(\n      function Modelica.Math.Nonlinear.Examples.UtilityFunctions.fun5(w=5),\n      0,\n      13,\n      tolerance);\n  I_analytical[2] := -cos(5*13)/5 + cos(5*0)/5;\n\n  I_numerical[3] := Modelica.Math.Nonlinear.quadratureLobatto(\n      function Modelica.Math.Nonlinear.Examples.UtilityFunctions.fun6(k=1/\n      sqrt(2)),\n      0,\n      Modelica.Constants.pi/2,\n      tolerance);\n  I_analytical[3] := 1.8540746773013719184338503;\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 99,
            "date": "Mar 11, 2021",
            "title": "PowerConverters...Delta: Bad icon and name",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3772",
            "poster_name": "#3772\n            opened Mar 11, 2021 by\n            max-privato",
            "description": "I think that the component\nModelica.MultiPlase.Basic.Delta\nhas a wrong icon and name. What it actually does is a phase rotation, and therefore I would recommend as name PhaseRotation\nThe icon would be something like the following picture (possibly omitting the numbers)\n\nI'm aware that changing the name would imply this change, if accepted, to be scheduled for next major revision, for compatibility reasons.\nSomething similar could be done with MultiDelta\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 100,
            "date": "Mar 8, 2021",
            "title": "Revision of RevisionHistory",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3769",
            "poster_name": "#3769\n            opened Mar 8, 2021 by\n            christiankral",
            "description": "The guidelines on writing revisions of Modelica classes are summarized in Modelica.UsersGuide.Conventions.UsersGuide.RevisionHistory. In this documentation class an example summarizes the actual recommendations:\n\nActual guidelines\nThe actual guidelines have some drawbacks which do not match the actual development process:\n\nVersion\n\nWhen a change is performed, one may not exactly know what the next version number exactly will be (e.g. 4.1.0 or 5.0.0)\nAdditionally, a bug fix will most like be back ported to e.g. 3.2.3+maint and 4.0.1; so putting only 3.2.3+main to the revision notes may be misleading as 4.0.0 was also released with a bug which was fixed afterwards\n\n\nDate\n\nSome years ago one just committed a change to the subversion server and this allowed it to put an exact date into the revision history (consisting of year, month and day)\nToday we use pull requests (PR) which may go over several weeks and months; so there is not one exact date I can state in advance when I create the PR.\n\n\nAuthor\n\nToday we may not have just one author performing the changes, but a group of people discussing issues who thus directly and indirectly contribute to handling an issue\n\n\nComment\n\nRevision comments are very important for severe bug fixes as in  Complex.scalarProduct not a scalar product\u00a0#1260 and Complex transfer function block uses wrong order of coefficients\u00a0#3651\nMost importantly, the guidelines on revision history are mostly not applied at all; the majority of Modelica classes does not show any entry in the revision history\nI am reluctant to manually add a lot of information to the Modelica documentation which is already available on GitHub; I yet think that (severe) bug fixes have to be explicitly stated in the revisions, as a user cannot always go through the entire GitHub history to understand what bugs have been fixed\n\n\n\nProposal\n\nProvide a general link to the history of changes on GitHub\n\nFor Modelica packages which are already split into individual files, it is very simple to provide such a link\nI wonder if for non-split Modelica packages there is a way to provide such history information, as it was partly discussed in  Proposal to split MSL into single files\u00a0#2975; possibly some static meta information is required to perform this \"job\"\nI wonder if such an automatic link of the revision history could be provided by the Modelica tools\n\n\nProvide much simpler manually added revision history into a bullet point list:\n\nYear (when the issue was reported or the process of working on it was started)\nAuthor optionally, when migrating from the old to the new format\nComment on a bug fix (and other (?) important) note\nStep by step remove \"obscure\" version numbers which way back in time have not been in line with the MSL versions numbers, e.g. in the revision history of Modelica.UsersGuide.Conventions.UsersGuide.RevisionHistory\n\n\n\nExample Modelica.Electrical.Analog.Basic.Resistor\nActual revision history\n\nProposal of new revision history\n\nThe GitHub link shows:\n\nThis example may not be the \"best\" example in terms of revision history, it is an example of combining existing revision history information with a GitHub link.\nExample Modelica.Magnetic.QuasiStatic.FundamentalWave.BasicMachines.SynchronousMachines.SM_PermanentMagnet\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 101,
            "date": "Feb 24, 2021",
            "title": "Apply 1D Torque to 3D Revolute Joint without torque reaction",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3761",
            "poster_name": "#3761\n            opened Feb 24, 2021 by\n            dariomangoni",
            "description": "I'd like to apply a torque to the Rotational Flange of a Revolute Joint.\nHowever, I don't want the torque reaction to be applied to the Support Flange of the Revolute Joint.\nThe torque reaction is indeed counterbalanced elsewhere and not in the Revolute Joint itself.\nA real-world example is a vehicle wheel: the torque is given by a powertrain and transferred to the wheel by a shaft, so the torque reaction is not perceived on the wheelhub but on the powertrain mounts.\n\nSo, none of the above seems to be correct:\n\nin BLUE: there is a reaction on the Revolute frame_a that there shoudn't be. The support (white circle) seems to always balance the torque applied to the flange (gray circle)) but it doesn't make sense in this case;\nin RED: there is no reaction on Revolute frame_a but there is no speed in the 1D line and this is not ok.\n\nSo, how can apply a Torque to a Revolute Joint without being forced to sense the counterbalanced torque directly on the joint?\nSince there is a Support Flange on the Revolute Joint one should be able to connect to it only if wanted, so the counterbalanced torque shouldn't be automatically balanced inside the Revolute Joint, am I wrong?\nFull code here\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 102,
            "date": "Feb 22, 2021",
            "title": "CombiTimeTable and similar not compiling",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3757",
            "poster_name": "#3757\n            opened Feb 22, 2021 by\n            sede-fa",
            "description": "I have recently upgraded to MSL 4.0.0 from 3.2.3 and I have noticed that the models that contain combiTimeTable and similar models (i.e. ConbiTable1Ds etc.) also do not work. They fail to compile.\nI have tracked this back with the releases and found that it works with the 'MSL v4.0.0-beta.1 (2020-02-12)' release but stops working with 'MSL v4.0.0-beta.2 (2020-03-11)'. From the diff it looks like the ModelicaStnadardTables.h file was modified slightly as well as the Blocks/Tables.mo file to include the .h files. I didn't look thoroughly so maybe other files have a bigger influence on this.\nI am using the latest release (6626538) and have tested this on Dymola 2019 FD01 with Visual studio 2017. I also tested the library on openmodelica 1.16 with MinGW and the same issue arose. Both computers on windows 10. I tested the models in modelica test (used many combiTable models) as well as the batteries examples, both give the same result.\nAs far as I can tell, all other models seem to be working fine, its just the models with combiTables that don't compile. I have attached my buildlog.txt file in case that helps (it's in German but can be put into google translate).\nbuildlog.txt\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 103,
            "date": "Feb 12, 2021",
            "title": "Node temperatures of pipe not sufficient for BasicHX",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3747",
            "poster_name": "#3747\n            opened Feb 12, 2021 by\n            PerNil",
            "description": "The BasicHX example becomes quite inaccurate at high differences in inlet and outlet temperature. The reason seems to be that the node temperatures in the fluid are staggered in the pipes of opposing directions, meaning that the positions along the pipes do not correspond over the wall. For this purpose, it could have been better if the states along the pipe represented averages over the volumes. I have been looking for a simple workaround by calculating the average temperatures, but that would require using the inlet temperature inside PartialPipeFlowHeatTransfer.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 104,
            "date": "Feb 11, 2021",
            "title": "A lot of type conversion warnings when compiling ModelicMatIO.c with Visual Studio on x64",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3746",
            "poster_name": "#3746\n            opened Feb 11, 2021 by\n            gkurzbach",
            "description": "When compiling ModelicaMat.c with Visual Studio on x64 with warn level 3 in debug mode there are a lot of warnings like:\n1>D:\\ITI-Projekte\\SimulationX_WT\\Application\\src\\Dlls\\ModelicaMatIO\\ModelicaMatIO.c(2929,13): warning C4267: \"=\": Konvertierung von \"size_t\" nach \"int\", Datenverlust m\u00f6glich\n1>D:\\ITI-Projekte\\SimulationX_WT\\Application\\src\\Dlls\\ModelicaMatIO\\ModelicaMatIO.c(2929,13): warning C4267: \"*=\": Konvertierung von \"size_t\" nach \"int\", Datenverlust m\u00f6glich\n1>D:\\ITI-Projekte\\SimulationX_WT\\Application\\src\\Dlls\\ModelicaMatIO\\ModelicaMatIO.c(2929,13): warning C4267: \"Funktion\": Konvertierung von \"size_t\" nach \"long\", Datenverlust m\u00f6glich\n1>D:\\ITI-Projekte\\SimulationX_WT\\Application\\src\\Dlls\\ModelicaMatIO\\ModelicaMatIO.c(2929,13): warning C4267: \"+=\": Konvertierung von \"size_t\" nach \"int\", Datenverlust m\u00f6glich\n1>D:\\ITI-Projekte\\SimulationX_WT\\Application\\src\\Dlls\\ModelicaMatIO\\ModelicaMatIO.c(2935,13): warning C4267: \"=\": Konvertierung von \"size_t\" nach \"int\", Datenverlust m\u00f6glich\n...\n\nWhen inspecting the code one can see the compiler is right. At many places there is a mixture of int and size_t. This does not show a good code quality.\n(surprisingly when compiling in release mode there are no such warnings)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 105,
            "date": "Jan 29, 2021",
            "title": "Improve inheritance of classes in MultiBody",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3739",
            "poster_name": "#3739\n            opened Jan 29, 2021 by\n            tobolar",
            "description": "The inheritance of classes is not done consequently.\nSee for example #3737 or #2171 (comment)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 106,
            "date": "Jan 24, 2021",
            "title": "Primary and secondary vs. side 1 and 2",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3734",
            "poster_name": "#3734\n            opened Jan 24, 2021 by\n            christiankral",
            "description": "The transformer models provided in the MSL rely on the following wording:\n\nIndex 1: primary\nIndex 2: secondary\n\n\nThis is unfortunately not correct. According to Electropedia the following wording applies:\n\nPrimary winding: a winding which, in service, receives active power from the supply network\nSecondary winding: a winding which, in service, delivers active power to the load circuit\n\nSo obviously the terms primary and secondary refer to the power flow of a transformer. Therefore, the primary winding becomes secondary winding if the power flow direction changes. Like it or not (I don't like this definition), this is how it is used and how we shall use it in the MSL, too.\nIn order to be in line with the wording of Electropedia we could strictly stick with the wording\n\nSide 1\nSide 2\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 107,
            "date": "Jan 13, 2021",
            "title": "redundant variable definition in the sub package of Modelica.Fluid.Pipes.BaseClasses.WallFriction",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3714",
            "poster_name": "#3714\n            opened Jan 13, 2021 by\n            Satinelamp",
            "description": "The purpose of Modelica.Fluid.Pipes.BaseClasses.WallFriction subpackage is to calculate the mass flow from pressure loss, or inversely. There are some redundant variables that aren't been used after defined. \nIt should be cleaner and easier to understand the code without them.\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\ude04\n1\n Satinelamp reacted with laugh emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\ude04\n1 reaction",
            "comments": []
        },
        {
            "index": 108,
            "date": "Jan 13, 2021",
            "title": "Ill-conditioned result variable in Dimmer_RL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3713",
            "poster_name": "#3713\n            opened Jan 13, 2021 by\n            henrikt-ma",
            "description": "This concerns the selection of comparison variables for the example:\n\nModelica.Electrical.PowerConverters.Examples.ACAC.Dimmer_RL\n\nI suspect that vH01.y_arg has an ill-conditioned result.  It is the result of an atan2 computation in Modelica.Blocks.Math.RectangularToPolar:\n  y_arg = Modelica.Math.atan2(u_im, u_re);\n\nThe result variables corresponding to the two arguments to atan2 are vH01.mean2.y_last and vH01.mean1.y_last, respectively:\n\nBefore time 1 and after time 7, there are periods where both variables look like numeric noise around zero when simulated using System Modeler.  The reason I'm tempted to trust our result is that the atan2 result matches the reference result anywhere the variables are significantly non-zero.\nCan someone please confirm that the two variables are always sufficiently non-zero to make the atan2 well defined?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 109,
            "date": "Jan 12, 2021",
            "title": "New spikes in RectifierCenterTap2mPulse reference results",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3711",
            "poster_name": "#3711\n            opened Jan 12, 2021 by\n            henrikt-ma",
            "description": "The 3.2.3 and 4.0.0 reference results for these models differ due to spikes in rectifier.thyristor_p.idealThyristor[3].off appearing in the 4.0.0 versions:\n\nModelica.Electrical.PowerConverters.Examples.ACDC.RectifierCenterTap2mPulse.ThyristorCenterTap2mPulse_R\nModelica.Electrical.PowerConverters.Examples.ACDC.RectifierCenterTap2mPulse.ThyristorCenterTap2mPulse_RL\n\nIn both versions, there's a single spike at time 1.667e-3:\n\nWhen simulated using System Modeler, I get the same result as in the 3.2.3 versions (that is, without those spikes), which makes me wonder if those spikes really are a new and expected feature?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 110,
            "date": "Jan 11, 2021",
            "title": "No propagation of fixed = false in InitSpringConstant",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3707",
            "poster_name": "#3707\n            opened Jan 11, 2021 by\n            henrikt-ma",
            "description": "The initialization of Modelica.Mechanics.MultiBody.Examples.Elementary.InitSpringConstant doesn't look right, but for reasons I don't want to discuss further, we've somehow managed to get the expected initialization out of this model anyway.  Now, I'd like to see how to get the same result in a proper manner.\nThe source of the problem, as I understand it, is that the fixed = true set in the simulation model,\n  Modelica.Mechanics.MultiBody.Forces.Spring spring(s_unstretched = 0.1, c(fixed = false, start = 100)) annotation(\u2026);\n\ndoesn't get propagated down to spring.spring.c.  This is what gets propagated in Modelica.Mechanics.MultiBody.Forces.Spring:\n  Modelica.Mechanics.Translational.Components.Spring spring(s_rel0 = s_unstretched, c = c) annotation(\u2026);\n\nThis leaves spring.spring.c with fixed = true.  Hence, if we look at the two variables spring.c and spring.spring.c, I think we can agree that these should be solved from the following equations (expressed using sloppy pseudo code):\nspring.spring.c = spring.c; /* Declaration equation for fixed = true parameter 'spring.spring.c'. */\nf = spring.spring.c * (s_rel - s_rel0); /* Equation from Translational.Components.Spring. */\n\nWith spring.spring.c having fixed = true, I would not expect it to be solved from the second of these, but using its declaration equation.  This means that the second equation gets overdetermined, while there is no equation to determine spring.c.\nI can see two ways of making it work:\n\nSet fixed = false also on spring.spring.c, allowing the second equation to be solved with respect to this variable, and the declaration equation to be solved in reverse.\nMake the c = c an alias relation by making it final (see below).  When eliminating one of the parameter in such an alias relation, it makes sense to keep the one with fixed = false, since we know it has a corresponding initial equation somewhere.\n\nOf the two approaches, the first corresponds to a less cryptic modification:\nSpring spring(s_unstretched = 0.1, c(fixed = false, start = 100), spring(c(fixed = false))) \u2026; /* First approach. */\nSpring spring(s_unstretched = 0.1, c(fixed = false, start = 100), spring(final c = spring.c)) \u2026; /* Second approach. */\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 111,
            "date": "Dec 15, 2020",
            "title": "Functions returning uninitialized fields",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3687",
            "poster_name": "#3687\n            opened Dec 15, 2020 by\n            HansOlsson",
            "description": "From modelica/ModelicaSpecification#2745\nIn Modelica.Media.Water.IF97_Utilities.dewcurve_p either bpro.cv or bpro.cp is returned as uninitialised variable.\nThe uninitialized field isn't used further on, but it isn't ok.\nSimilarly Modelica.Mechanics.MultiBody.Visualizers.Advanced.SurfaceCharacteristics.torus returns a zero-sized uninitialized array C.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 112,
            "date": "Dec 7, 2020",
            "title": "Quality of DynamicPipeClosingValve reference result",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3680",
            "poster_name": "#3680\n            opened Dec 7, 2020 by\n            henrikt-ma",
            "description": "A quick look at ModelicaTest.Fluid.TestPipesAndValves.DynamicPipeClosingValve doesn't reveal anything that has changed in this simple model from version 3.2.3 to 4.0.0.  Yet, the reference result look rather different, and also qualitatively different from what I get with System Modeler:\n\nHas something really changed in the model from 3.2.3 to 4.0.0.  Can the reference result be considered reliable?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 113,
            "date": "Nov 20, 2020",
            "title": "Gas Expansion factor in ValveCompressible",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3672",
            "poster_name": "#3672\n            opened Nov 20, 2020 by\n            PerNil",
            "description": "The Expansion factor Y in Modelica.Fluid.Valves.ValveCompressible is called Compressibility factor.\nThere seems to be no impact on the code, but it is confusing, so I suggest replacing \"Compressibility\" with \"Expansion\".\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 114,
            "date": "Nov 19, 2020",
            "title": "Validity of clocked signals in reference results",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3671",
            "poster_name": "#3671\n            opened Nov 19, 2020 by\n            maltelenz",
            "description": "Reading a reference result with variables that are clocked, like this, what part of that file can or should be trusted/used for correctness checking?\nA: All points\nB: Only the right hand side of the first clock tick (duplicated time point) and all the remaining ticks (both sides)\nC: Both sides of all clock ticks (duplicated time points)\nD: Some other answer (please explain)\nRelated: #3516\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 115,
            "date": "Nov 2, 2020",
            "title": "ModelicaServices.ExternalReferences.loadResource violates purity rules",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3655",
            "poster_name": "#3655\n            opened Nov 2, 2020 by\n            henrikt-ma",
            "description": "The demo implementation of ModelicaServices.ExternalReferences.loadResource isn't marked impure,\n\n\n\nModelicaStandardLibrary/ModelicaServices/package.mo\n\n\n         Line 164\n      in\n      81dd1b6\n\n\n\n\n\n\n function loadResource \n\n\n\n\n\nYet it calls the impure Modelica.Utilities.Files.fullPathName,\n\n\n\nModelicaStandardLibrary/Modelica/Utilities/Files.mo\n\n\n         Line 568\n      in\n      81dd1b6\n\n\n\n\n\n\n impure function fullPathName \"Get full path name of file or directory name\" \n\n\n\n\n\nEven though this really just concerns a dummy implementation of ModelicaServices, I'd interpret the purity of loadResource as dictating how it is also supposed to be handled in actual implementations of ModelicaServices.  For example, marking it impure clearly shows that a call to loadResource isn't allowed in a constant's declaration equation.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 116,
            "date": "Oct 26, 2020",
            "title": "Internal comments left over in Modelica.Media.Water.IF97_Utilities.BaseIF97.Regions.{hl_p_R4b, sv_p_R4b}",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3653",
            "poster_name": "#3653\n            opened Oct 26, 2020 by\n            beutlich",
            "description": "There are internal comments left over that should be either removed or improved.\n\n\n\nModelicaStandardLibrary/Modelica/Media/Water/IF97_Utilities.mo\n\n\n        Lines 797 to 798\n      in\n      aa92ae0\n\n\n\n\n\n\n // documentation of accuracy in notebook ~hubertus/props/IAPWS/R3Approx.nb \n\n\n\n // boundary between region IVa and III \n\n\n\n\n\nand\n\n\n\nModelicaStandardLibrary/Modelica/Media/Water/IF97_Utilities.mo\n\n\n        Lines 847 to 848\n      in\n      aa92ae0\n\n\n\n\n\n\n // documentation of accuracy in notebook ~hubertus/props/IAPWS/R3Approx.nb \n\n\n\n // boundary between region IVa and III \n\n\n\n\n.\nIf the referenced notebook R3Approx.nb still is available it would be best to add it as PDF to the documentation of the functions hl_p_R4b and sv_p_R4b.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 117,
            "date": "Oct 19, 2020",
            "title": "Modelica Media Interface is information incomplete w.r.t. independent mass fractions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3650",
            "poster_name": "#3650\n            opened Oct 19, 2020 by\n            dzimmer",
            "description": "The Modelica Media package provides an abstract interface to the thermodynamic state of the Medium by defining a set of \"set\" and \"get\" like functions. So far, so good.\nUnfortunately it occured to me that this interface is incomplete. Using the \"get\"-like functions, I cannot fully retrieve the thermodynamic state because there seems to be no function for the (independent) mass fractions. When you start using the Media models with different interfaces than in Standard fluid, you start to notice.\nIrrespective of what a modeller wants to do, I think it is a good idea to make the abstract interface complete. It can also be easily fixed.\nI propose to add the following function to PartialMedium\nreplaceable partial function massFraction \"returns independent mass fraction\"\nextends Modelica.Icons.Function;\ninput ThermodynamicState state \"Thermodynamic state record\";\noutput MassFraction Xi[nXi] \"(independent) Mass Fraction\";\nend massFraction;\nThen add to PartialPureSubstance the implementation\nredeclare replaceable function massFraction \"Return independent mass Fraction\"\nextends Modelica.Icons.Function;\ninput ThermodynamicState state \"Thermodynamic state record\";\noutput MassFraction Xi[nXi] \"(independent) Mass Fraction\";\nalgorithm\nXi := fill(0,0);\nend massFraction;\nand last to PartialMixtureMedium\nreplaceable function massFraction \"Return independent mass Fraction\"\nextends Modelica.Icons.Function;\ninput ThermodynamicState state \"Thermodynamic state record\";\noutput MassFraction Xi[nXi] \"(independent) Mass Fraction\";\nalgorithm\nXi := state.X[1:nXi];\nend massFraction;\nObjections? Other ideas? Shall I branch and raise a merge request?\nWe need this for our new fluid library.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 118,
            "date": "Oct 1, 2020",
            "title": "Add annotation \"unbounded\" to 1D mechanical sources",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3635",
            "poster_name": "#3635\n            opened Oct 1, 2020 by\n            markusandres3DS",
            "description": "I did some investigation on the unbounded annotation in Dymola and found that it would likely be a good addition for some MSL components.\nThe tests were carried out using Modelica.Mechanics.Rotational.Sources.Speed, with focus on the behavior when angles get relatively big (but still reasonable). This results in numerical issues pretty quickly, as shown below:\n\nThere are three variables plotted:\n\nunbounded=false: based on Modelica.Mechanics.Rotational.Sources.Speed\nunbounded=true: based on a modified version on Modelica.Mechanics.Rotational.Sources.Speed setting a unbounded = true\nReference (hidden behind the curve for unbounded=true): based on the orignal version Modelica.Mechanics.Rotational.Sources.Speed, but the offset in the angle is added by a block after the actual integration instead of an initial value. This makes the state itself have small values.\n\nDue to the above observations, I think it would be good to add the annotation to the MSL. Of the top of my head, I think this should be done for a couple of elements in the MSL:\n\nModelica.Mechanics.Rotational.Sources.Position\nModelica.Mechanics.Rotational.Sources.Speed\nModelica.Mechanics.Translational.Sources.Position\nModelica.Mechanics.Translational.Sources.Speed\n...\n\nThe results can be reproduced using Dymola 2021 with this package. A quick test done with MSL 4.0.0 shows that there is no change regarding this property.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 119,
            "date": "Sep 23, 2020",
            "title": "Unit present verbatim in text macro",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3630",
            "poster_name": "#3630\n            opened Sep 23, 2020 by\n            maltelenz",
            "description": "In Modelica.Blocks.MathBoolean.OnDelay, there is a text macro %delayTime s on the icon view, at \n\n\nModelicaStandardLibrary/Modelica/Blocks/MathBoolean.mo\n\n\n         Line 414\n      in\n      39285d3\n\n\n\n\n\n\n               textString=\"%delayTime s\"), \n\n\n\n\n\nBecause of modelica/ModelicaSpecification#2339 , the unit should be removed from the macro (tools are expected to add it).\nThe same problem exists in:\n\n\n\nModelicaStandardLibrary/Modelica/Blocks/Interfaces.mo\n\n\n         Line 1378\n      in\n      f06c39a\n\n\n\n\n\n\n             textString=\"%samplePeriod s\"), \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 120,
            "date": "Sep 21, 2020",
            "title": "Use of Modelica.Constants.eps in Modelica.Fluid.Utilities.regFun3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3628",
            "poster_name": "#3628\n            opened Sep 21, 2020 by\n            carlj-w",
            "description": "Related to #2056.\nThe function Modelica.Fluid.Utilities.regFun3 uses Modelica.Constants.eps in several places, in assert conditions and if conditions. I am here mostly concerned about the use in if conditions, where the constant is typically multiplied by 100.\nAt least for me, using the actual eps value for double precision floating point number (approximately 1.11e-16) makes these models not work:\n\nModelicaTest.Fluid.TestComponents.Vessels.TestMixingVolumesPressureStates\nModelicaTest.Fluid.TestPipesAndValves.DynamicPipeClosingValve\n\nModelica.Constant.eps is set to ModelicaServices.Machine.eps, which is set to 1e-15 in a non-configured ModelicaServices. Using this value makes the models above work for me.\nThis seems somewhat problematic. Does anyone know how the value of 100 * Modelica.Constants.eps was reached? Could someone verify my findings, and if so, what should we do? Replace Modelica.Constants.eps by 1e-15 in the function?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 121,
            "date": "Sep 3, 2020",
            "title": "Bug in the initial equation of Blocks.Sources.BooleanPulse",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3624",
            "poster_name": "#3624\n            opened Sep 3, 2020 by\n            milicag",
            "description": "The initial equation does not adequately handle a case when a pulse is initiated prior to simulation start time.\nPlease see an illustration of the bug in this resolved issue of the modelica-buildings repository and a PR with a fix. The fix is to introduce an initiation condition similar to what is found in the Blocks.Sources.Pulse.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 122,
            "date": "Aug 29, 2020",
            "title": "Unused parameter in function",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3622",
            "poster_name": "#3622\n            opened Aug 29, 2020 by\n            casella",
            "description": "This parameter\n\n\n\nModelicaStandardLibrary/Modelica/Electrical/Machines/SpacePhasors/Functions/ToSpacePhasor.mo\n\n\n         Line 14\n      in\n      39285d3\n\n\n\n\n\n\n parameter Real InverseTransformation[m, 2]={{+cos(-phi[k]),-sin(-phi[k])} \n\n\n\n\n\nshows up in function toSpacePhasor, but is not used in the function body.\n@AHaumer, @christiankral, why was it defined in the first place?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 123,
            "date": "Jul 29, 2020",
            "title": "Absence of FluidPower2MechTrans in Fluid library",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3611",
            "poster_name": "#3611\n            opened Jul 29, 2020 by\n            sergniko",
            "description": "Is there a deep reason for absence of fluid power to mechanical power interface in Fluid library? (something like FluidPower2MechTrans from OpenHydraulics library)\nFluid.SweptVolume is not the solution because it has only one flange and you can't change the force direction.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n bilderbuchi reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 124,
            "date": "Jul 7, 2020",
            "title": "Support for n-Dimensional arrays in IO functions using HDF5 file format",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3601",
            "poster_name": "#3601\n            opened Jul 7, 2020 by\n            alkhwarizmi",
            "description": "Dear all,\nit seems that support for 3D arrays and, in general, n-dimenisonal arrays is missing in the MSL (see discussion here). In particular I am referring to the readArraySize() and read3DArrayFromFile() functions.\nAlthough full support of arrays with an a priori unknown number of dimensions may require additions to the language itself, and may be regarded as unlikely to happen, a limited support for 3D, 4D, 5D (the highest number to be arbitrarily decided) arrays could be added just extending the library. For example, my current application would need functions like readArraySize(fileName:String, arrayName:String):1DArray and read3DArrayFromFile(fileName:String, arrayName:String, dims:1DArray):3DArray\nMoreover, I propose to start building a IO mechanism to load and save n-dimensional arrays or a cluster of them relying on the HDF5 standard (the idea is that any HDF5 reader could open the data file). I don't think MSL should support the entire standard, but just the subset of it required to support its own data structures, including n-dimensional arrays.\nIn the following months I could be in the position to contribute something with this regard if somebody can let me know where to start.\nSincerely,\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n bilderbuchi reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 125,
            "date": "Jun 19, 2020",
            "title": "kg symbol of SIunits package",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3581",
            "poster_name": "#3581\n            opened Jun 19, 2020 by\n            max-privato",
            "description": "The icon of SIunits Package carries the text kg as the unit of measure of mass.\nHowever, it is written in Italic, while it should not.\nI don't have here the text of ISO 31-1992 but the document \"The International System of Units\" from BIPM from which it derives. It says, in its 5.2 section:\nUnit names are normally printed in roman (upright) type\nAlthough they here use the word \"normally\", they don't discuss any possible exception, and throughout that document all the examples of units of measure are written  in roman (upright) style, not a single example is italic. So, we must not use kg or m/s, always km or m/s.\nSo, I propose to use the correct symbol on our SIunits icon, i.e., with upright font style.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 126,
            "date": "May 28, 2020",
            "title": "Pressure drop in Modelica.Fluid.Pipes.DynamicPipe when dynamic momentum balance is taken into account",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3569",
            "poster_name": "#3569\n            opened May 28, 2020 by\n            KarinHH",
            "description": "I have a problem in understanding the simulation results of a discretized Modelica.Fluid.Pipes.DynamicPipe when using a compressible gas as medium and taking the dynamic momentum balance into account.\nTo illustrate that I built up a very simple model: pressure source + pipe + pressure sink. The pressure in the pressure source is linearly increased over time. The parameterization of the pipe mainly corresponds to the default values, but the parameter \"momentumDynamics\" is set to \"Modelica.Fluid.Types.Dynamics.FixedInitial\".\nFor lower gas velocities (=smaller inlet pressures) the pressure drop is somehow nearly linear distributed over the discrete elements of the pipe (of course the pressure drop is not the same in every element due to the change in medium properties). As the gas velocity gets higher however, the pressure drop in the last flow model (= resistive element) is dominating by far. The picture below showes the pressures in the different flow models along the pipe. The pressure in the last flow model (green dashed line) corresponds to the constant pressure in the pressure sink.\n\nActually when looking at the pressure distribution along the pipe it looks as if the pipe was choking. This is however not possible since the velocities are still far below the velocity of sound. The velocity in the last flow model is a lot higher than in the rest of the pipe, because the pressure is a lot lower, since it corresponds to atmospheric pressure. This picture below shows the velocity in the flow models in the pipes as well as the velocities of sound. The velocities of sound are nearly constant at ~330 m/s.\n\nWhat I do not understand:\nDoes the simulation result represents the physics correctly? If no, where is the \"error\" in the equations? If yes, what is the the physical behavior which the model represents here?\nWhat I've tried:\n\nChanging the discretization of the pipe does not change the phenomenom.\nIt seems to be independent of the medium model, I've also tried it with quite different medium models for compressible gas. (This example shown is using Modelica.Media.Air.ReferenceAir.Air_ph)\nIt only occurs if the dynamic momentum balance is chosen (since despite the name of this flag, using this flag not only \"activates\" the dynamic term in the momentum balance but also adds the pressure loss due to acceleration).\n\nI've posted the same issue on stackoverflow, where I've got the hint to better try to file the issue directly at this place.\nI've added the model as save-total.\nSimplePipe_pressureSourceTotal.zip\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n3\n Satinelamp, hubertus65, and kilian-hub reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n3 reactions",
            "comments": []
        },
        {
            "index": 127,
            "date": "May 27, 2020",
            "title": "Modelica icon color",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3567",
            "poster_name": "#3567\n            opened May 27, 2020 by\n            DagBruck",
            "description": "The Modelica library icon layer has a red dot, but the red color was changed in the recent update of the official Modelica icons. The color of the icon is now RGB(200, 16, 46).\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 128,
            "date": "May 25, 2020",
            "title": "Keyword highlighting in code segments",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3561",
            "poster_name": "#3561\n            opened May 25, 2020 by\n            tobolar",
            "description": "A convention for documenting code segments (in Modelica.UsersGuide.Conventions.Documentation.Format.Code) states\n\n\nIn code segments use bold to emphasize Modelica keywords.\n\n\nDoes this really concerns only keywors as defined in \"2.3.3 Modelica Keywords\" of the Modelica Specification? In e.g. Modelica.Fluid.UsersGuide.ComponentDefinition.UpstreamDiscretization, there are also highlighted inStream operators.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 129,
            "date": "May 20, 2020",
            "title": "Request for one-sided spring, which would act as wire",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3557",
            "poster_name": "#3557\n            opened May 20, 2020 by\n            goatchurchprime",
            "description": "I want to simulate the forces generated by a wire that exerts a force when it is under tension, but goes slack if the endpoints are closer than its length.\nIf a spring only gave positive forces, so there was an option for its force to be:\n\nf = abs(c*(s_rel - s_rel0));\n\nthen it would seem to do this for me.\nI've looked everywhere for this feature, but I can't find it anywhere as an option.  Is there a technical problem with having it?\nThe spring implementation code is here:\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/master/Modelica/Mechanics/MultiBody/Forces/Spring.mo\nbut it uses a second script to apply hook's law here:\nhttps://github.com/modelica/ModelicaStandardLibrary/blob/master/Modelica/Mechanics/Translational/Components/Spring.mo\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 130,
            "date": "May 8, 2020",
            "title": "Avoid unnecessary discontinuities in sources (Cosine, Sinc)?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3548",
            "poster_name": "#3548\n            opened May 8, 2020 by\n            HansOlsson",
            "description": "Based on my comment in #3547\nConsider the blocks Modelica.Blocks.Sources.Cosine, and Modelica.Blocks.Sources.Sinc. (There might be other similar cases somewhere else.)\nThey have an unnecessary discontinuity at startTime because the value before startTime is offset and not offset+amplitude, and I don't see why anyone would want this. Due to backward compatibility I assume we would need a flag controlling this.\nThe benefit is not only removing odd behaviour, but also that we can add smooth to this equation - and thus indicate that the signal can be differentiated, which is beneficial in many applications where sources are differentiated (and often time>=startTime during the entire simulation so the discontinuity does not even occur in practice).\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 131,
            "date": "May 4, 2020",
            "title": "default value for from_dp switch in PartialGenericPipeFlow (Modelica.Fluid)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3546",
            "poster_name": "#3546\n            opened May 4, 2020 by\n            R-M-F",
            "description": "The default value for the switch from_dp in PartialGenericPipeFlow, which determines calculation direction for pressure drop, or respectively mass flow calculation, is\nfrom_dp = momentumDynamics >= Types.Dynamics.SteadyStateInitial\nIn case of\nmomentumDynamics == Types.Dynamics.SteadyStateInitial\nthe calculation direction m_flow = f(dp) is chosen, although in all other cases with dynamic momentum balance the direction dp = f(m_flow) is used. This causes additional nonlinear systems (simulation and initialization) as it can be observed in the tester Modelica.Fluid.Examples.BranchingDynamicPipes.\nThese nonlinear systems in the tester disappear and simulation speed increases if from_dp = False is set manually.\nBy modifying the default value\nfrom_dp = momentumDynamics > Types.Dynamics.SteadyStateInitial\nthe calculation direction would be consistent with the other cases with dynamic momentum balance and the more efficient calculation setup is activated without any changes by the user.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 132,
            "date": "Apr 29, 2020",
            "title": "Use unbounded=true attribute in mechanical interfaces?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3545",
            "poster_name": "#3545\n            opened Apr 29, 2020 by\n            mestinso",
            "description": "It seems to me that the new (Modelica 3.4) unbounded attribute is applicable for mechanical interfaces. For example, in Modelica.Mechanics.Rotational.Interfaces.Flange, I would think unbounded=true should be added to phi:\nSI.Angle phi(unbounded=true) \"Absolute rotation angle of flange\";\n\nAlternatively, it could be added to the Angle type itself, but that may be too presumptive.\nThoughts?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 133,
            "date": "Mar 24, 2020",
            "title": "Jumps in signal at very tiny time intervals in PolyphaseTwoLevel_RL reference results",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3523",
            "poster_name": "#3523\n            opened Mar 24, 2020 by\n            maltelenz",
            "description": "In the reference results for Modelica.Electrical.PowerConverters.Examples.DCAC.PolyphaseTwoLevel.PolyphaseTwoLevel_RL there are two subsequent jumps at an extremely short distance from each other. You can see this in rows 3433-3436 in the linked csv file (can't direct link because github restrictions on file size).\nThe variables in question are voltageSensor.v[1] through voltageSensor.v[3]. Plotted:\n\nPlease ignore the labeling on the x axis (bug in SystemModeler).\nAs you can see, SystemModeler (blue) only has a single event iteration leading to the complete jump, while the reference result (orange) takes two jumps very close to each other.\nThe reference reports jumps at 0.030250000000000003 and 0.030250000000115126, a distance of approximately 1.15e-13 apart.\nIs there anything in the model that explains the two separate jumps? Is it expected? Do other tools reproduce these two jumps?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 134,
            "date": "Mar 3, 2020",
            "title": "Question concerning the triple point of water",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3481",
            "poster_name": "#3481\n            opened Mar 3, 2020 by\n            sebi-n",
            "description": "I have a question concerning Modelica.Media.WaterIF97_ph. I am using this package to model the evaporation of water in a plate heat exchanger at very low pressures. In reality it is also possible that freezing occurs on the plate heat exchanger if the triple point of water is reached (T = 0.01\u00b0C, p = 611.657 Pa). However, if I come near this triple point in my simulations, I receive the warning that either the temperature is below 273.15 K or the pressure is lower than 611.657 Pa. My problem is that I don't want the temperature or the pressure to go below this point, but I want ice to occur. Is it possible to model freezing at this triple point with the Modelica.Media.WaterIF97_ph package, so that I have liquid water, ice and water vapour at the same time?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 135,
            "date": "Mar 3, 2020",
            "title": "Reference trajectories of chaotic systems should be limited to a short interval",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3477",
            "poster_name": "#3477\n            opened Mar 3, 2020 by\n            casella",
            "description": "We are testing the results obtained on MSL 3.2.3 models with StopTime annotation in OpenModelica, comparing the results to the reference files produced by MAP-LIB using the CSV compare tool.\nSome models show chaotic motion, so as time increases, it is inevitable that the trajectories obtained by any two different solvers or tools diverge, because of their inherent instability.\nIt is of course OK to have models with chaotic motion in the MSL, for demonstration purposes. However, we should not supply reference results on a too long time span, because those will be basically impossible to reproduce with any other tool than the one that produced the reference results. We should rather only provide a short time interval, in which the instability of chaotic motion hasn't had the time yet to fully develop. For example, 1/10 or 1/50 of the currently supplied reference data.\nHere is the list of affected models\n\nModelica.Electrical.Analog.Examples.ChuaCircuit (Chua's circuit is well known for his chaotic motion)\nMechanics.MultiBody.Examples.Elementary.PointGravityWithPointMasses2 (it is well-known that the motion of more than two bodies subject to gravity is potentially chaotic)\n\n@beutlich, @GallLeo, can you please shorten the time span of those reference files by a factor 10 or 50?\n@beutlich, please also make sure the same problem is solved in the reference files of MSL 4.0.0\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 136,
            "date": "Feb 29, 2020",
            "title": "Delay blocks do not belong to Blocks.Nonlinear",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3460",
            "poster_name": "#3460\n            opened Feb 29, 2020 by\n            casella",
            "description": "The Blocks.Nonlinear package contain three time delay implementations: FixedDelay, PadeDelay, and VariableDelay.\nAs everybody knows, pure time delay y(t) = u(t - tau) is a linear operator, linear as linear can be, since obviously the superposition principle applies to it 100%. It is in principle infinite-dimensional, but that doesn't make it less linear. Also its Pad\u00e9 approximation is of course linear, as explicitly explained in the documentation.\nI guess the only reason why these blocks belong to Blocks.Nonlinear is to mimick the Simulink Block library, where the delay block was put in the Nonlinear category 30 years ago for reasons I cannot fathom.\nI don't think we need to worry too much looking the same as Simulink, at least as far as wrong features are concerned. We should rather worry about not calling Nonlinear something which is most definitely 100% linear.\nI would propose to move those three blocks to Continuous, where they belong, now that we have a once-in-a-lifetime opportunity to do so with the conversion scripts. If there is consensus about this, I can open a proper PR with the code change ASAP.\nPlease note this can only be done in 4.0.0, not in a subsequent minor release.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 137,
            "date": "Feb 24, 2020",
            "title": "Wrong rotation direction in planarRotation functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3445",
            "poster_name": "#3445\n            opened Feb 24, 2020 by\n            dariomangoni",
            "description": "Modelica.Mechanics.MultiBody.Frames.planarRotation and Modelica.Mechanics.MultiBody.Frames.TransformationMatrices.planarRotation either rotate in the opposite direction (respect to right-handed standard) or the documentation is quite unclear.\nGiven:\n\nrotation axis along +Z\nrotation angle of 90deg\na starting vector v1 along +X\n\nI would expect to get a rotation matrix that rotates the vector v1 according to R*v1 in the +Y direction, not in -Y direction as it currently happens.\nThe expected R for me should have been\n[  0.0, -1.0,  0.0;   +1.0,  0.0,  0.0;   0.0,  0.0,  1.0]\ninstead is\n[  0.0, +1.0,  0.0;   -1.0,    0.0,  0.0;   0.0,   0.0,  1.0]\nAm I missing something?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 138,
            "date": "Feb 17, 2020",
            "title": "Dissipation library contains Icon classes without icon definitions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3430",
            "poster_name": "#3430\n            opened Feb 17, 2020 by\n            dietmarw",
            "description": "When looking into Modelica.Fluid.Dissipation.Utilities.Icons.* I found a number of icon classes that do not contain any icon definition but a graphic is only contained on the diagram layer. I'm unsure what use those \"icons\" would have.\nExamples:\n\nand\n\n@wischhusen Could you explain what these classes are for?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 139,
            "date": "Feb 15, 2020",
            "title": "Proposal to split Modelica.Blocks into single files",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3425",
            "poster_name": "#3425\n            opened Feb 15, 2020 by\n            christiankral",
            "description": "I am asking the library officers @AHaumer and @MartinOtter if they have any intentions to have the package Modelica.Blocks split into single files. In case you agree, it makes sense to have this done before MSL 4.0.0 gets released.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 140,
            "date": "Feb 14, 2020",
            "title": "Unnecessary event generation in Modelica.Electrical.Analog.Examples.OpAmps.SignalGenerator",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3417",
            "poster_name": "#3417\n            opened Feb 14, 2020 by\n            modelonrobinandersson",
            "description": "In the BTL of the model Modelica.Electrical.Analog.Examples.OpAmps.SignalGenerator we have the following equation block:\nTorn variables:\n0     r1.v\n1     opAmp1.v_in\n2     r2.v\n3     opAmp1.v_out\n\nIteration variables:\n0     r2.i (start=Vps / r2.R)\n\nTorn equations:\n0     r1.v := r1.R_actual * (- r2.i)\n1     opAmp1.v_in := r1.v + opAmp2.v_out\n2     r2.v := r2.R_actual * r2.i\n3     opAmp1.v_out := smooth(0, if opAmp1.V0 * opAmp1.v_in > opAmp1.Vps then opAmp1.Vps elseif opAmp1.V0 * opAmp1.v_in < Vns then Vns else opAmp1.V0 * opAmp1.v_in)\n\nResidual equations:\n0     r2.v = opAmp1.v_in - opAmp1.v_out\n\n\nAccording to the Modelica language specification, there is no guarantee that the smooth-operator does not generate any events.\nWhen this model is simulated with Optimica Compiler Toolkit, the event generation resulting from torn equation 3 with the smooth-operator causes an infinite loop in the event iteration, and this is due to minor numerical noise. There is no reason to have event generation here since r2.i varies to such a small degree. Therefore we suggest setting the parameter \"strict\" on the components opAmp1 and opAmp2, equal to \"true\" instead of the current value \"false\", using the more appropriate noEvent branch instead.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 141,
            "date": "Feb 3, 2020",
            "title": "Use real enumeration in e.g. Modelica.Mechanics.Rotational.Interfaces.PartialFriction!",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3387",
            "poster_name": "#3387\n            opened Feb 3, 2020 by\n            HansOlsson",
            "description": "The following constants and their use could be replaced by an enumeration:\nconstant Integer Unknown=3 \"Value of mode is not known\";\n constant Integer Free=2 \"Element is not active\";\n constant Integer Forward=1 \"w_relfric > 0 (forward sliding)\";\n constant Integer Stuck=0\n   \"w_relfric = 0 (forward sliding, locked or backward sliding)\";\n constant Integer Backward=-1 \"w_relfric < 0 (backward sliding)\";\n Integer mode(\n   final min=Backward,\n   final max=Unknown,\n   start=Unknown,\n   fixed=true)\n   \"Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown)\";\n\nThe constants seem to occur in\nModelica.Mechanics.Rotational.Components.LossyGear\nModelica.Mechanics.Rotational.Interfaces.PartialFriction\nModelica.Mechanics.Translational.Interfaces.PartialFriction\nModelica.Mechanics.Translational.Components.PartialFrictionWithStop\nModelica.Mechanics.Translational.Components.MassWithStopAndFriction\nThat was what you meant @DagBruck ?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 142,
            "date": "Jan 28, 2020",
            "title": "Replace StateGraph by StateGraph2?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3374",
            "poster_name": "#3374\n            opened Jan 28, 2020 by\n            MartinOtter",
            "description": "@HansOlsson what is your opinion:\nIt would be useful to move the by far outdated Modelica.StateGraph to ObsoleteModelica4 and include Modelica_StateGraph2 instead into Modelica. I just checked and it seems to be not much work to adapt Modelica_StateGraph2 so that it can be included in MSL:\n\nChanging Modelica_StateGraph2 to Modelica.StateGraph2\nMoving statements with the Modelica extensions uniqueRoot and uniqueRootIndices into comments (or removing them completely). These extensions are only used to provide meaningful error messages, e.g. to guarantee that every loop has at least one delayed transition.\nChange license to BSD3\nSlighly adapt the documentation (rename in the User's Guide: \"Used Modelica Extensions\" to \"Useful Modelica Extensions\")\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 143,
            "date": "Jan 23, 2020",
            "title": "Rename base classes with support flange",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3362",
            "poster_name": "#3362\n            opened Jan 23, 2020 by\n            tobolar",
            "description": "Due to similar model background, the following clases in Modelica.Mechanics.Rotational.Interfaces should be renamed:\n\nPartialElementaryOneFlangeAndSupport2 to PartialOneFlangeAndSupportElementary (i.e. a counterpart of PartialOneFlangeAndSupport)\nPartialElementaryTwoFlangesAndSupport2 to PartialTwoFlangesAndSupportElementary (i.e. a counterpart of PartialTwoFlangesAndSupport)\n\nMay be there is a better option for the supplement instead of \"Elementary\".\nThis concerns Modelica.Mechanics.Translational.Interfaces accordingly.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 144,
            "date": "Jan 22, 2020",
            "title": "Further improvements of FluxTubes",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3359",
            "poster_name": "#3359\n            opened Jan 22, 2020 by\n            AHaumer",
            "description": "Using FluxTubes to prepare examples of magnetic cricuits for teaching the basics of electrical engineering, I found some improvements:\n\n annotation defaultComponentPrefixes = parameter for parameter records\n New electric-magnetic-mechanical element, representing a moving coil in an airgap, i.e. a combination of converter and force\n Find a backwards compatible solution for replacing or amending the Boolean parameter nonLinearPermeability with an enumeration to enable alternative interpolation or approximation of material characteristics\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 145,
            "date": "Jan 12, 2020",
            "title": "Naming of analog sources",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3305",
            "poster_name": "#3305\n            opened Jan 12, 2020 by\n            christiankral",
            "description": "The package Modelica.Electrical.Analog.Sources contains models which naming we may want to re-consider:\n\nExpSineVoltage\nExponentialsVoltage\nExpSineCurrent\nExponentialsCurrent\n\nTwo questions arise to me (certainly the same questions for voltage and current sources):\n\nIs ExponentialsVoltage correct (which sounds plural to me) or shall it be ``ExponentialVoltage`?\nShall we change ExpSineCurrent to ExponentialSineCurrent (or ExponentialsSineCurrent?) in order to not use abbreviations. The length of the class name shall not be an issue here, as we have much longer names in this package, too:\n\n\nIn addition to the library officers, hopefully a native English speaking person wants to contribute here.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 146,
            "date": "Nov 29, 2019",
            "title": "Reference angle of Magnetic.QuasiStatic.FundamentalWave",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3241",
            "poster_name": "#3241\n            opened Nov 29, 2019 by\n            AHaumer",
            "description": "Machine models of Magnetic.QuasiStatic.FundamentalWave use the system of reference angles from Modelica.Electrical.QuasiStatic. Reference angle is passed between electrical and magnetic domain by Components.MultiPhaseElectroMagneticConverter. Reference angles of stator, rotor are mechanical rotor angle are linked by BasicMachines.Components.RotorSaliencyAirGap.\nA doubly-fed induction machine with slipring rotor is hard to model:\nStator source defines stator reference angle and frequency, rotor source defines rotor reference angle and frequency. Mechanical angle and angular velocity is defined by the equation of motion but on the other hand has to fit to stator and rotor reference angle and frequency.\nTherefore some issues should be checked to achieve improvements in handling:\n\nWhere to establish brekable branches, where to establosh nob-breakable branches?\nWhere to establish potential roots?\n\nNote: In some cases no source is connected to stator and / or rotor plugs, but only passive components. In that case the machine should define reference angle and frequency.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 147,
            "date": "Oct 23, 2019",
            "title": "Missing concept for handling the initial conditions of capacitances",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3168",
            "poster_name": "#3168\n            opened Oct 23, 2019 by\n            beutlich",
            "description": "See #2146 (comment).\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 148,
            "date": "Oct 18, 2019",
            "title": "FixedRotation uses the non SI unit Angle_deg",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3158",
            "poster_name": "#3158\n            opened Oct 18, 2019 by\n            otronarp",
            "description": "Modelica.Mechanics.MultiBody.Parts.FixedRotation uses the non SI unit Angle_deg:\nparameter Cv.NonSIunits.Angle_deg angle = ..\nparameter Cv.NonSIunits.Angle_deg angles[3] = ...\n\nUsing non SI units in the interface is bad practice since it spreads to the rest of you your model if you want to propagate the parameter from a higher hierarchical  level.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n2\n hyumo and beutlich reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n2 reactions",
            "comments": []
        },
        {
            "index": 149,
            "date": "Oct 11, 2019",
            "title": "Change name to loadResource",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3145",
            "poster_name": "#3145\n            opened Oct 11, 2019 by\n            casella",
            "description": "The choice of name of the Modelica.Utilities.Files.loadResource function is a bit misleading, since the function does not load anything anywhere, but simply converts a modelica:// URI into a string an absolute file path, that can be used as an input to the numerous functions that require a fileName input string.\nAs we have a once-in-a-lifetime opportunity to improve lame naming, I would propose to change its name from loadResource to uri2fileName or something similar.\nI can take care of that if there is agreement that this is a good idea\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n3\n otronarp, christiankral, and maltelenz reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n3 reactions",
            "comments": []
        },
        {
            "index": 150,
            "date": "Oct 8, 2019",
            "title": "Initialization of BranchingDynamicPipes with homotopy methods failing",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3140",
            "poster_name": "#3140\n            opened Oct 8, 2019 by\n            AnHeuermann",
            "description": "While changing the way OpenModelica initializes when the homotopy-operator is used inside a model we noticed that Modelica.Fluid.Examples.BranchingDynamicPipes behaves not as expected and is triggering a bunch of asserts.\nWhen using homotopy method for the initialization problem (Advanced.OnlyUseHomotopyMethod = true in Dymola or -homotopyOnFirstTry in OpenModelica) we get an initialization failure.\n@casella stated:\n\nI got an initialization failure, with some error messages similar to the ones reported by omc,\nplus this additional diagnostic message:\nJacobian inverse norm estimate: 1.74013e+012\nCondition number estimate: 1.93572e+014\n1-norm of the residual = 21864.4\nThe estimates indicate that the Jacobian is close to singular, suggesting that there is no solution.\n\nI guess this indicates something's wrong in the parametrization of the system, which results in a singular or nearly singular Jacobian at lambda = 0. I'll investigate this further, but I'd say this is a problem with the model, not with the tools.\n\nChanging the parametrization of used homotopy operators inside the model, so that the used homotopy solvers converge to the right solution, could be a solution. At the same time it should not be dependent of the chosen tool to solve the model.\nSee also OpenModelica ticket 5139.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 151,
            "date": "Sep 29, 2019",
            "title": "Connector appearance and naming harmonisation in MSL 4.0.0",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3125",
            "poster_name": "#3125\n            opened Sep 29, 2019 by\n            max-privato",
            "description": "if I understand well, in the upcoming MSL 4.0 it will be allowed to insert non-backward compatible enhancements.\nIt this is true, this is an opportunity to add some changes that in principle improve the library, but in practice are impossible in 3.x releases to avoid breaking existing models and libraries.\nIn this context, I have a few considerations and a proposal.\nThere is an important analogy between the electrical component OnePort and mechanical (translational and rotational) component PartialCompliant.\nIn particular, both have connectors with one flow and one potential variable, and an internal variable that is the difference between the two connectors potentials.\nIn the case of electrical one port-based components, this difference variable is p.v-n.v, i.e. the difference of the potential of the internally filled connector and the internally empty one.\nIn the case of mechanical one port -based components this difference is flange_b.phi- flange_a.phi or flange_b.s- flange_a.s. i.e. the difference of the potential of the internally empty connector and the internally filled one.\nSo, mechanical and electrical libraries show two following inconsistency:\n1) the roles of the filled and empty connectors are reversed\nLooking closer at the various connectors we find inconsistencies:\n\nconnectors in Electrical.Analog.basic are named \"p\" and \"n\"\nconnectors in Electrical.MultiPhase are named \"plug_p\" and \"plug_n\"\nconnectors in Electrical.QuasiStationary.basic are named \"pin_p\" and \"pin_n\"\nmechanical are named flange_a_ and flange_b\n\ni.e. the have the following inconsistencies:\n2) In some cases connectors carry in their name just the quality of being assumed positive or negative, in other cases also the quality of being a pin or a plug.\n3) In mechanical libraries just 'a' and 'b' are used, while in electrical libraries the sign semantics is included with the usage of 'p' and 'n'\nI think that \"p\" and \"n\" carry more information than \"a\" or \"b\", and therefore should be in principle preferred also in mechanical systems. Even if the polarity concept is more common with electric circuits than mechanical systems, what here matters (for me) is that the role of polarity in this context is just to indicate how you use connector potential variables to compute internal differences, and this is in common in mechanical and electrical cases.\nSo I have two proposals that I express below. Proposal 1 tries to address all inconsistencies. Proposal 2 tries to address only inconsistency 1.\nProposal 1 comes in two versions, 1a and 1b. For me, they are rather equivalent, since both hare pros an cons.  In case of need, however, I can contribute more to this comparison at a later time.\n\nProposal 1a : naming and order of connectors\n(actions are in italic)\n\nin mechanical rotational and mechanical translational fill  the connector at present internally empty and use for it the name \"p\" (instead of  di \"flange_a\")\nin mechanical rotational and mechanical translational empty the connector at present internally filled and use for it the name \"n\" (instead of \"flange_b\")\nin Electrical.MultiPhase and Electrical.Quasistationary name the filled connector \"p\" instead of \"plug_p\" and \"pin_p\", repsectively\nin Electrical.MultiPhase and Electrical.Quasistationary name the empty connector \"n\" instead of \"plug_n\" and \"pin_n\", respectively\n\nProposal 1b : naming and order of connectors\n(actions are in italic)\n\nin mechanical rotational and mechanical translational fill  the connector at present internally empty and use for it the name \"flange_p\" (instead of  di \"flange_a\")\nin mechanical rotational and mechanical translational empty the connector at present internally filled and use for it the name \"flange_n\" (instead of \"flange_b\")\nin Electrical.Analog.Basic name the filled connector \"pin_p\" instead of \"p\"\nin Electrical.Analog.Basic name the empty connector \"pin_n\" instead of di \"n\"\n\nProposal 2: ordering of connectors\nAccording to this proposal, the flange_a connector of mechanical (rotational and translational) libraries should become internally empty and flange_b internally filled (respectively with grey and green colours)\n\nMy ideal priority is to adopt proposal 1a or 1b. In case this does not receive enough favour, I propose at least to adopt my proposal 2.\nJust to keep Francesco informed: @casella\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 152,
            "date": "Sep 27, 2019",
            "title": "Possible discrepancy between parameter values in reference book vs function implementation in Modelica.Fluid.Dissipation.PressureLoss.Bend.dp_edgedOverall_DP",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3124",
            "poster_name": "#3124\n            opened Sep 27, 2019 by\n            TYanni",
            "description": "In reference to function dp_edgedOverall_DP\nSOURCE_1: Idelchik, I.E.: HANDBOOK OF HYDRAULIC RESISTANCE, 3rd edition, 2006\nIn line 67: Real B=24.8\n\"Coefficient considering effect of Reynolds number on zeta_TOT\";\nAnd In line 69:   Real exp=0.263\n\"Exponent for Reynolds number correction in laminar regime\";\nBut according the textbook (image attached), the coefficients were expected to be:\nB=4.06\nexp=0.118\nCan you please clarify the source of the values used in the function?\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 153,
            "date": "Sep 21, 2019",
            "title": "Possibly switch Modelica documentation from HTML to Markdown",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3122",
            "poster_name": "#3122\n            opened Sep 21, 2019 by\n            christiankral",
            "description": "The creating of HTML documentation in any Modelica library is very fault prone (e.g. 5ae8073) as most documentation is created manually. Therefore, we continuously run into wrong or missing tags. Writing documentation in Markdown format is lot easier, faster and less fault prone.\nSo in the long run it may make sense to switch from HTML to Markdown in the Modelica documentation as suggested in #2867 (comment). This is an idea I wanted to share as some others may already have thought about it.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 154,
            "date": "Aug 21, 2019",
            "title": "Nonphysical pump behavior vs gravity change",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3098",
            "poster_name": "#3098\n            opened Aug 21, 2019 by\n            mestinso",
            "description": "The current behavior found in Modelica.Fluid.Machines.BaseClasses.PartialPump exhibits non-physical behavior vs. changes to gravity.\nWhile \"head\" should change when gravity changes, the flow rate itself should not change if you change the system gravity but otherwise keep the pump boundary conditions the same. Currently, the flow rate will change vs. changes in gravity!\nExample cases where this might be especially problematic:\n\nPump curve measured/parameterized on earth, but used on moon\nPump curve measured/parameterized on earth, but used in microgravity\nOf course, there are more mundane examples where somebody just uses a slightly different value during calibration and simulation: say 9.8 vs. 9.80665, which will introduce a little error if the user is not careful.\n\nThe current flow characteristic is as follows:\nhead = (N/N_nominal)^2*flowCharacteristic(V_flow_single*N_nominal/N)\nThe fix to get the proper physical behavior should be:\nhead = (g_nominal/g)*(N/N_nominal)^2*flowCharacteristic(V_flow_single*N_nominal/N)\nThis fix requires a new parameter: g_nominal, which should default to Modelica.Constants.g_n\nAlso note that\nhead = dp_pump/(rho*g) and\ng = system.g elsewhere in the code\nAlternatively, I would personally be in favor of just switching to a specific energy (H) formulation (which may also be numerically nice for g=0 use case):\nH = (N/N_nominal)^2*flowCharacteristic(V_flow_single*N_nominal/N)\nand\nH = dp_pump/rho\nwith head separately defined for those that care about it as\nhead = dp_pump/(rho*g) with g = system.g\nFor this formulation, the need for g_nominal would not be required.\nA 3rd option could even be:\nhead_nominal = (N/N_nominal)^2*flowCharacteristic(V_flow_single*N_nominal/N)\nhead_nominal = dp_pump/(rho*g_nominal)\nhead = head_nominal*g_nominal/g and g = system.g\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 155,
            "date": "Jul 18, 2019",
            "title": "Code / Formatting guidelines checker",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/3060",
            "poster_name": "#3060\n            opened Jul 18, 2019 by\n            AHaumer",
            "description": "In a discussion the idea came up to have tool independent checker for coding and formatting.\nI know that some parts of such a thing exist in some tools, but it would be nice to have a tool independent solution (like the regression check!).\nLet the tool run through all models of a library, getting a list of things to improve, like:\nparameter description missing, icon color is wrong, name in icon layer has wrong size and color\nand many more - fortunately we have guidelines in the UsersGuide.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 156,
            "date": "Jun 22, 2019",
            "title": "Missing User's Guides",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2990",
            "poster_name": "#2990\n            opened Jun 22, 2019 by\n            christiankral",
            "description": "I suppose that each Modelica package shall have a User's Guide\n\nto give a short introduction into the package,\nto host contact information,\nto host the revision history,\nand summarize all literature references.\n\nSuch a User's Guide is currently missing in the following packages:\n\nBlocks\nElectrical.Analog\nThermal.HeatTransfer\nMath\nComplexMath\nIcons already provides the information does not host it in a subpackage User's Guide contains only icons but neither a real User's Guide nor any information underneath. Icons is organized fully flat.\n\n\nI guess we shall add User's Guides to these subpackags.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 157,
            "date": "Jun 12, 2019",
            "title": "Reference result with \"nan\" for kc_roundTube",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2969",
            "poster_name": "#2969\n            opened Jun 12, 2019 by\n            maltelenz",
            "description": "The csv file ModelicaTest/Fluid/Dissipation/Verifications/HeatTransfer/HeatExchanger/kc_roundTube/kc_roundTube.csv in the reference result repository contains a nan in the first row of data.\nIs this expected? What should it be interpreted as?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 158,
            "date": "Jun 8, 2019",
            "title": "Triac model",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2964",
            "poster_name": "#2964\n            opened Jun 8, 2019 by\n            AHaumer",
            "description": "I do not understand the Modelica.Electrical.Analog.Ideal.IdealTriac:\nBoth thyristors are fired by the same boolean signal?\nShouldn't they get fired by 2 boolean signals with 180\u00b0 (1/2 period) delay in between?\nDoes the model rely on the fact that the positive thyristor that is fired during the negative halfwave, too, wont start conducting since voltage is in reverse direction, and for the negative thyristor the other way round?\nWhat are the resistor (Rdis) and capacitor (Cdis) good for? They can cause a rather high leakage current if the triac is in blocking condition, and a model without these would work without problems.\nMaybe @christophclauss and @kristinmajetta could clarify this issue. thanks.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 159,
            "date": "May 21, 2019",
            "title": "Revise documentation on (and possibly implementation of) StateSelection",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2946",
            "poster_name": "#2946\n            opened May 21, 2019 by\n            beutlich",
            "description": "Modelica.Mechanics.Translational.UsersGuide.StateSelection and Modelica.Mechanics.Rotational.UsersGuide.StateSelection speak about the error control of unbounded absolute state variables:\n\n\n\nModelicaStandardLibrary/Modelica/Mechanics/Translational.mo\n\n\n         Line 380\n      in\n      6aa5f83\n\n\n\n\n\n\n Currently, in Modelica there is no possibility to provide this information. \n\n\n\n\n\nand\n\n\n\nModelicaStandardLibrary/Modelica/Mechanics/Rotational.mo\n\n\n         Line 478\n      in\n      6aa5f83\n\n\n\n\n\n\n Currently, in Modelica there is no possibility to provide this information. \n\n\n\n\n\nrespectively. However, with the Modelica Language Specification 3.4 the unbounded attribute for Real variables was introduced, such that at least the paragraphs on StateSelection need to be reworded.\nSee also #2867.\nAnd I actually wonder if there is any more impact than just on the documentation. Can we also improve the implementation (and remove the advanced nominal parameters)?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 160,
            "date": "May 20, 2019",
            "title": "Initialization of bearingFriction.sa in RobotR3.oneAxis",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2941",
            "poster_name": "#2941\n            opened May 20, 2019 by\n            henrikt-ma",
            "description": "In #1741, the first example of models that are problematic for regression testing pointed to the initialization of axis.gear.bearingFriction.sa.  This has always been a bit worrying, but so far SystemModeler hasn't really been aware of the problem, just carrying out the fixed point iteration and being happy to find a solution.\nNow, we'd like to do better, and when doing our refined analysis of initialization problems, the problem with oneAxis and fullRobot stand out as one out of a very small number of issues among all the MSL examples.  Therefore, I'm opening this separate issue to get a more focused discussion than what is possible in the overview ticket #1741.\nIn detail: How is a tool supposed to initialize axis.gear.bearingFriction.sa, not knowing the value of axis.gear.bearingFriction.locked?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 161,
            "date": "May 17, 2019",
            "title": "Add flexible beam component to the MultiBody library",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2938",
            "poster_name": "#2938\n            opened May 17, 2019 by\n            casella",
            "description": "Back in 2005, our PhD students Francesco Schiavo and Luca Vigan\u00f2, under the supervision of my colleague prof. Gianni Ferretti, developed the model of an Euler-Bernoulli thin beam component compatible with the MultiBody library, using the formulation by Shabana et al. The results were published in this Modelica Conference 2005 paper.\nThe developed component uses linear theory for the elastic deformations, assuming they are small enough. However, by connecting several such components together, it is also possible to model large deformations.\nWe are now cleaning up the model, which was originally written in Modelica 2 and used old Dymola-style comments and annotations, and recovering a number of test cases. The plan is to add two new components to Modelica.Mechanics.MultiBody, as well as a few example cases, and a few test cases in ModelicaTest where the model is validated against published exact solutions. We will open a PR for MSL 4.0.0 when everything is ready.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n2\n traversaro and hyumo reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n2 reactions",
            "comments": []
        },
        {
            "index": 162,
            "date": "May 15, 2019",
            "title": "Friction model in Modelica.Thermal.FluidHeatFlow",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2935",
            "poster_name": "#2935\n            opened May 15, 2019 by\n            AHaumer",
            "description": "It would be usefull to implementen the friction model in Modelica.Thermal.FluidHeatFlow in an exchangeable way (i.e. not by extending from the friction model) and implement friction of pipes based on geometry (and Reynolds number).\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 163,
            "date": "May 14, 2019",
            "title": "Proposal: Styling Guidelines of Modelica Code and Variables",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2931",
            "poster_name": "#2931\n            opened May 14, 2019 by\n            christiankral",
            "description": "Some programming languages have styling guidelines which recommend how code shall be written and formatted. These styling guidelines help to make the code appear in a uniform way.\nFor Modelica such styling guidelines do not yet exist. Introducing such guidelines would have some advantages on my opinion. This includes the following aspects:\nCode Format\nModelica tools might support some auto-format of code depending on the styling guidelines (if enabled in the tool). If each tool obeys the same styling guidelines, it could be avoided that using different tools could cause changed line breaks, spaces, etc.\nSuch styling guidelines (or rules) might include (and may be extended):\n\nBlanks and other white spaces\nIndentations\nLine breaks\n\nPossible example of good style\na + b = c;\nz = sqrt(x^2 + y^2);\nfor k in 1:n loop\n    x[1, k] = 3 * k;\nend for;\n\nPossible example of bad style\na+b=c;\nz=sqrt(x^2+y^2);\nfor k in 1 : n loop\n  x[1,k]=3*k;\nend for;\n\nSuch code formatting guidelines and / or rules shall then also be included and implemented in the Modelica Language Specification document.\nVariable Naming Conventions\nLong time ago an attempt was made to somehow provide a\nnaming convention\nof variables. At the time it was created, it already was a compromise as it was not possible to introduce any non-backwards compatible changes at the time. Therefore we specified variables like HFlow and Qflow which are obviously spelled according to different rules, as the H in HFlow is uppercase and the f in Qflow is lowercase.\nThe conversion scripts of MSL 4.0.0 provides the opportunity to us to streamline the variable naming. Proposal #2357 @ Modelica Specification might additionally support an improved naming convention, however. A new possible variable naming convention might follow some simple rules and #2357 @ Modelica Specification might be adapted such way that simple naming conventions might be established.\nPossible rules (to be discussed)\n\nDerive variable names form physical symbols as they are typed in scientific publications:\nUse _ to separate indices from variables\nUse \u00b4 to indicate time derivatives\nUse  \u20d7 to indicate a vector\nUse a special character, e.g. @, to indicate an operating point\nProvide default abbreviations of operating points, e.g. start, end, nominal (instead of nom), max (instead of maximum)\n\nPossible good examples of variable names (to be discussed)\n\n\u03b1_20 instead of alpha20: linear temperature coefficient\n\u2206p instead of dp: Pressure drop\n\u03b7 instead of eta: Efficiency\nR_s instead of Rs: Stator resistance of induction machines\nR_r\u00b4 instead of Rr: Rotor resistance transformed to stator side\nV_a@nominal instead of VaNominal: Nominal armature voltage of DC machine\n\u03c9 instead of w: angular velocity\nt@start or t_start instead of startTime: start time\n\u2206t instead of duration: time duration\n\u03c4 instead of tau: torque\n\u03c4@max or \u03c4_max instead of tauMax: maximum torque\n\nImplementation Aspects\nWhenever we implement (new) guidelines it shall be done in such a way, that existing code does not get invalid automatically. Instead the guidelines shall be strong recommendation, not a must.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n2\n justnielsen and tobolar reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n2 reactions",
            "comments": []
        },
        {
            "index": 164,
            "date": "May 8, 2019",
            "title": "Missing derivative annotation pointing to MixtureGasNasa.h_TX_der?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2921",
            "poster_name": "#2921\n            opened May 8, 2019 by\n            henrikt-ma",
            "description": "I looks to me as if Modelica.Media.IdealGases.Common.MixtureGasNasa.h_TX_der is unused, but that it was meant to be used as the derivative of Modelica.Media.IdealGases.Common.MixtureGasNasa.h_TX.\nI've tried adding the derivative(zeroDerivative = h_off) = h_TX_der annotation, and that seems to be working fine with the regression test for Modelica.Media.Examples.MixtureGases.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 165,
            "date": "May 3, 2019",
            "title": "Electrical.Spice3 - Complete model compatibility to Berkeley Spice3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2913",
            "poster_name": "#2913\n            opened May 3, 2019 by\n            christophclauss",
            "description": "Compared with the Berkeley SPICE3 (see e.g. bwrcs.eecs.berkeley.edu/Classes/IcBook/SPICE) the model supply of Modelica.Electrical.Spice3 is not complete.\nThe following models are missing (in brackets the SPICE typical Capital):\nTransmission lines lossless (T)\nLossy transmission lines (O)\nUniform distributed RC-lines (U)\nMESFETs (Z)\nHigher level MOSFETs (Level 3, 4, 5, 6) (M)\nSwitches (S, W)\nNonlinear dependent Sources (B)\nThe vision is to have the complete set of Berkeley SPICE3 models available in the MSL. Then each SPICE3 deck (that means an electrical circuit description for SPICE3) can be translated to a Modelica and simulated without models missing.\nA further vision is to translate SPICE3 decks automatically to Modelica.\nThe benefit of having SPICE3 available in the MSL is the possibility to combine SPICE3 simulations to nonelectric domains.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 166,
            "date": "Apr 30, 2019",
            "title": "Clarification of some rules within UsersGuide.Conventions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2907",
            "poster_name": "#2907\n            opened Apr 30, 2019 by\n            tobolar",
            "description": "Reviewing Modelica.UsersGuide.Conventions I have found some issues to be discussed/clarified.\nModelica.UsersGuide.Conventions.Documentation\n\nGeneral comments:\n\nChange order of the package Modelica.UsersGuide.Conventions.Documentation: \"Structure\" first, \"Format\" second.\n\n\n...Documentation.Format\n\nSection \"Paragraphs\" shall be moved into a separate class for better referencing.\nSection \"Emphasis\" shall be moved into a separate class called e.g. \"Common text format\" for better referencing.\nSection \"Capitalization of Text\" shall be splitted and integrated into Modelica.UsersGuide.Conventions.Documentation.Format.Figures and Modelica.UsersGuide.Conventions.Documentation.Format.Tables.\n\n\n...Documentation.Format.Code\n\nPoint 3: \"Multi line or single line code shall not be indented.\" I don't really understand this point.\nWhat is the difference between point 1 and point 4?\nSuggestion: Write code additionally within <blockquote> environment to have always the same indention compared to the common text.\n\n\n...Documentation.Format.Equations\n\nSuggestion: Write equations additionally within <blockquote> environment.\n\n\n...Documentation.Format.Figures\n\nPoint 1: Place figures within <div> environment for spaces before and after image. This doesn't apply if the figure is placed within the <table> environment.\nTo refer to a figure in a text, a non brakeable space shall be placed between figure name and the figure enumeration, i.e. Fig&nbsp;1\n\n\n...Documentation.Format.Hyperlinks\n\nPoints 2. and 3. seem to be of the same information. Suggestion: Reformulate Point 2 so that the hyperlink text may not necessarilly include the full main package name, since this is often not reasonable, see e.g. Modelica.UsersGuide.Conventions.UsersGuide where this rule is broken.\nPoint 5 can be deleted. Better to describe in the examples themselfs what's going on.\nPoint 6: \"No links to commercial web sites are allowed\". How to understand this? Found: www.modelon.se, www.dynasim.se, www.amazon.de, www.itisim.com, www.xrg-simulation.de, www.mathworks.com, www.kuka-robotics.com\nExample 2 not according to rules defined.\n\n\n...Documentation.Format.References\n\nClass shall be renamed to e.g. ReferencesCitation \"Citation of references\" since it really is about citation.\n\n\n...Documentation.Format.Tables\n\nPoint 4: \"Table headers and entries start with capital letters.\" Change to  \"Table headers shall start with capital letters\" only.\n\n\n\nModelica.UsersGuide.Conventions.ModelicaCode\n\n...ModelicaCode.Format\n\nExample text shall be better within <pre> environment, instead of <code>.\n\n\n...ModelicaCode.Naming\n\nQuantity entries of table \"Variables and names\" shall be given literally, e.g. \"internal energy\" instead of \"internalEnergy\".\n\n\n\nModelica.UsersGuide.Conventions.UsersGuide\n\n...UsersGuide.References\n\nPoint 1 shall actually be a part of Modelica.UsersGuide.Conventions.Documentation.Format.References.\n\n\n...UsersGuide.RevisionHistory\n\nThere is no class in MSL called RevisionHistory. I have found only several ReleaseNotes classes. So the class shall be renamed accordingly.\n\n\n\nModelica.UsersGuide.Conventions.Icons\n\n...Icons\n\nAdd an example of a typical name format Text(extent={{-150,150},{150,110}}, textString=\"%name\", lineColor={0,0,255}) into Section \"Component Name\".\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 167,
            "date": "Mar 7, 2019",
            "title": "Improve LAPack deployment with MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2849",
            "poster_name": "#2849\n            opened Mar 7, 2019 by\n            beutlich",
            "description": "As discussed with @hubertus65 at the Regensburg design meeting:\nMSL is currently not self-contained to the LAPack sources and binaries. There only is a note in the readme, that each tool needs to support LAPack.\nWill add some more thoughts soon.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 168,
            "date": "Feb 21, 2019",
            "title": "Update PRNGs in ModelicaRandom.c?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2836",
            "poster_name": "#2836\n            opened Feb 21, 2019 by\n            beutlich",
            "description": "When ModelicaRandom.c was introduced with the Noise package for MSL v3.2.2 the xorshift PRNGs from http://xoshiro.di.unimi.it/xorshift.php were utilized. These PRNGs are now superseded by xoshiro, which according to the authors at http://xoshiro.di.unimi.it are faster and better.\n@MartinOtter @tobolar @HansOlsson What do you think?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 169,
            "date": "Feb 13, 2019",
            "title": "Equal-block missing in Modelica.Blocks.Logical",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2831",
            "poster_name": "#2831\n            opened Feb 13, 2019 by\n            HansOlsson",
            "description": "As far as I can tell there is no block that can be used to check if two Boolean signals are equal and generate true iff that is the case. (I can add a pull-request for it later.) There might also be other similar blocks that are missing.\nObviously one could use Xor->Not, but some might find that non-intuitive.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 170,
            "date": "Feb 5, 2019",
            "title": "Moist air at very low temperatures",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2815",
            "poster_name": "#2815\n            opened Feb 5, 2019 by\n            thorade",
            "description": "The nonlinear solver sometimes uses very low or even negative temperatures in function calls to h_pTX, resulting in errors, because of the log(T) in the h_Tlow function.\nI suggest to catch negative temperatures and return h=-inf for T<=0, will send a PR.\nThe following model was used to investigate and it revealed another problem:\nmodel MoistAirTLowTest\n  replaceable package Medium = Modelica.Media.Air.MoistAir;\n  Modelica.Blocks.Sources.Ramp Tramp(\n    height=-320,\n    duration=0.8,\n    offset=323.15,\n    startTime=0.1)\n    annotation (Placement(transformation(extent={{-80,38},{-60,60}})));\n\n  Medium.AbsolutePressure pamb= 101325;\n  Medium.Temperature T;\n  Medium.SpecificEnthalpy h;\n\nequation \n  T = Tramp.y;\n  h = Medium.h_pTX(pamb,T,Medium.reference_X);\n  annotation (uses(Modelica(version=\"3.2.2\")));\nend MoistAirTLowTest;\nAfter simulation, plot h with T as independent variable. The bump in the curve might push the solver even further in the wrong direction, I believe.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 171,
            "date": "Dec 4, 2018",
            "title": "Spice3: documentation for MOSFET seems wrong",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2795",
            "poster_name": "#2795\n            opened Dec 4, 2018 by\n            JoeRiel",
            "description": "The html string for Modelica.Electrical.Spice3.Semiconductors.ModelcardMOS2 states that the record is for a level 1: Shichman-Hodges model.  Should that be level 2?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 172,
            "date": "Nov 21, 2018",
            "title": "Missing test for Modelica.Media.IdealGases.Common.MixtureGasNasa.mixtureViscosityChung",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2781",
            "poster_name": "#2781\n            opened Nov 21, 2018 by\n            beutlich",
            "description": "@finback-at Can you please create a pull request to add a new test model comparing mixtureViscosityChung and dynamicViscosity for CombustionAir to ModelicaTest.Media.TestOnly. Thanks a lot!\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 173,
            "date": "Nov 19, 2018",
            "title": "Modelica.Mechanics.MultiBody.Frames.from_nxz calculation of w",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2776",
            "poster_name": "#2776\n            opened Nov 19, 2018 by\n            GarronFish",
            "description": "Modelica.Mechanics.MultiBody.Frames.from_nxz sets R.w={0,0,0}\nthis seems incorrect.  Shouldn't R.w be calculated?\nR.w can be calculated with der(T) and T.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 174,
            "date": "Nov 5, 2018",
            "title": "Issues regarding DC machines",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2766",
            "poster_name": "#2766\n            opened Nov 5, 2018 by\n            max-privato",
            "description": "Consider in Modelica.Electrical.Machines.BasicMachines\nDC_ElectricalExcited and DC_SeriesExcited.\nThe documentation says that DC_SeriesExcited must be used for series connected machines, but the model allows different types of excitation connection.\nIn principle models allow exciting DC_SeriesExcited  shunt and DC_ElectricalExcited in series.\nSo the following question arises: if DC_SeriesExcited can be used only with the excitation coil in series, why has it four pins, thus allowing also other connections (e.g. in parallel) which give unpredictable results?\nI also checked that if DC_ElectricalExcited machine excitation coil is connected in series the results do not correspond to an actual series excited machine.\nSo I propose\n\nto modify the DC_seriesExcited so that the series connection between excitation armature coils is internally made and shown in the machine symbol, so that the machine will have two terminals. Unless there is a good reason for leaving four coils, and in this case this should be explained in the documentation\nexplicitly state in the documentation of DC_ElectricalExctited that the excitation coil cannot be connected in series, giving also a short explanation why.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 175,
            "date": "Oct 23, 2018",
            "title": "Use non-breaking space in documentation",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2751",
            "poster_name": "#2751\n            opened Oct 23, 2018 by\n            tobolar",
            "description": "I would lobby for more often usage of non-breaking space character, in HTML &nbsp;, in the documentation. At least the following cases should be covered:\n\na variable quantity is given by a number and an unit, as required in https://www.bipm.org/en/publications/si-brochure/section5-3.html, i.e. 132.7\u00a0kg shall be written by 132.7&nbsp;kg,\naround mathematical symbols in inline equations, e.g. length\u00a0=\u00a02r by length&nbsp;=&nbsp;2r,\nbefore variable symbol, e.g. velocity\u00a0v by velocity&nbsp;<em>v</em>,\nwhere line breaking is not desired, e.g. A short introduction ... by A&nbsp;short introduction ....\n\nIf agreed, we shall codify the recommendation in Modelica.UsersGuide.Conventions.Documentation.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n dietmarw reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 176,
            "date": "Oct 19, 2018",
            "title": "Use ellipses in documentation",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2749",
            "poster_name": "#2749\n            opened Oct 19, 2018 by\n            tobolar",
            "description": "Relying on @kristinmajetta's comment #2748 (comment) and on https://en.wikipedia.org/wiki/Ellipsis#In_mathematical_notation, a row of three points (ellipsis) should be used for lists (or ranges) of numbers within the MSL's documentation. At the moment, mostly just two points are used.\nTo perform this properly, a HTML entity shall be used:\n&#8230;  or  &#x2026;  or  &hellip;\n\nIf agreed, we can also add some recommendation in Modelica.UsersGuide.Conventions.Documentation.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n dietmarw reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 177,
            "date": "Sep 25, 2018",
            "title": "Poor scaling of curve parameter s in Modelica.Fluid.Interfaces.PartialLumpedVolume",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2717",
            "poster_name": "#2717\n            opened Sep 25, 2018 by\n            ErikHenningsson",
            "description": "Poor scaling of the curve parameter s in Modelica.Fluid.Interfaces.PartialLumpedVolume when portsData_height[i] = 0 causes problems for mode switch detection. Especially, when switching from the mode\n// ports[i] is above fluidLevel, preventing outflow\nThe curve parameter s is very small when in this mode but rather large when in other modes. This makes detection of zero-crossings difficult.\nProblems can for example occur when simulating Modelica.Fluid.Examples.Tanks.ThreeTanks with tank levels starting at 10 m, 0 m, and 0 m, respectively. It may happen that the flow into tank2 starts very/too late.\nThe equation for s in the above mode is as follows:\ns[i] = (ports[i].p - vessel_ps_static[i])/Medium.p_default*(portsData_height[i] - fluidLevel);\nThe pressure variables are normalized, but the height difference isn't. I suggest including a normalization of the height difference as well.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 178,
            "date": "Aug 1, 2018",
            "title": "Sorting PNG files (figures) in Resources/Images",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2695",
            "poster_name": "#2695\n            opened Aug 1, 2018 by\n            tobolar",
            "description": "There is a convention concerning figures' storage which states that\n\nThe PNG files should be placed in a folder which exactly represents the package structure.\n\n(see also Modelica.UsersGuide.Conventions.Documentation.Format.Figures).\nAccording to this, the figures collected in Modelica/Resources/Images/ should be stored appropriately. This is already the case for figures used in Modelica.UsersGuide.Conventions, i.e. there is a directory Modelica/Resources/Images/UsersGuide/Conventions containing corresponding subdirectories.\nThis concerns in particular the following classes:\nModelica.Blocks\n\n Modelica.Blocks.Logical\n\nimage Modelica/Resources/Images/Blocks/LogicalNetwork1.png not saved in directory ~/Modelica/Resources/Images/Blocks/Logical\n\n\n Modelica.Blocks.Noise\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/UniformNoise.png not saved in directory ~/Modelica/Resources/Images/Blocks/Noise\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.density.png not saved in directory ~/Modelica/Resources/Images/Blocks/Noise\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.quantile.png not saved in directory ~/Modelica/Resources/Images/Blocks/Noise\n\n\n Modelica.Blocks.Examples.PID_Controller\n\nimage Modelica/Resources/Images/Blocks/PID_controller.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\nimage Modelica/Resources/Images/Blocks/PID_controller2.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\n\n\n Modelica.Blocks.Examples.Filter\n\nimage Modelica/Resources/Images/Blocks/Filter1.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\n\n\n Modelica.Blocks.Examples.FilterWithRiseTime\n\nimage Modelica/Resources/Images/Blocks/FilterWithRiseTime.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\n\n\n Modelica.Blocks.Examples.InverseModel\n\nimage Modelica/Resources/Images/Blocks/InverseModelSchematic.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\nimage Modelica/Resources/Images/Blocks/InverseModel.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\n\n\n Modelica.Blocks.Examples.BusUsage\n\nimage Modelica/Resources/Images/Blocks/BusUsage.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\nimage Modelica/Resources/Images/Blocks/BusUsage2.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\nimage Modelica/Resources/Images/Blocks/BusUsage3.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples\n\n\n Modelica.Blocks.Examples.NoiseExamples.UniformNoise\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/UniformNoise.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.AutomaticSeed\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/AutomaticSeed1.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\nimage Modelica/Resources/Images/Blocks/NoiseExamples/AutomaticSeed2.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.Distributions\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/Distributions.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.UniformNoiseProperties\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/UniformNoiseProperties1.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.NormalNoiseProperties\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/NormalNoiseProperties1.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.Densities\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/Densities.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.ImpureGenerator\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/ImpureGenerator.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.ActuatorWithNoise\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/ActuatorNoiseDiagram.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\nimage Modelica/Resources/Images/Blocks/NoiseExamples/ActuatorNoise.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Examples.NoiseExamples.DrydenContinuousTurbulence\n\nimage Modelica/Resources/Images/Blocks/NoiseExamples/equation-erVWhiWU.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\nimage Modelica/Resources/Images/Blocks/NoiseExamples/equation-W0zl2Gay.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\nimage Modelica/Resources/Images/Blocks/NoiseExamples/DrydenContinuousTurbulence.png not saved in directory ~/Modelica/Resources/Images/Blocks/Examples/NoiseExamples\n\n\n Modelica.Blocks.Continuous.LowpassButterworth\n\nimage Modelica/Resources/Images/Blocks/Butterworth.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\n\n\n Modelica.Blocks.Continuous.CriticalDamping\n\nimage Modelica/Resources/Images/Blocks/CriticalDampingNormalized.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\nimage Modelica/Resources/Images/Blocks/CriticalDampingNonNormalized.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\n\n\n Modelica.Blocks.Continuous.Filter\n\nimage Modelica/Resources/Images/Blocks/LowPassOrder4Filters.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\nimage Modelica/Resources/Images/Blocks/LowPassOrder4FiltersStepResponse.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\nimage Modelica/Resources/Images/Blocks/HighPassOrder4Filters.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\nimage Modelica/Resources/Images/Blocks/HighPassOrder4FiltersStepResponse.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\nimage Modelica/Resources/Images/Blocks/CriticalDampingNormalized.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\nimage Modelica/Resources/Images/Blocks/CriticalDampingNonNormalized.png not saved in directory ~/Modelica/Resources/Images/Blocks/Continuous\n\n\n Modelica.Blocks.Interaction.Show.RealValue\n\nimage Modelica/Resources/Images/Blocks/Interaction/RealValue.png not saved in directory ~/Modelica/Resources/Images/Blocks/Interaction/Show\n\n\n Modelica.Blocks.Interaction.Show.IntegerValue\n\nimage Modelica/Resources/Images/Blocks/Interaction/IntegerValue.png not saved in directory ~/Modelica/Resources/Images/Blocks/Interaction/Show\n\n\n Modelica.Blocks.Interaction.Show.BooleanValue\n\nimage Modelica/Resources/Images/Blocks/Interaction/BooleanValue.png not saved in directory ~/Modelica/Resources/Images/Blocks/Interaction/Show\n\n\n\nFor following blocks, figures originate from the Math library. Thus, no relocation needed here.\n\n Modelica.Blocks.Math.Sin\n\nimage Modelica/Resources/Images/Math/sin.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Cos\n\nimage Modelica/Resources/Images/Math/cos.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Tan\n\nimage Modelica/Resources/Images/Math/tan.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Asin\n\nimage Modelica/Resources/Images/Math/asin.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Acos\n\nimage Modelica/Resources/Images/Math/acos.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Atan\n\nimage Modelica/Resources/Images/Math/atan.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Atan2\n\nimage Modelica/Resources/Images/Math/atan2.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Sinh\n\nimage Modelica/Resources/Images/Math/sinh.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Cosh\n\nimage Modelica/Resources/Images/Math/cosh.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Tanh\n\nimage Modelica/Resources/Images/Math/tanh.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Exp\n\nimage Modelica/Resources/Images/Math/exp.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Log\n\nimage Modelica/Resources/Images/Math/log.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n Modelica.Blocks.Math.Log10\n\nimage Modelica/Resources/Images/Math/log10.png not saved in directory ~/Modelica/Resources/Images/Blocks/Math\n\n\n\nModelica.ComplexBlocks\nFigures used in ComplexBlocks originate from Blocks or Math library. Thus, no relocation needed here.\n\n Modelica.ComplexBlocks.ComplexMath.Sin\n\nimage Modelica/Resources/Images/Math/sin.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Cos\n\nimage Modelica/Resources/Images/Math/cos.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Tan\n\nimage Modelica/Resources/Images/Math/tan.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Asin\n\nimage Modelica/Resources/Images/Math/asin.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Acos\n\nimage Modelica/Resources/Images/Math/acos.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Atan\n\nimage Modelica/Resources/Images/Math/atan.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Sinh\n\nimage Modelica/Resources/Images/Math/sinh.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Cosh\n\nimage Modelica/Resources/Images/Math/cosh.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Tanh\n\nimage Modelica/Resources/Images/Math/tanh.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Exp\n\nimage Modelica/Resources/Images/Math/exp.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.ComplexMath.Log\n\nimage Modelica/Resources/Images/Math/log.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/ComplexMath\n\n\n Modelica.ComplexBlocks.Sources.ComplexConstant\n\nimage Modelica/Resources/Images/Blocks/Sources/Constant.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/Sources\n\n\n Modelica.ComplexBlocks.Sources.ComplexStep\n\nimage Modelica/Resources/Images/Blocks/Sources/Step.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/Sources\n\n\n Modelica.ComplexBlocks.Sources.LogFrequencySweep\n\nimage Modelica/Resources/Images/Blocks/Sources/LogFrequencySweep.png not saved in directory ~/Modelica/Resources/Images/ComplexBlocks/Sources\n\n\n\nModelica.StateGraph\n\n Modelica.StateGraph\n\nimage Modelica/Resources/Images/StateGraph/Examples/ControlledTanks1_small.png not saved in directory ~/Modelica/Resources/Images/StateGraph\nimage Modelica/Resources/Images/StateGraph/Examples/ControlledTanks2_small.png not saved in directory ~/Modelica/Resources/Images/StateGraph\n\n\n Modelica.StateGraph.UsersGuide.ApplicationExample\n\nimage Modelica/Resources/Images/StateGraph/Examples/ControlledTanks1.png not saved in directory ~/Modelica/Resources/Images/StateGraph/UsersGuide\nimage Modelica/Resources/Images/StateGraph/Examples/ControlledTanks2.png not saved in directory ~/Modelica/Resources/Images/StateGraph/UsersGuide\n\n\n\nModelica.Electrical\n\n Modelica.Electrical.Analog.Ideal.IdealIntermediateSwitch\n\nimage Modelica/Resources/Images/Electrical/Analog/IdealIntermediateSwitch1.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Ideal\nimage Modelica/Resources/Images/Electrical/Analog/IdealIntermediateSwitch2.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Ideal\n\n\n Modelica.Electrical.Analog.Ideal.ControlledIdealIntermediateSwitch\n\nimage Modelica/Resources/Images/Electrical/Analog/ControlledIdealIntermediateSwitch1.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Ideal\nimage Modelica/Resources/Images/Electrical/Analog/ControlledIdealIntermediateSwitch2.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Ideal\n\n\n Modelica.Electrical.Analog.Lines.OLine\n\nimage Modelica/Resources/Images/Electrical/Analog/OLine.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Lines\n\n\n Modelica.Electrical.Analog.Lines.M_OLine\n\nimage Modelica/Resources/Images/Electrical/Analog/segment.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Lines\nimage Modelica/Resources/Images/Electrical/Analog/segment_last.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Lines\n\n\n Modelica.Electrical.Analog.Lines.ULine\n\nimage Modelica/Resources/Images/Electrical/Analog/ULine.png not saved in directory ~/Modelica/Resources/Images/Electrical/Analog/Lines\n\n\n Modelica.Electrical.Machines.SpacePhasors.Blocks.Rotator\n\nimage Modelica/Resources/Images/Electrical/Machines/Rotator.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/SpacePhasors/Blocks\n\n\n Modelica.Electrical.Machines.SpacePhasors.Functions.Rotator\n\nimage Modelica/Resources/Images/Electrical/Machines/Rotator.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/SpacePhasors/Functions\n\n\n Modelica.Electrical.Machines.Losses.Friction\n\nimage Modelica/Resources/Images/Electrical/Machines/frictiontorque.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/Losses\n\n\n Modelica.Electrical.Machines.Losses.InductionMachines.Core\n\nimage Modelica/Resources/Images/Electrical/Machines/corelossesVw.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/Losses/InductionMachines\nimage Modelica/Resources/Images/Electrical/Machines/corelossesPcw.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/Losses/InductionMachines\n\n\n Modelica.Electrical.Machines.Losses.DCMachines.Brush\n\nimage Modelica/Resources/Images/Electrical/Machines/brush.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/Losses/DCMachines\n\n\n Modelica.Electrical.Machines.Losses.DCMachines.Core\n\nimage Modelica/Resources/Images/Electrical/Machines/corelossesVw.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/Losses/DCMachines\nimage Modelica/Resources/Images/Electrical/Machines/corelossesPcw.png not saved in directory ~/Modelica/Resources/Images/Electrical/Machines/Losses/DCMachines\n\n\n Modelica.Electrical.MultiPhase.UsersGuide.PhaseOrientation\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/phase35.png not saved in directory ~/Modelica/Resources/Images/Electrical/MultiPhase/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/phase610.png not saved in directory ~/Modelica/Resources/Images/Electrical/MultiPhase/UsersGuide\n\n\n Modelica.Electrical.PowerConverters.DCDC.HBridge\n\nimage Modelica/Resources/Images/Electrical/PowerConverters/Hbridge.png not saved in directory ~/Modelica/Resources/Images/Electrical/PowerConverters/DCDC\n\n\n Modelica.Electrical.PowerConverters.DCDC.Control.SignalPWM\n\nimage Modelica/Resources/Images/Electrical/PowerConverters/dutyCycle.png not saved in directory ~/Modelica/Resources/Images/Electrical/PowerConverters/DCDC/Control\n\n\n Modelica.Electrical.QuasiStationary.UsersGuide.Overview.Introduction\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Introduction/img1.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Introduction/img2.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Introduction/img3.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Introduction/phasor_voltage.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\n\n\n Modelica.Electrical.QuasiStationary.UsersGuide.Overview.ACCircuit\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/resonance_circuit.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/img1.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/img2.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/img3.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/img4.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/phasor_diagram.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/ACCircuit/img5.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\n\n\n Modelica.Electrical.QuasiStationary.UsersGuide.Overview.Power\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/v_r.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/i_r.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/power_r.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/power_resistor.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/p_r.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/v_l.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/i_l.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/power_l.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/power_inductor.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\nimage Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview/Power/q_l.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/UsersGuide/Overview\n\n\n Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Impedance\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/SinglePhase/Basic/RX_impedance.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/MultiPhase/Basic\n\n\n Modelica.Electrical.QuasiStationary.MultiPhase.Basic.Admittance\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/SinglePhase/Basic/GB_admittance.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/MultiPhase/Basic\n\n\n Modelica.Electrical.QuasiStationary.MultiPhase.Basic.VariableImpedance\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/SinglePhase/Basic/RX_impedance.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/MultiPhase/Basic\n\n\n Modelica.Electrical.QuasiStationary.MultiPhase.Basic.VariableAdmittance\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/SinglePhase/Basic/GB_admittance.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/MultiPhase/Basic\n\n\n Modelica.Electrical.QuasiStationary.MultiPhase.Sources.FrequencySweepVoltageSource\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/SinglePhase/Sources/FrequencySweepSource.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/MultiPhase/Sources\n\n\n Modelica.Electrical.QuasiStationary.MultiPhase.Sources.FrequencySweepCurrentSource\n\nimage Modelica/Resources/Images/Electrical/QuasiStationary/SinglePhase/Sources/FrequencySweepSource.png not saved in directory ~/Modelica/Resources/Images/Electrical/QuasiStationary/MultiPhase/Sources\n\n\n Modelica.Electrical.Spice3.Examples.Spice3BenchmarkFourBitBinaryAdder\n\nimage Modelica/Resources/Images/Electrical/Spice3/FourBitBinaryAdder.jpg not saved in directory ~/Modelica/Resources/Images/Electrical/Spice3/Examples\n\n\n\nModelica.Magnetic.FluxTubes\n\n Modelica.Magnetic.FluxTubes.UsersGuide.FluxTubeConcept\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/FluxTubeConcept/magnetic_flux_tube_schematic.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/FluxTubeConcept/eq_transition_reluctance_flowAcross_IntegralQuantities.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/FluxTubeConcept/eq_MaxwellConstitutive.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/FluxTubeConcept/eq_reluctance_general.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/FluxTubeConcept/eq_reluctance_prismatic.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/FluxTubeConcept/eq_reluctanceFromAverageGeometry.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\n\n\n Modelica.Magnetic.FluxTubes.UsersGuide.ReluctanceForceCalculation\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/ReluctanceForceCalculation/eq_CoEnergy_general.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/ReluctanceForceCalculation/eq_forceFromPermeance_network.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/ReluctanceForceCalculation/eq_transition_forceReluctancePermeance.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide\n\n\n Modelica.Magnetic.FluxTubes.UsersGuide.Hysteresis.DynamicHysteresis\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/DynamicHysteresis/Eqn_EddyCurrent_Ht.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/DynamicHysteresis/Eqn_EddyCurrent_Heddy.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/DynamicHysteresis/Eddy_BHBHstatBHeddy.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/DynamicHysteresis/EddyCurrent_Epstein_Meas.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/DynamicHysteresis/EddyCurrent_Epstein_Sim.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.UsersGuide.Hysteresis.HysteresisLosses\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/HysteresisLosses/Eqn_LossPower01.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/HysteresisLosses/Eqn_LossPower02.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/HysteresisLosses/Eqn_LossPower03.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/HysteresisLosses/PowerLoss_Hysteresis01.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/HysteresisLosses/PowerLoss_Hysteresis02.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/HysteresisLosses/PowerLoss_Hysteresis03.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.UsersGuide.Hysteresis.StaticHysteresis.Tellinen\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Tellinen/Eqn_Tellinen01.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Tellinen/TellinenDesc1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\n\n\n Modelica.Magnetic.FluxTubes.UsersGuide.Hysteresis.StaticHysteresis.Preisach\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Preisach/preisach_elementaryOperator.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Preisach/preisach_PlaneAndDist.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Preisach/Eqn_PreisachBt.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Preisach/Eqn_EverettFcn.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Preisach/EverettRegion.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis\n\n\n Modelica.Magnetic.FluxTubes.Examples.MovingCoilActuator.Components.PermeanceActuator\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/MovingCoilActuator/MovingCoilActuator_PermeanceModel.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/MovingCoilActuator/Components\n\n\n Modelica.Magnetic.FluxTubes.Examples.SolenoidActuator.Components.SimpleSolenoid\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/SolenoidActuator/SimpleSolenoidModel_fluxTubePartitioning.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/SolenoidActuator/Components\n\n\n Modelica.Magnetic.FluxTubes.Examples.SolenoidActuator.Components.AdvancedSolenoid\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/SolenoidActuator/AdvancedSolenoidModel_fluxTubePartitioning.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/SolenoidActuator/Components\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.HysteresisModelComparison\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/HysteresisModelComparison/plot1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.InductorWithHysteresis\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/InductorWithHysteresis/plot1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.SinglePhaseTransformerWithHysteresis1\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/SinglePhaseTransformerWithHysteresis1/plot01.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/SinglePhaseTransformerWithHysteresis1/plot02.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.SinglePhaseTransformerWithHysteresis2\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/SinglePhaseTransformerWithHysteresis2/plot1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.ThreePhaseTransformerWithRectifier\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/ThreePhaseTransformerWithRectifier/plot01.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.Components.Transformer1PhaseWithHysteresis\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/Components/Transformer1PhaseWithHysteresis/Core_SinglePhase.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/Components\n\n\n Modelica.Magnetic.FluxTubes.Examples.Hysteresis.Components.Transformer3PhaseYyWithHysteresis\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/Components/Transformer3PhaseYyWithHysteresis/Core_ThreePhase1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Examples/Hysteresis/Components\n\n\n Modelica.Magnetic.FluxTubes.Shapes.HysteresisAndMagnets.GenericHystTellinenSoft\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Shapes/HysteresisAndMagnets/GenericHystTellinenSoft/Eqn_ShapeFunctionsTellinen.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Shapes/HysteresisAndMagnets\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Shapes/HysteresisAndMagnets/GenericHystTellinenSoft/SoftMagneticHysteresis1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Shapes/HysteresisAndMagnets\n\n\n Modelica.Magnetic.FluxTubes.Shapes.HysteresisAndMagnets.GenericHystTellinenHard\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/Shapes/HysteresisAndMagnets/GenericHystTellinenHard/HardMagneticHysteresis.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Shapes/HysteresisAndMagnets\n\n\n Modelica.Magnetic.FluxTubes.Interfaces.PartialGenericHysteresisTellinen\n\nimage Modelica/Resources/Images/Magnetic/FluxTubes/UsersGuide/Hysteresis/StaticHysteresis/Tellinen/TellinenDesc1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FluxTubes/Interfaces\n\n\n\nModelica.Magnetic.FundamentalWave\n\n Modelica.Magnetic.FundamentalWave.UsersGuide.Concept\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m_phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Concept/aimc_fem.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/varphi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Concept/four_pole_V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m_phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m_real_complex.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Concept/electrical_reference_V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/p.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\n\n\n Modelica.Magnetic.FundamentalWave.UsersGuide.MultiPhase\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/2pi_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/i123.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/2pi_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/2pi_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/orientationk_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/phase35.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/winding35.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/2pi_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/MultiPhase/ik_odd.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\n\n\n Modelica.Magnetic.FundamentalWave.UsersGuide.Parameters\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Lm_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Lss.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Lm_m_Lss.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Rs_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Lssigma_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/L0_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Lm_3.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Rs_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide/Parameters/Lssigma_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/UsersGuide\n\n\n Modelica.Magnetic.FundamentalWave.Components.Reluctance\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\n\n\n Modelica.Magnetic.FundamentalWave.Components.Permeance\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\n\n\n Modelica.Magnetic.FundamentalWave.Components.EddyCurrent\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/N.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\n\n\n Modelica.Magnetic.FundamentalWave.Components.SinglePhaseElectroMagneticConverter\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/orientation.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/v.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\n\n\n Modelica.Magnetic.FundamentalWave.Components.MultiPhaseElectroMagneticConverter\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/orientation_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/i_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/v_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/k_in_1_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Components\n\n\n Modelica.Magnetic.FundamentalWave.BasicMachines.Components.RotorSaliencyAirGap\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/gamma.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Machines/Components/airgap.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Machines/Components/airgap_phasors.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.FundamentalWave.BasicMachines.Components.SymmetricMultiPhaseCageWinding\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Machines/Components/rotorcage.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.FundamentalWave.BasicMachines.Components.SaliencyCageWinding\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/pi_over_2.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.FundamentalWave.BasicMachines.Components.SymmetricMultiPhaseCageWinding_obsolete\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Machines/Components/rotorcage.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.FundamentalWave.BasicMachines.Components.SaliencyCageWinding_obsolete\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/pi_over_2.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.FundamentalWave.Interfaces.MagneticPort\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Interfaces\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/FundamentalWave/Interfaces\n\n\n\nModelica.Magnetic.QuasiStatic\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/mu_r-1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.UsersGuide.FluxTubeConcept\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/B_n.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/H_n.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/magnetic_flux_tube_schematic_qs.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/l.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/V_m-H_n.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Phi-B_n.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m-V_m-Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/A.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/UsersGuide\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Basic.ElectroMagneticConverter\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/converter.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/v.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Psi-N-Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/L_stat-Psi-i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/L_stat.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/L_stat-Psi-eps.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/i-lt-eps.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Basic\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.FixedShape.GenericFluxTube\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m_generic.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/GenericFluxTube_qs.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.FixedShape.Cuboid\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m_cuboid.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/A_cuboid.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/CuboidParallelFlux_qs.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.FixedShape.HollowCylinderAxialFlux\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/r_o.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/r_i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/l.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m_cuboid.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/A_axial.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/HollowCylinderAxialFlux_qs.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/alpha2pi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/r_i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/alpha.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.FixedShape.HollowCylinderRadialFlux\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/r_o.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/r_i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/l.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/alpha.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m_radial.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/HollowCylinderRadialFlux_qs.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/alpha2pi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/alpha.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/FixedShape\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.QuarterCylinder\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.QuarterHollowCylinder\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.HalfCylinder\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.HalfHollowCylinder\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.QuarterSphere\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.QuarterHollowSphere\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.EighthOfSphere\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.EighthOfHollowSphere\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Shapes.Leakage.CoaxCylindersEndFaces\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/R_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Shapes/Leakage\n\n\n Modelica.Magnetic.QuasiStatic.FluxTubes.Sensors.Transient.Permeability\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/realV_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Sensors/Transient\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/realPhi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Sensors/Transient\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/A.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Sensors/Transient\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/l.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Sensors/Transient\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/permeabilities.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Sensors/Transient\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/permeabilities-0.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FluxTubes/Sensors/Transient\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.UsersGuide.Concept\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_relationship.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_s.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_r.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_mechanical.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/p.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/f_s.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/f_r.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_f.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/ReferenceFrames.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Phi(ref)=Phi,re+jPhi,im.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/UsersGuide\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.Components.Reluctance\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/reluctance.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/reluctance_alt.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.Components.Permeance\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/V_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Phi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/permeance.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.Components.EddyCurrent\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/eddycurrent.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/eddycurrent_electric.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/Gc.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/GGc.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/N.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/vPhi.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Components/iV_m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.Components.MultiPhaseElectroMagneticConverter\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/orientation_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/i_k.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/i_sc1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/v_sc1.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.Components.QuasiStaticAnalogElectroMagneticConverter\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/orientation.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/i.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/v.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.BasicMachines.Components.RotorSaliencyAirGap\n\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_s.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_r.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma_relationship.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/gamma.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/V_m_transformation.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Machines/Components/airgap.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.BasicMachines.Components.SymmetricMultiPhaseCageWinding\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/Machines/Components/rotorcage.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/m.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/effectiveTurns.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\n\n\n Modelica.Magnetic.QuasiStatic.FundamentalWave.BasicMachines.Components.SaliencyCageWinding\n\nimage Modelica/Resources/Images/Magnetic/FundamentalWave/pi_over_2.png not saved in directory ~/Modelica/Resources/Images/Magnetic/QuasiStatic/FundamentalWave/BasicMachines/Components\n\n\n\nModelica.Mechanics.MultiBody\n\n Modelica.Mechanics.MultiBody.UsersGuide.Tutorial.OverView\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/DoublePendulumSmall.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\n\n\n Modelica.Mechanics.MultiBody.UsersGuide.Tutorial.FirstExample\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial/FirstExample/PenulumSchematic1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\nimage Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial/FirstExample/PenulumSchematic2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\nimage Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial/FirstExample/ActuatedRevolute.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\nimage Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial/FirstExample/Body.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/Pendulum.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\n\n\n Modelica.Mechanics.MultiBody.UsersGuide.Tutorial.ConnectionOfLineForces\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/ThreeSprings.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\nimage Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/ThreeSpringsDiagramLayer.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\nimage Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/ThreeSprings2DiagramLayer.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/UsersGuide/Tutorial\n\n\n Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Systems/robot_kr15.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Systems/RobotR3\n\n\n Modelica.Mechanics.MultiBody.Examples.Loops.Utilities.GasForce2\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Loops/gasForceCycle.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Loops/Utilities\n\n\n Modelica.Mechanics.MultiBody.Examples.Loops.Utilities.Engine1bBase\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Loops/Engine.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Loops/Utilities\n\n\n Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Systems/r3_fullRobot.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Examples/Systems/RobotR3\n\n\n Modelica.Mechanics.MultiBody.Forces.LineForceWithTwoMasses\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/LineForceWithTwoMasses1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Forces\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/LineForceWithTwoMasses2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Forces\n\n\n Modelica.Mechanics.MultiBody.Forces.Spring\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Examples/Elementary/SpringWithMass.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Forces\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointUPS.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointUSR.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointUSP.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointSSR.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointSSP.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointRRR.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointRRP.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointUPS\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointUPS.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointUSR\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointUSR.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointUSP\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointUSP.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointSSR\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointSSR.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointSSP\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointSSP.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointRRR\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointRRR.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Joints.Assemblies.JointRRP\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Joints/JointRRP.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Joints/Assemblies\n\n\n Modelica.Mechanics.MultiBody.Parts\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Fixed.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedTranslation.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedRotation.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/Body.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/BodyShape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/BodyBox.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/BodyCylinder.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedShape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.Fixed\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Fixed.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.FixedTranslation\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedTranslation.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.FixedRotation\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedRotation.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.Body\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Body.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.BodyShape\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/BodyShape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedShape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.BodyBox\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/BodyBox.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Parts.BodyCylinder\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/BodyCylinder.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Parts\n\n\n Modelica.Mechanics.MultiBody.Sensors.Internal.BasicCutForce\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Sensors/CutForce.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Sensors/Internal\n\n\n Modelica.Mechanics.MultiBody.Sensors.Internal.BasicCutTorque\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Sensors/CutTorque.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Sensors/Internal\n\n\n Modelica.Mechanics.MultiBody.Visualizers\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedShape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedFrame2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Arrow.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/DoubleArrow.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedShape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Surface_small.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/PipeWithScalarFieldIcon.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.FixedShape\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Shape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers\n\n\n Modelica.Mechanics.MultiBody.Visualizers.FixedShape2\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Shape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedTranslation.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers\n\n\n Modelica.Mechanics.MultiBody.Visualizers.FixedFrame\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedFrame.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.jet\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/jet.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.hot\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/hot.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.gray\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/gray.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.spring\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/spring.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.summer\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/summer.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.autumn\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/autumn.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Colors.ColorMaps.winter\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/winter.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Colors/ColorMaps\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.Arrow\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Arrow.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.DoubleArrow\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/DoubleArrow.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.Shape\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Shape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.Surface\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Surface.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.PipeWithScalarField\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/PipeWithScalarField.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/PipeWithScalarField-ColorMap.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.SurfaceCharacteristics.torus\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Torus.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced/SurfaceCharacteristics\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.SurfaceCharacteristics.pipeWithScalarField\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/PipeWithScalarField.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced/SurfaceCharacteristics\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/PipeWithScalarField-ColorMap.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced/SurfaceCharacteristics\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Advanced.SurfaceCharacteristics.rectangle\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Rectangle.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Advanced/SurfaceCharacteristics\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Internal.FixedLines\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedLines.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Internal\n\n\n Modelica.Mechanics.MultiBody.Visualizers.Internal.Lines\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/FixedLines.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/Internal\n\n\n Modelica.Mechanics.MultiBody.Types.SpecularCoefficient\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Visualizers/SpecularCoefficient.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Types\n\n\n Modelica.Mechanics.MultiBody.Types.ShapeType\n\nimage Modelica/Resources/Images/Mechanics/MultiBody/Shape.png not saved in directory ~/Modelica/Resources/Images/Mechanics/MultiBody/Types\n\n\n\nModelica.Mechanics.Rotational\n\n Modelica.Mechanics.Rotational.UsersGuide.Overview\n\nimage Modelica/Resources/Images/Mechanics/Rotational/drive1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Rotational/driveConnections1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Rotational/driveConnections2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\n\n\n Modelica.Mechanics.Rotational.UsersGuide.SupportTorques\n\nimage Modelica/Resources/Images/Mechanics/Rotational/bearing.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Rotational/bearing2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\n\n\n Modelica.Mechanics.Rotational.UsersGuide.SignConventions\n\nimage Modelica/Resources/Images/Mechanics/Rotational/drive2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Rotational/drive3.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Rotational/drive4.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\n\n\n Modelica.Mechanics.Rotational.UsersGuide.UserDefinedComponents\n\nimage Modelica/Resources/Images/Mechanics/Rotational/driveAxis.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Rotational/inertias.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\n\n\n Modelica.Mechanics.Rotational.UsersGuide.RequirementsForSimulationTool\n\nimage Modelica/Resources/Images/Mechanics/Rotational/driveConnections3.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/UsersGuide\n\n\n Modelica.Mechanics.Rotational.Components.ElastoBacklash\n\nimage Modelica/Resources/Images/Mechanics/Rotational/elastoBacklash1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/Components\n\n\n Modelica.Mechanics.Rotational.Components.RelativeStates\n\nimage Modelica/Resources/Images/Mechanics/Rotational/relativeStates.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Rotational/Components\n\n\n\nModelica.Mechanics.Translational\n\n Modelica.Mechanics.Translational.UsersGuide.Overview\n\nimage Modelica/Resources/Images/Mechanics/Translational/drive1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Translational/driveConnections1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Translational/driveConnections2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\n\n\n Modelica.Mechanics.Translational.UsersGuide.SupportForces\n\nimage Modelica/Resources/Images/Mechanics/Translational/bearing.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Translational/bearing2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\n\n\n Modelica.Mechanics.Translational.UsersGuide.SignConventions\n\nimage Modelica/Resources/Images/Mechanics/Translational/drive2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Translational/drive3.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\n\n\n Modelica.Mechanics.Translational.UsersGuide.UserDefinedComponents\n\nimage Modelica/Resources/Images/Mechanics/Translational/driveAxis.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\nimage Modelica/Resources/Images/Mechanics/Translational/masses.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/UsersGuide\n\n\n Modelica.Mechanics.Translational.Examples.InitialConditions\n\nimage Modelica/Resources/Images/Mechanics/Translational/InitialConditions.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Examples\n\n\n Modelica.Mechanics.Translational.Examples.PreLoad\n\nimage Modelica/Resources/Images/Mechanics/Translational/PreLoad.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Examples\nimage Modelica/Resources/Images/Mechanics/Translational/PreLoad3.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Examples\nimage Modelica/Resources/Images/Mechanics/Translational/PreLoad4.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Examples\nimage Modelica/Resources/Images/Mechanics/Translational/PreLoad2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Examples\n\n\n Modelica.Mechanics.Translational.Components.ElastoGap\n\nimage Modelica/Resources/Images/Mechanics/Translational/ElastoGap1.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Components\n\n\n Modelica.Mechanics.Translational.Components.MassWithStopAndFriction\n\nimage Modelica/Resources/Images/Mechanics/Translational/Stribeck.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Components\n\n\n Modelica.Mechanics.Translational.Components.RelativeStates\n\nimage Modelica/Resources/Images/Mechanics/Translational/relativeStates2.png not saved in directory ~/Modelica/Resources/Images/Mechanics/Translational/Components\n\n\n\nModelica.Fluid\n\n Modelica.Fluid\n\nimage Modelica/Resources/Images/Fluid/UsersGuide/HeatingSystem.png not saved in directory ~/Modelica/Resources/Images/Fluid\n\n\n Modelica.Fluid.UsersGuide.ComponentDefinition.FluidConnectors\n\nimage Modelica/Resources/Images/Fluid/UsersGuide/MixingConnections.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\n\n\n Modelica.Fluid.UsersGuide.ComponentDefinition.BalanceEquations\n\nimage Modelica/Resources/Images/Fluid/UsersGuide/massBalance.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\nimage Modelica/Resources/Images/Fluid/UsersGuide/momentumBalance.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\nimage Modelica/Resources/Images/Fluid/UsersGuide/energyBalance1.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\nimage Modelica/Resources/Images/Fluid/UsersGuide/pipeFriction.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\nimage Modelica/Resources/Images/Fluid/UsersGuide/energyBalance2.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\n\n\n Modelica.Fluid.UsersGuide.ComponentDefinition.RegularizingCharacteristics\n\nimage Modelica/Resources/Images/Fluid/UsersGuide/sqrt.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\n\n\n Modelica.Fluid.UsersGuide.ComponentDefinition.WallFriction\n\nimage Modelica/Resources/Images/Fluid/Components/PipeFriction1.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\nimage Modelica/Resources/Images/Fluid/Components/PipeFriction2.png not saved in directory ~/Modelica/Resources/Images/Fluid/UsersGuide/ComponentDefinition\n\n\n Modelica.Fluid.Examples.AST_BatchPlant\n\nimage Modelica/Resources/Images/Fluid/Examples/AST_BatchPlant1.jpg not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/AST_BatchPlant\nimage Modelica/Resources/Images/Fluid/Examples/AST_BatchPlant2.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/AST_BatchPlant\n\n\n Modelica.Fluid.Examples.DrumBoiler.DrumBoiler\n\nimage Modelica/Resources/Images/Fluid/Examples/DrumBoiler.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/DrumBoiler\n\n\n Modelica.Fluid.Examples.Tanks.ThreeTanks\n\nimage Modelica/Resources/Images/Fluid/Examples/ThreeTanks.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/Tanks\n\n\n Modelica.Fluid.Examples.Tanks.TanksWithOverflow\n\nimage Modelica/Resources/Images/Fluid/Examples/TanksWithOverflow.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/Tanks\n\n\n Modelica.Fluid.Examples.Tanks.EmptyTanks\n\nimage Modelica/Resources/Images/Fluid/Examples/EmptyTanks.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/Tanks\n\n\n Modelica.Fluid.Examples.ControlledTankSystem.ControlledTanks\n\nimage Modelica/Resources/Images/Fluid/Examples/ControlledTanks.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/ControlledTankSystem\n\n\n Modelica.Fluid.Examples.AST_BatchPlant.BatchPlant_StandardWater\n\nimage Modelica/Resources/Images/Fluid/Examples/BatchPlant_StandardWater.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/AST_BatchPlant\n\n\n Modelica.Fluid.Examples.HeatExchanger.HeatExchangerSimulation\n\nimage Modelica/Resources/Images/Fluid/Examples/HeatExchanger.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/HeatExchanger\n\n\n Modelica.Fluid.Examples.TraceSubstances.RoomCO2\n\nimage Modelica/Resources/Images/Fluid/Examples/RoomCO2.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/TraceSubstances\n\n\n Modelica.Fluid.Examples.TraceSubstances.RoomCO2WithControls\n\nimage Modelica/Resources/Images/Fluid/Examples/RoomCO2WithControls.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/TraceSubstances\n\n\n Modelica.Fluid.Examples.Explanatory.MeasuringTemperature\n\nimage Modelica/Resources/Images/Fluid/Examples/MeasuringTemperature1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/Explanatory\nimage Modelica/Resources/Images/Fluid/Examples/MeasuringTemperature2.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/Explanatory\n\n\n Modelica.Fluid.Examples.Explanatory.MomentumBalanceFittings\n\nimage Modelica/Resources/Images/Fluid/Examples/MomentumBalanceFittings.png not saved in directory ~/Modelica/Resources/Images/Fluid/Examples/Explanatory\n\n\n Modelica.Fluid.Pipes.BaseClasses.WallFriction\n\nimage Modelica/Resources/Images/Fluid/Components/PipeFriction1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/WallFriction\n\n\n Modelica.Fluid.Pipes.BaseClasses.WallFriction.Detailed\n\nimage Modelica/Resources/Images/Fluid/Components/PipeFriction1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/WallFriction/Detailed\nimage Modelica/Resources/Images/Fluid/Components/PipeFrictionStaticHead_case-a.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/WallFriction/Detailed\nimage Modelica/Resources/Images/Fluid/Components/PipeFrictionStaticHead_case-b.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/WallFriction/Detailed\n\n\n Modelica.Fluid.Pipes.BaseClasses.FlowModels.DetailedPipeFlow\n\nimage Modelica/Resources/Images/Fluid/Components/PipeFriction1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/FlowModels\nimage Modelica/Resources/Images/Fluid/Components/PipeFrictionStaticHead_case-a.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/FlowModels\nimage Modelica/Resources/Images/Fluid/Components/PipeFrictionStaticHead_case-b.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/FlowModels\n\n\n Modelica.Fluid.Pipes.BaseClasses.WallFriction.TestWallFrictionAndGravity\n\nimage Modelica/Resources/Images/Fluid/Components/PipeFriction1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Pipes/BaseClasses/WallFriction\n\n\n Modelica.Fluid.Valves.BaseClasses.PartialValve\n\nimage Modelica/Resources/Images/Fluid/Components/ValveCharacteristics1a.png not saved in directory ~/Modelica/Resources/Images/Fluid/Valves/BaseClasses\nimage Modelica/Resources/Images/Fluid/Components/ValveCharacteristics1b.png not saved in directory ~/Modelica/Resources/Images/Fluid/Valves/BaseClasses\nimage Modelica/Resources/Images/Fluid/Components/FilteredValveIcon.png not saved in directory ~/Modelica/Resources/Images/Fluid/Valves/BaseClasses\nimage Modelica/Resources/Images/Fluid/Components/ValveFilteredOpening.png not saved in directory ~/Modelica/Resources/Images/Fluid/Valves/BaseClasses\n\n\n Modelica.Fluid.Dissipation.PressureLoss.StraightPipe.dp_twoPhaseOverall_DP\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_twoPhaseFlowRegimes_horizontal.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_twoPhaseFlowRegimes_vertical.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/PressureLoss/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.Channel.kc_evenGapLaminar\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/channel/pic_gap.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Channel\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/channel/fig_channel_kc_evenGapLaminar.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Channel\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.Channel.kc_evenGapOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/channel/fig_channel_kc_evenGapOverall.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Channel\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.Channel.kc_evenGapTurbulent\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/channel/pic_gap.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Channel\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/channel/fig_channel_kc_evenGapTurbulent.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Channel\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.General.kc_approxForcedConvection\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/general/fig_kc_approxForcedConvection_T1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/General\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/general/fig_kc_approxForcedConvection_T2.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/General\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/general/fig_kc_approxForcedConvection_T3.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/General\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.HeatExchanger.kc_flatTube\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/heatExchanger/pic_flatTube.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HeatExchanger\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/heatExchanger/fig_flatTube_kc.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HeatExchanger\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.HeatExchanger.kc_roundTube\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/heatExchanger/pic_roundTube.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HeatExchanger\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/heatExchanger/fig_roundTube_kc.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HeatExchanger\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.HelicalPipe.kc_laminar\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/helicalPipe/pic_helicalPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HelicalPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/helicalPipe/fig_helicalPipe_kc_laminar.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HelicalPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.HelicalPipe.kc_overall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/helicalPipe/fig_helicalPipe_kc_overall.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HelicalPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.HelicalPipe.kc_turbulent\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/helicalPipe/pic_helicalPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HelicalPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/helicalPipe/fig_helicalPipe_kc_turbulent.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/HelicalPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.Plate.kc_laminar\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/plate/pic_plate.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Plate\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/plate/fig_plate_kc_laminar.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Plate\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.Plate.kc_overall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/plate/fig_plate_kc_overall.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Plate\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.Plate.kc_turbulent\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/plate/pic_plate.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Plate\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/plate/fig_plate_kc_turbulent.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/Plate\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.StraightPipe.kc_laminar\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/straightPipe/fig_straightPipe_kc_laminar.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.StraightPipe.kc_overall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/straightPipe/fig_straightPipe_kc_overall.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.StraightPipe.kc_turbulent\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/straightPipe/fig_straightPipe_kc_turbulent.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.HeatTransfer.StraightPipe.kc_twoPhaseOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/straightPipe/fig_kc_twoPhaseOverall_KC_4.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/heatTransfer/straightPipe/fig_kc_twoPhaseOverall_KC_2.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/HeatTransfer/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.Bend.dp_curvedOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/pic_circularBend.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/fig_bend_dp_curvedOverall_DPvsMFLOW.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/fig_bend_dp_curvedOverall_DPvsMFLOWwrtRD.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/fig_bend_dp_curvedOverall_DPvsMFLOWwrtDelta.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.Bend.dp_edgedOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/pic_edgedBend.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/fig_bend_dp_edgedOverall_ZETAvsRE.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/fig_bend_dp_edgedOverall_DPvsMFLOWwrtDelta.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/bend/fig_bend_dp_edgedOverall_MFLOWvsDPwrtDelta.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Bend\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.Channel.dp_internalFlowOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/channel/pic-pLchannel.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Channel\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/channel/fig_channel_dp_internalFlowOverall_lambdaVsRe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Channel\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.General.dp_idealGas\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/general/fig_general_dp_idealGas_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/General\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.General.dp_nominalDensityViscosity\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/general/fig_general_dp_nominalDensityViscosity_DPvsMFLOW.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/General\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/general/fig_general_dp_nominalDensityViscosity_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/General\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.General.dp_nominalPressureLossLawDensity\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/general/fig_general_dp_nominalPressureLossLawDensity_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/General\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.General.dp_pressureLossCoefficient\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/general/fig_general_dp_pressureLossCoefficient_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/General\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.General.dp_volumeFlowRate\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/general/fig_general_dp_volumeFlowRate_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/General\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.Orifice.dp_suddenChange\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/pic_suddenChangeSection.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/fig_orifice_suddenChangeExpansion.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/fig_orifice_suddenChangeContraction.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.Orifice.dp_thickEdgedOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/pic_thickEdged.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/fig_orifice_thickEdgedOverall_ZETAvsLENGTH.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/fig_orifice_thickEdgedOverall_DPvsMFLOW.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/orifice/fig_orifice_thickEdgedOverall_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Orifice\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.StraightPipe.dp_laminar\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_straightPipe_laminar_lambdavsRe_ver.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_straightPipe_dp_laminar_DPvsMFLOW.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.StraightPipe.dp_overall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_straightPipe_dp_overall_lambdavsRe_ver.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_straightPipe_dp_overall_DPvsMFLOW.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_straightPipe_dp_overall_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.StraightPipe.dp_turbulent\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_straightPipe_turbulent.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.StraightPipe.dp_twoPhaseOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/pic_straightPipe.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_dp_twoPhaseOverall_1.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/straightPipe/fig_dp_twoPhaseOverall_4.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/StraightPipe\n\n\n Modelica.Fluid.Dissipation.Utilities.SharedDocumentation.PressureLoss.Valve.dp_severalGeometryOverall\n\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/valve/fig_valve_dp_severalGeometryOverall_zetaVsOpening.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Valve\nimage Modelica/Resources/Images/Fluid/Dissipation/pressureLoss/valve/fig_valve_dp_severalGeometryOverall_MFLOWvsDP.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/SharedDocumentation/PressureLoss/Valve\n\n\n Modelica.Fluid.Dissipation.Utilities.Functions.General.LambertW\n\nimage Modelica/Resources/Images/Fluid/Dissipation/utilities/LambertW_deviation.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/Functions/General\n\n\n Modelica.Fluid.Dissipation.Utilities.Functions.General.SmoothPower\n\nimage Modelica/Resources/Images/Fluid/Dissipation/utilities/SmoothPower.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/Functions/General\n\n\n Modelica.Fluid.Dissipation.Utilities.Functions.General.Stepsmoother\n\nimage Modelica/Resources/Images/Fluid/Dissipation/utilities/Stepsmoother.png not saved in directory ~/Modelica/Resources/Images/Fluid/Dissipation/Utilities/Functions/General\n\n\n Modelica.Fluid.Utilities.regRoot2\n\nimage Modelica/Resources/Images/Fluid/Components/regRoot2_a.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\nimage Modelica/Resources/Images/Fluid/Components/regRoot2_b.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\nimage Modelica/Resources/Images/Fluid/Components/regRoot2_c.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\n\n\n Modelica.Fluid.Utilities.regSquare2\n\nimage Modelica/Resources/Images/Fluid/Components/regSquare2_b.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\nimage Modelica/Resources/Images/Fluid/Components/regSquare2_c.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\n\n\n Modelica.Fluid.Utilities.regFun3\n\nimage Modelica/Resources/Images/Fluid/Components/regFun3_a.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\nimage Modelica/Resources/Images/Fluid/Components/regFun3_b.png not saved in directory ~/Modelica/Resources/Images/Fluid/Utilities\n\n\n\nModelica.Media\n\n Modelica.Media.UsersGuide.MediumUsage.BasicUsage\n\nimage Modelica/Resources/Images/Media/UsersGuide/mediumMenu.png not saved in directory\n~/Modelica/Resources/Images/Media/UsersGuide/MediumUsage\n\n\n Modelica.Media.UsersGuide.MediumDefinition.SpecificEnthalpyAsFunction\n\nimage Modelica/Resources/Images/Media/UsersGuide/BalanceEquations1.png not saved in directory ~/Modelica/Resources/Images/Media/UsersGuide/MediumDefinition\nimage Modelica/Resources/Images/Media/UsersGuide/EnergyBalance1.png not saved in directory ~/Modelica/Resources/Images/Media/UsersGuide/MediumDefinition\nimage Modelica/Resources/Images/Media/UsersGuide/EnergyBalance2.png not saved in directory ~/Modelica/Resources/Images/Media/UsersGuide/MediumDefinition\n\n\n Modelica.Media.Examples.PsychrometricData\n\nimage Modelica/Resources/Images/Media/Air/Mollier.png not saved in directory ~/Modelica/Resources/Images/Media/Examples\nimage Modelica/Resources/Images/Media/Air/PsycroChart.png not saved in directory ~/Modelica/Resources/Images/Media/Examples\n\n\n Modelica.Media.Air.DryAirNasa\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/Air.png not saved in directory ~/Modelica/Resources/Images/Media/Air/DryAirNasa\n\n\n Modelica.Media.Air.MoistAir\n\nimage Modelica/Resources/Images/Media/Air/Mollier.png not saved in directory ~/Modelica/Resources/Images/Media/Air/MoistAir\nimage Modelica/Resources/Images/Media/Air/PsycroChart.png not saved in directory ~/Modelica/Resources/Images/Media/Air/MoistAir\n\n\n Modelica.Media.IdealGases.SingleGases.Ar\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/Ar.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/Ar\n\n\n Modelica.Media.IdealGases.SingleGases.CH4\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/CH4.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/CH4\n\n\n Modelica.Media.IdealGases.SingleGases.CH3OH\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/CH3OH.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/CH3OH\n\n\n Modelica.Media.IdealGases.SingleGases.CO\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/CO.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/CO\n\n\n Modelica.Media.IdealGases.SingleGases.CO2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/CO2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/CO2\n\n\n Modelica.Media.IdealGases.SingleGases.C2H2_vinylidene\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H2_vinylidene.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H2_vinylidene\n\n\n Modelica.Media.IdealGases.SingleGases.C2H4\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H4.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H4\n\n\n Modelica.Media.IdealGases.SingleGases.C2H5OH\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H5OH.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H5OH\n\n\n Modelica.Media.IdealGases.SingleGases.C2H6\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H6.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C2H6\n\n\n Modelica.Media.IdealGases.SingleGases.C3H6_propylene\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C3H6_propylene.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C3H6_propylene\n\n\n Modelica.Media.IdealGases.SingleGases.C3H8\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C3H8.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C3H8\n\n\n Modelica.Media.IdealGases.SingleGases.C3H8O_1propanol\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C3H8O_1propanol.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C3H8O_1propanol\n\n\n Modelica.Media.IdealGases.SingleGases.C4H8_1_butene\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C4H8_1_butene.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C4H8_1_butene\n\n\n Modelica.Media.IdealGases.SingleGases.C4H10_n_butane\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C4H10_n_butane.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C4H10_n_butane\n\n\n Modelica.Media.IdealGases.SingleGases.C5H10_1_pentene\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C5H10_1_pentene.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C5H10_1_pentene\n\n\n Modelica.Media.IdealGases.SingleGases.C5H12_n_pentane\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C5H12_n_pentane.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C5H12_n_pentane\n\n\n Modelica.Media.IdealGases.SingleGases.C6H6\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C6H6.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C6H6\n\n\n Modelica.Media.IdealGases.SingleGases.C6H12_1_hexene\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C6H12_1_hexene.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C6H12_1_hexene\n\n\n Modelica.Media.IdealGases.SingleGases.C6H14_n_hexane\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C6H14_n_hexane.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C6H14_n_hexane\n\n\n Modelica.Media.IdealGases.SingleGases.C7H14_1_heptene\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C7H14_1_heptene.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C7H14_1_heptene\n\n\n Modelica.Media.IdealGases.SingleGases.C7H16_n_heptane\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C7H16_n_heptane.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C7H16_n_heptane\n\n\n Modelica.Media.IdealGases.SingleGases.C8H10_ethylbenz\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C8H10_ethylbenz.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C8H10_ethylbenz\n\n\n Modelica.Media.IdealGases.SingleGases.C8H18_n_octane\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/C8H18_n_octane.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/C8H18_n_octane\n\n\n Modelica.Media.IdealGases.SingleGases.CL2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/CL2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/CL2\n\n\n Modelica.Media.IdealGases.SingleGases.F2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/F2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/F2\n\n\n Modelica.Media.IdealGases.SingleGases.H2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/H2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/H2\n\n\n Modelica.Media.IdealGases.SingleGases.H2O\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/H2O.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/H2O\n\n\n Modelica.Media.IdealGases.SingleGases.He\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/He.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/He\n\n\n Modelica.Media.IdealGases.SingleGases.NH3\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/NH3.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/NH3\n\n\n Modelica.Media.IdealGases.SingleGases.NO\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/NO.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/NO\n\n\n Modelica.Media.IdealGases.SingleGases.NO2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/NO2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/NO2\n\n\n Modelica.Media.IdealGases.SingleGases.N2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/N2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/N2\n\n\n Modelica.Media.IdealGases.SingleGases.N2O\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/N2O.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/N2O\n\n\n Modelica.Media.IdealGases.SingleGases.Ne\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/Ne.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/Ne\n\n\n Modelica.Media.IdealGases.SingleGases.O2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/O2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/O2\n\n\n Modelica.Media.IdealGases.SingleGases.SO2\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/SO2.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/SO2\n\n\n Modelica.Media.IdealGases.SingleGases.SO3\n\nimage Modelica/Resources/Images/Media/IdealGases/SingleGases/SO3.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/SingleGases/SO3\n\n\n Modelica.Media.Water.IF97_Utilities.BaseIF97\n\nimage Modelica/Resources/Images/Media/Water/if97.png not saved in directory ~/Modelica/Resources/Images/Media/Water/IF97_Utilities/BaseIF97\n\n\n Modelica.Media.IdealGases.Common.DataRecord\n\nimage Modelica/Resources/Images/Media/IdealGases/singleEquations.png not saved in directory ~/Modelica/Resources/Images/Media/IdealGases/Common\n\n\n Modelica.Media.R134a.R134a_ph.density_ph\n\nimage Modelica/Resources/Images/Media/R134a/log(p)d-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.density\n\nimage Modelica/Resources/Images/Media/R134a/log(p)d-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.temperature_ph\n\nimage Modelica/Resources/Images/Media/R134a/log(p)h-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.temperature\n\nimage Modelica/Resources/Images/Media/R134a/log(p)h-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.pressure\n\nimage Modelica/Resources/Images/Media/R134a/log(p)h-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.specificInternalEnergy\n\nimage Modelica/Resources/Images/Media/R134a/log(p)u-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.specificEnthalpy\n\nimage Modelica/Resources/Images/Media/R134a/log(p)h-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.specificEntropy\n\nimage Modelica/Resources/Images/Media/R134a/log(p)s-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.saturationTemperature\n\nimage Modelica/Resources/Images/Media/R134a/log(p)Tsat-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.saturationPressure\n\nimage Modelica/Resources/Images/Media/R134a/log(p)Tsat-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.specificHeatCapacityCp\n\nimage Modelica/Resources/Images/Media/R134a/log(p)cp-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.specificHeatCapacityCv\n\nimage Modelica/Resources/Images/Media/R134a/log(p)cv-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.dynamicViscosity\n\nimage Modelica/Resources/Images/Media/R134a/log(p)eta-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.thermalConductivity\n\nimage Modelica/Resources/Images/Media/R134a/log(p)lambda-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.surfaceTension\n\nimage Modelica/Resources/Images/Media/R134a/Tsigma-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n Modelica.Media.R134a.R134a_ph.velocityOfSound\n\nimage Modelica/Resources/Images/Media/R134a/log(p)a-Diagram-R134a.png not saved in directory ~/Modelica/Resources/Images/Media/R134a/R134a_ph\n\n\n\nModelica.Math\n\n Modelica.Math.FastFourierTransform\n\nimage Modelica/Resources/Images/Math/FFT1.png not saved in directory ~/Modelica/Resources/Images/Math/FastFourierTransform\n\n\n Modelica.Math.Random.Examples.GenerateRandomNumbers\n\nimage Modelica/Resources/Images/Math/Random/GenerateRandomNumbers.png not saved in directory ~/Modelica/Resources/Images/Math/Random/Examples\n\n\n Modelica.Math.Distributions.Uniform\n\nimage Modelica/Resources/Images/Math/Distributions/Uniform.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Uniform\nimage Modelica/Resources/Images/Math/Distributions/Uniform.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Uniform\nimage Modelica/Resources/Images/Math/Distributions/Uniform.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Uniform\n\n\n Modelica.Math.Distributions.Normal\n\nimage Modelica/Resources/Images/Math/Distributions/Normal.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Normal\nimage Modelica/Resources/Images/Math/Distributions/Normal.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Normal\nimage Modelica/Resources/Images/Math/Distributions/Normal.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Normal\n\n\n Modelica.Math.Distributions.TruncatedNormal\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedNormal\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedNormal\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedNormal\n\n\n Modelica.Math.Distributions.Weibull\n\nimage Modelica/Resources/Images/Math/Distributions/Weibull.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Weibull\nimage Modelica/Resources/Images/Math/Distributions/Weibull.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Weibull\nimage Modelica/Resources/Images/Math/Distributions/Weibull.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Weibull\n\n\n Modelica.Math.Distributions.TruncatedWeibull\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedWeibull.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedWeibull\nimage Modelica/Resources/Images/Math/Distributions/TruncatedWeibull.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedWeibull\nimage Modelica/Resources/Images/Math/Distributions/TruncatedWeibull.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedWeibull\n\n\n Modelica.Math.Distributions.Uniform.density\n\nimage Modelica/Resources/Images/Math/Distributions/UniformDensity.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Uniform\n\n\n Modelica.Math.Distributions.Uniform.cumulative\n\nimage Modelica/Resources/Images/Math/Distributions/Uniform.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Uniform\n\n\n Modelica.Math.Distributions.Uniform.quantile\n\nimage Modelica/Resources/Images/Math/Distributions/Uniform.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Uniform\n\n\n Modelica.Math.Distributions.Normal.density\n\nimage Modelica/Resources/Images/Math/Distributions/Normal.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Normal\n\n\n Modelica.Math.Distributions.Normal.cumulative\n\nimage Modelica/Resources/Images/Math/Distributions/Normal.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Normal\n\n\n Modelica.Math.Distributions.Normal.quantile\n\nimage Modelica/Resources/Images/Math/Distributions/Normal.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Normal\n\n\n Modelica.Math.Distributions.TruncatedNormal.density\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedNormal\n\n\n Modelica.Math.Distributions.TruncatedNormal.cumulative\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedNormal\n\n\n Modelica.Math.Distributions.TruncatedNormal.quantile\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedNormal.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedNormal\n\n\n Modelica.Math.Distributions.Weibull.density\n\nimage Modelica/Resources/Images/Math/Distributions/Weibull.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Weibull\n\n\n Modelica.Math.Distributions.Weibull.cumulative\n\nimage Modelica/Resources/Images/Math/Distributions/Weibull.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Weibull\n\n\n Modelica.Math.Distributions.Weibull.quantile\n\nimage Modelica/Resources/Images/Math/Distributions/Weibull.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/Weibull\n\n\n Modelica.Math.Distributions.TruncatedWeibull.density\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedWeibull.density.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedWeibull\n\n\n Modelica.Math.Distributions.TruncatedWeibull.cumulative\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedWeibull.cumulative.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedWeibull\n\n\n Modelica.Math.Distributions.TruncatedWeibull.quantile\n\nimage Modelica/Resources/Images/Math/Distributions/TruncatedWeibull.quantile.png not saved in directory ~/Modelica/Resources/Images/Math/Distributions/TruncatedWeibull\n\n\n Modelica.Math.FastFourierTransform.Examples.RealFFT1\n\nimage Modelica/Resources/Images/Math/FFT1.png not saved in directory ~/Modelica/Resources/Images/Math/FastFourierTransform/Examples\n\n\n Modelica.ComplexMath.Vectors.norm\n\nimage Modelica/Resources/Images/Math/Vectors/vectorNorm.png not saved in directory ~/Modelica/Resources/Images/ComplexMath/Vectors\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 179,
            "date": "Jul 31, 2018",
            "title": "Add more spelling terms",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2694",
            "poster_name": "#2694\n            opened Jul 31, 2018 by\n            christiankral",
            "description": "In the Modelica documentation of Modelica.UsersGuide.Conventions.Terms.Electrical the spelling of terms are collected. This is a cumulative ticket to collect additional terms to be implemented in the future.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 180,
            "date": "Jun 29, 2018",
            "title": "Missing test / example models for RelTemperatureSensor, HeatFlowSensor and ConditionalFixedHeatFlowSensor of HeatTransfer",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2681",
            "poster_name": "#2681\n            opened Jun 29, 2018 by\n            beutlich",
            "description": "There are no test or example models for the relative sensors Modelica.Thermal.HeatTransfer.Sensors.RelTemperatureSensor, Modelica.Thermal.HeatTransfer.Sensors.HeatFlowSensor and Modelica.Thermal.HeatTransfer.Sensors.ConditionalFixedHeatFlowSensor in the MSL.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 181,
            "date": "Jun 29, 2018",
            "title": "Missing test / example models for relative sensors of FluidHeatFlow",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2680",
            "poster_name": "#2680\n            opened Jun 29, 2018 by\n            beutlich",
            "description": "There are no test or example models for the relative sensors Modelica.Thermal.FluidHeatFlow.Sensors.RelPressureSensor and Modelica.Thermal.FluidHeatFlow.Sensors.RelTemperatureSensor in the MSL, which is one reason for late and accidental detection of the regression error #2675 in v3.2.3-beta.2.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 182,
            "date": "Jun 26, 2018",
            "title": "Abrupt adaptor",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2672",
            "poster_name": "#2672\n            opened Jun 26, 2018 by\n            Claytex",
            "description": "Hi, this was sent to DS but they asked me to present the issue here hoping it can be resolved please.\nHi, we are unable to get this simple model to run and I was wondering if you could suggest what the user is doing wrong please.\nTest_MSL_Abrupt_adaptorTotal.zip\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n bilderbuchi reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 183,
            "date": "Jun 14, 2018",
            "title": "Missing variable comments of Modelica.Electrical.Analog.Basic.OpAmpDetailed",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2633",
            "poster_name": "#2633\n            opened Jun 14, 2018 by\n            beutlich",
            "description": "There are no descriptions for public variables of Modelica.Electrical.Analog.Basic.OpAmpDetailed (with exception of x).\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 184,
            "date": "Jun 13, 2018",
            "title": "Proper location of adaptors",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2629",
            "poster_name": "#2629\n            opened Jun 13, 2018 by\n            tobolar",
            "description": "As partial adaptors FlowToPotentialAdaptor and PotentialToFlowAdaptorare both placed in Blocks.Interfaces.Adaptors, I would expect that all adaptors which extend them are placed in corresponding packages as well, i.e. in Interfaces. But they are all placed in Components of particular domains instead.\nThis probably originates from location of \"old\" adaptors in Mechanics.Rotational.Components but should be fixed.\nAs another example, FlangeWithBearingAdaptor is properly placed in Mechanics.MultiBody.Interfaces.\nIn contrast, Mechanics.Rotational.Components.AngleToTorqueAdaptor and Mechanics.Rotational.Components.TorqueToAngleAdaptor should of course be moved in the next major version at the earliest.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 185,
            "date": "Jun 11, 2018",
            "title": "Clarify purpose of protected top-level connectors",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2609",
            "poster_name": "#2609\n            opened Jun 11, 2018 by\n            beutlich",
            "description": "What is the purpose of the protected top-level connectors in CauerLowPassOPV und CauerLowPassSC? CauerLowPassAnalog uses ordinary connects instead.\n\n\n\nModelicaStandardLibrary/Modelica/Electrical/Analog/Examples/CauerLowPassSC.mo\n\n\n        Lines 46 to 109\n      in\n      eea7443\n\n\n\n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n1 \n\n\n\n annotation (Placement(transformation(extent={{-215,-22},{-211,-18}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n2 \n\n\n\n annotation (Placement(transformation(extent={{-215,18},{-211,22}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n3 \n\n\n\n annotation (Placement(transformation(extent={{-215,38},{-211,42}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n4 \n\n\n\n annotation (Placement(transformation( \n\n\n\n         origin={-161,40}, \n\n\n\n         extent={{2,2},{-2,-2}}, \n\n\n\n         rotation=180))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n5 \n\n\n\n annotation (Placement(transformation(extent={{-115,-32},{-111,-28}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.PositivePin p1 \n\n\n\n annotation (Placement(transformation(extent={{-155,-122},{-149,-118}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n6 \n\n\n\n annotation (Placement(transformation(extent={{-63,38},{-59,42}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n7 \n\n\n\n annotation (Placement(transformation(extent={{-7,-32},{-3,-28}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n8 \n\n\n\n annotation (Placement(transformation(extent={{-7,18},{-3,22}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.PositivePin p2 \n\n\n\n annotation (Placement(transformation(extent={{-7,38},{-3,42}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.PositivePin out1 \n\n\n\n annotation (Placement(transformation(extent={{43,-122},{47,-118}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.PositivePin p3 \n\n\n\n annotation (Placement(transformation(extent={{57,78},{61,82}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n9 \n\n\n\n annotation (Placement(transformation(extent={{85,18},{89,22}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n10 \n\n\n\n annotation (Placement(transformation(extent={{85,-32},{89,-28}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n11 \n\n\n\n annotation (Placement(transformation(extent={{137,38},{141,42}}))); \n\n\n\n public \n\n\n\n Modelica.Electrical.Analog.Basic.Ground G2 \n\n\n\n annotation (Placement(transformation(extent={{11,-76},{25,-60}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n12 \n\n\n\n annotation (Placement(transformation(extent={{237,58},{241,62}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n13 \n\n\n\n annotation (Placement(transformation(extent={{237,18},{241,22}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.PositivePin p4 \n\n\n\n annotation (Placement(transformation(extent={{187,18},{193,22}}))); \n\n\n\n protected \n\n\n\n Modelica.Electrical.Analog.Interfaces.NegativePin n14 \n\n\n\n annotation (Placement(transformation(extent={{187,-32},{193,-28}}))); \n\n\n\n public \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 186,
            "date": "Jun 11, 2018",
            "title": "New library for generation of images in documentation",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2603",
            "poster_name": "#2603\n            opened Jun 11, 2018 by\n            tobolar",
            "description": "I have re-generated a couple of images (pictures) for version v3.2.3, especially regarding Modelica.Mechanics.MultiBody. For that reason, it was necessary to define new models in some cases in order to reconstruct the situation of the original images.\nI think this can happen in the future again and again, and maybe also for another libraries. So it would be reasonable to my opinion to have a particular library collecting models for such particular reason, thus simplificating the images' regeneration.\nSo my question is\n\ndoes it make sense to have such a library,\nif yes, where to define it.\n\nstandalone or\nas a part of another library, e.g. ModelicaTest. The drawback here is that the models for images' generation do not necessarilly need to be simulatable.\n\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 187,
            "date": "Jun 1, 2018",
            "title": "Potentially illegal conditional components in Fluid.Vessels",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2574",
            "poster_name": "#2574\n            opened Jun 1, 2018 by\n            perost",
            "description": "Modelica.Fluid.Vessels.BaseClasses.PartialLumpedVessel contains the following conditional components (type names shortened for readability):\nRealInput[nPorts] portsData_diameter_internal = portsData.diameter if use_portsData and nPorts > 0;\nRealInput[nPorts] portsData_height_internal = portsData.height if use_portsData and nPorts > 0;\nRealInput[nPorts] portsData_zeta_in_internal = portsData.zeta_in if use_portsData and nPorts > 0;\nRealInput[nPorts] portsData_zeta_out_internal = portsData.zeta_out if use_portsData and nPorts > 0;\nportsData is in turn declared as:\nparameter VesselPortsData[if use_portsData then nPorts else 0] portsData;\nThe issue with this is that when use_portsData = false then portsData will be an array with 0 elements while the conditional variables above will have nPorts elements, leading to a type mismatch between the variables and their binding equations when nPorts > 0. This occurs in e.g. Modelica.Fluid.Examples.TraceSubstances.RoomCO2WithControls where use_portsData is set to false and nPorts to 4 on the volume component.\nThis was previously somewhat of a gray area since it wasn't really specified how valid conditional components should be, but in Modelica 3.4 this was clarified as (section 4.4.5):\n\nIf the Boolean expression is false the component (including its modifier) is removed from the flattened DAE , and connections to/from the component are removed. [Adding the component and then removing it ensures that the component is valid.]\n\nI interpret this to mean that conditional components must be as valid as any other component, including having type compatible binding equations.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 188,
            "date": "May 29, 2018",
            "title": "Redesign FreeMotionScalarInit to not influence dynamic simulation when no states are selected",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2556",
            "poster_name": "#2556\n            opened May 29, 2018 by\n            tobolar",
            "description": "In #1810, @HansOlsson discuss the problematic design of Modelica.Mechanics.MultiBody.Joints.FreeMotionScalarInit concerning its influence on dynamic simulation.\nA solution should be found and implemented on calculation of angles, angular velocity and acceleration when no states are selected. The suggested solution is\n\nreplacing its internal InitAngle (and its derivative) by the corresponding sensor components\n\nSee also PR #2529.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 189,
            "date": "May 28, 2018",
            "title": "FluidHeatFlow: Enhancement of piston model and pump model",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2554",
            "poster_name": "#2554\n            opened May 28, 2018 by\n            AHaumer",
            "description": "Maybe this can be fixed earlier (MSL 3.2.3):\n\n\n The piston model should consider the mass of the cylinder (in case useSupport=true) and the piston.\n\n\n The pump model should get an optional support,\nand it should consider the inertia of the housing (in case useSupport=true) and the punp wheel.\nThe calculation of mechanical power resp. torque should be improved.\nDocumentation should be improved (description of the pump characteristic, the pump can act as a turbine).\n\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 190,
            "date": "May 18, 2018",
            "title": "Replace Modelica.Mechanics.MultiBody.Interfaces.PartialAbsoluteSensor",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2534",
            "poster_name": "#2534\n            opened May 18, 2018 by\n            HansOlsson",
            "description": "Based on comment in #609 I would suggest to replace Modelica.Mechanics.MultiBody.Interfaces.PartialAbsoluteSensor by Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor\n(and similarly for other sensors.)\nWith \"replace\" I mean move Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor to Modelica.Mechanics.MultiBody.Interfaces.PartialAbsoluteSensor overwriting the current model (or possibly first move Modelica.Mechanics.MultiBody.Interfaces.PartialAbsoluteSensor to some Obsolete-library).\nThe reasons are:\n\nA sensor does not need to have outputs with those names; in general we want better names for the outputs.\nThe actual sensor models use Modelica.Mechanics.MultiBody.Sensors.Internal.PartialAbsoluteSensor - assumedly for these reasons\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 191,
            "date": "Apr 26, 2018",
            "title": "Including figures in HTML documentation",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2519",
            "poster_name": "#2519\n            opened Apr 26, 2018 by\n            christiankral",
            "description": "The actual guidelines for including figures are summarized in Modelica.UsersGuide.Conventions.Documentation.Format.Figures.\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\">\n  <caption align=\"bottom\">Caption starts with a capital letter</caption>\n  <tr>\n    <td>\n      <img src=\"modelica://Modelica/Resources/Images/Blocks/PID_controller.png\"\n           alt=\"PID_controller.png\">\n    </td>\n  </tr>\n</table> \nIt is advised to use a table in order to include a figure. The table captions are included by\n<caption align=\"bottom\">Caption starts with a capital letter</caption>\nThe reason for this is to align the caption below the figure such that the caption does not become any wider than the figure width.  The attribute align=\"bottom\" does work, e.g., in OpenModelica, but it doesn't in Dymola -- where the caption is place above the figure. I am not quite happy with this design of the figure layout since it is quite a complex construction.\nI guess that a lot of documentation of the MSL is, however, implemented in a different way. Even the referenced example Modelica.Blocks.Examples.PID_Controller is designed differently:\n<p>\nIn the following figure, results of a typical simulation are shown:\n</p>\n\n<img src=\"modelica://Modelica/Resources/Images/Blocks/PID_controller.png\"\n     alt=\"PID_controller.png\"><br>\n\n<img src=\"modelica://Modelica/Resources/Images/Blocks/PID_controller2.png\"\n     alt=\"PID_controller2.png\">\nIn HTML5 the tag figcaption is supported. So going for the figure format\n<p>\n <figure>\n  <img src=\"modelica://Modelica/Resources/Images/Blocks/PID_controller.png\" \n       alt=\"PID_controller.png\">\n  <figcaption>Caption starts with a capital letter.</figcaption>\n</figure> \n</p>\nwere on my opinion the way better choice. I so have no idea what HTML version is supported in Modelica. I suspect the Modelica specification does not say anything about it.  I actually tested this implementation with OpenModelica -- where it works -- and Dymola -- where the tag <figcaption> seems not to be supported.\nAny suggestions or comments here?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 192,
            "date": "Apr 25, 2018",
            "title": "Questionable initialScale in some Blocks",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2512",
            "poster_name": "#2512\n            opened Apr 25, 2018 by\n            tobolar",
            "description": "In the following blocks, there is used initialScale=0.06 without obvious benefit.\n\nModelica.Blocks.Interfaces.PartialBooleanMISO\nModelica.Blocks.Interfaces.PartialIntegerMISO\nModelica.Blocks.Interfaces.PartialIntegerSISO\nModelica.Blocks.Interfaces.PartialRealMISO\nModelica.Blocks.Sources.RadioButtonSource\nModelica.Blocks.MathInteger.TriggeredAdd\n\nIf there is a benefit, the same scaling should be used consequently within other (partial) classes such as Modelica.Blocks.Interfaces.SISO.\nIn contrast, in Modelica.Blocks.Interfaces.PartialBooleanSISO_small, the name at least indicates the scaling. Though it may not be obvious to the user what feature is reflected by \"small\".\nSee also #2419.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 193,
            "date": "Mar 6, 2018",
            "title": "Rename parameters of Modelica.Mechanics.MultiBody.Visualizers.Plane",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2485",
            "poster_name": "#2485\n            opened Mar 6, 2018 by\n            beutlich",
            "description": "Parameters of Modelica.Mechanics.MultiBody.Visualizers.Plane are labeled axis_[xy], length_[xy] and n[xy]. Setting axis_x to {0,1,0} and axis_y to {1,0,0} might cause some confusion. I rather would like to use the same naming convention as Modelica.Mechanics.MultiBody.Visualizers.FixedShape do, e.g., rename\n\naxis_x -> lengthDirection\naxis_y -> widthDirection\nlength_x -> length\nlength_y -> width\n\nFor the discretization parameters I am not that sure and simply propose\n\nnx -> n\nny -> m\n\nSee #2424.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 194,
            "date": "Mar 5, 2018",
            "title": "MultiBody models have a problem with StateSelect.always/never",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2482",
            "poster_name": "#2482\n            opened Mar 5, 2018 by\n            sjoelund",
            "description": "When trying to implement a check in OpenModelica for variables chosen as states despite StateSelect.never and variables not selected as states despite having StateSelect.always, I discovered that Joints.Revolute and Parts.RollingWheel have this problem. For both models, the problem is that you set these models using a single stateSelect parameter.\nFor Joints.Revolute, the stateSelect parameter is used for both phi and w where w = der(phi) and a = der(w) which means these might reasonably be chosen as states in some models (depending on optimizations); so StateSelect.never is probably not a good value. Modelica.Mechanics.MultiBody.Examples.Constraints.RevoluteConstraint does set StateSelect.never and the question is if there should be an assertion checking that StateSelect.never was used, if this should trigger a warning in the tool and the example be changed, or if the model should simply use SI.Angle phi(start=0, final stateSelect=max(stateSelect, StateSelect.avoid)).\nFor Parts.RollingWheel we have the opposite problem: at least OpenModelica gets for Elementary.RollingWheel wheel1.der_angles[1] and wheel1.der_angles[2] as non-state variables with stateSelect=StateSelect.always (regardless of index reduction method used). And it stands to reason that if the acceleration of these variables is not used, StateSelect.always is a bad value; but it might be fine for the other variables in the model (and indeed setting StateSelect.prefer in Elementary.RollingWheel is problematic for OpenModelica). So again the question is if we should guard der_angles in Parts.mo with each stateSelect=min(StateSelect.prefer, stateSelect) or if we should fix the RollingWheel example by for example setting stateSelect=StateSelect.always and manually overriding only der_angles (but this seems like an awkward thing to do).\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 195,
            "date": "Mar 2, 2018",
            "title": "Discrepances in position, size and color of connectors' names",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2481",
            "poster_name": "#2481\n            opened Mar 2, 2018 by\n            tobolar",
            "description": "Connectors within the MSL differ in the position, size and color of their name primitive. In the figure attached, there are shown some of the connectors from different domains.\nThere should be defined a convention on how to handle the connectors' names, similar to Modelica.UsersGuide.Conventions.Icons. See also discussion on descriptive text in #2471.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n beutlich reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 196,
            "date": "Feb 8, 2018",
            "title": "Shorten names of sensor models",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2460",
            "poster_name": "#2460\n            opened Feb 8, 2018 by\n            tobolar",
            "description": "Sensor models spread across the library don't need to contain the word \"sensor\" in their name when collected in packages called \"Sensors\". Applying this rule, the sensor models' names can be shortened significantly.\nI suppose the 'Sensor' in the name is hangover from former library versions to simplify naming of sensor instances. But using defaultComponentName consequently can make it as well.\nThis applies to\n\nModelica.Electrical.Analog.Sensors\nModelica.Electrical.Machines.Sensors\nModelica.Electrical.MultiPhase.Sensors\nModelica.Electrical.QuasiStationary.SinglePhase.Sensors\nModelica.Electrical.QuasiStationary.MultiPhase.Sensors\nModelica.Magnetic.FluxTubes.Sensors\nModelica.Magnetic.FundamentalWave.Sensors\nModelica.Mechanics.MultiBody.Sensors\nModelica.Mechanics.Rotational.Sensors\nModelica.Mechanics.Translational.Sensors\nModelica.Thermal.FluidHeatFlow.Sensors\nModelica.Thermal.HeatTransfer.Sensors\n\nIn contrast, the rule is already applied to Modelica.Fluid.Sensors. Despite no defaultComponentName is applied.\nSee also discussion in #2301.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 197,
            "date": "Jan 30, 2018",
            "title": "Complex numbers (and other classes) do no show documentation string in Variables Browser",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2455",
            "poster_name": "#2455\n            opened Jan 30, 2018 by\n            christiankral",
            "description": "I recently noticed, that complex numbers lack a proper documentation when going through the variables browser.  From my experience this applies both to OpenModelica and Dymola. The issue of not having documentation strings in the re-declaration of the real and imaginary part are resolved by #2443. However, the documentation string of the complex variable itself does not appear. As I understand from https://trac.openmodelica.org/OpenModelica/ticket/4721, this seems to be a flattening issue.\nConsider the following example:\nmodel Test \"Test example\"\n  Modelica.SIunits.ComplexCurrent I = Complex(1,2) \"Complex current\";\nend Test;\nIn OpenModelica the Variables Browser does neither show the documentation string of the complex variable nor of model Test:\n\nI remember the discussions on the implementation of complex numbers. Even though I was always in favor of having a built in complex number type, one major argument against it always was, that the complex numbers are supposed to look like a built in type. Even the discussion in #1822 emphasizes this  point of view. Yet documentation strings of complex numbers are not displayed..\nOn my opinion this issue needs discussion.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 198,
            "date": "Jan 18, 2018",
            "title": "Bad class names in Modelica.Mechanics",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2431",
            "poster_name": "#2431\n            opened Jan 18, 2018 by\n            tobolar",
            "description": "Correct bad class names in Modelica.Mechanics, esp. the usage of underscores should be omitted where possible - see Modelica.Mechanics_StyleCheckLog.html\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 199,
            "date": "Jan 2, 2018",
            "title": "Simpler Modelica.Fluid.Machines.ControlledPump",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2413",
            "poster_name": "#2413\n            opened Jan 2, 2018 by\n            HansOlsson",
            "description": "The model has the comment \"Use this model if the pump characteristics is of secondary interest.\"\nHowever, even if the values for the pump characteristic as default has zero impact on the rest of the model (as far as I can see) incorrect values will still lead to a failed simulation.\nThis is slightly complicated - but as far as I can see:\nFor the default case N will be determined from head, and eta a fixed value so that power consumption does in fact not depend on the speed.\nThe equation for N is complicated, but even for a linear flow characteristic it is a quadratic equation that cannot be solved for all values of head (seems it is a minimum allowed value).\nValues below the minimum may be non-physical - but a proper warning/error is preferable to having a non-linear system that cannot be solved.\nAssuming this is correct I would propose to introduce a simpler variant of ControlledPump (either as parameter or as a separate model) without 'N'; possibly with monitoring for this issue.\nTo clarify: the simpler variant will simulate in more cases than the current one; and produce the same results when both work - and can be made by \"just disabling N and its equations\".\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n justnielsen reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 200,
            "date": "Nov 10, 2017",
            "title": "Development of a generic and portable FMU import block",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2389",
            "poster_name": "#2389\n            opened Nov 10, 2017 by\n            beutlich",
            "description": "Currently it is hardly possible (or impossible) to share a custom Modelica library between different tools or platforms if imported FMUs are involved. This is a strinking shortcoming of the MSL (or any other generic Modelica library), though both FMI and Modelica are created for openness and tool-exchangeability.\nBased on the everlasting problem of the online-computation of the minimum of a (continuous) variable, I summarized my recent experiments in a presentation for the Saxon Modelica User's Group. The corresponding experimental Modelica library is also publicly available at beutlich/LastLib.\nMy idea is the development of a generic and portable FMU import block / template with a specified interface for the FMU itself and the parameters, inputs and outputs of the FMU.\nblock FMUImport \"FMU Import\"\n  import M = ModelicaServices;\n  parameter String fmuPath = \"\" \"File where FMU is stored\"\n    annotation(Dialog(\n      loadSelector(filter=\"Functional Mock-up Units (*.fmu)\",\n      caption=\"Open file\")));\n  parameter String fmuInstanceName = \"test_fmu\";\n  parameter M.FMISettings fmuSettings(logging=true);\n  parameter Real pR[M.getNumberOfRealParams(fmu)] \"Real parameters\";\n  parameter Integer pI[M.getNumberOfIntegerParams(fmu)] \"Integer parameters\";\n  input Real uR[M.getNumberOfRealInputs(fmu)] \"Real inputs\";\n  input Integer uI[M.getNumberOfIntegerInputs(fmu)] \"Integer inputs\";\n  output Real yR[M.getNumberOfRealOutputs(fmu)] \"Real outputs\";\n  output Integer yI[M.getNumberOfIntegerOutputs(fmu)] \"Integer outputs\";\n  // similar for the Boolean and String types\n  protected\n    parameter M.FMUExternalObject fmu(fmuPath, fmuInstanceName, fmuSettings);\n  equation\n    // ...\nend FMUImport;\nTechnically, everything what is tool-dependent has to go to ModelicaServices, but the aim should be to specify the block as tool-generic as possible. Also, we should reuse as much as possible from modelica-tools/FMUComplianceChecker for the implementation of the external object FMUExternalObject, e.g., FMU unzipping, XML parsing, library loading/unloading etc.\nFor dedicated I/O signal names the expandable connectors feature of Modelica still can be used on top of the FMU import block. However this would be beyond the scope of a generic block.\n@andreas-junghanns @HansOlsson @hubertus65 @johanrhodin @otronarp @sjoelund @svorkoetter  Please let me know what you think. Is it possible at all? Thank you.\n@FrenkelJ @vwaurich FYI.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n johanrhodin reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 201,
            "date": "Oct 10, 2017",
            "title": "Reference result for Modelica.Electrical.Analog.Examples.AD_DA_conversion lacks periodicity",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2350",
            "poster_name": "#2350\n            opened Oct 10, 2017 by\n            qlambert-pro",
            "description": "The example represents a model of a conversion of a sine wave from analog to digital and back to analog. Since the period of the sine wave is a multiple of the sampling period used for the AD conversion, I believe the output of the conversion should be periodic and have the same period as the sine wave. This property should also be shared by the output of the DA conversion.\nThe reference file, however, does not display it.\nThe values of several variables between time 0.15 and 0.151 differs from their values between time 0.05 and 0.051. Affected variables include: aD_Converter.y, dA_Converter.vout and dA_Converter.y.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 202,
            "date": "Oct 9, 2017",
            "title": "Unused parameter IDRM (for the saturation current) in Modelica.Electrical.Analog.Semiconductors.Thyristor",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2348",
            "poster_name": "#2348\n            opened Oct 9, 2017 by\n            beutlich",
            "description": "The parameter Modelica.Electrical.Analog.Semiconductors.Thyristor.IDRM is declared but never referenced.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 203,
            "date": "Oct 9, 2017",
            "title": "Missing comments and units for variables in Modelica.Electrical.Analog.Semiconductors.Thyristor",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2347",
            "poster_name": "#2347\n            opened Oct 9, 2017 by\n            beutlich",
            "description": "Similar issue as #2089, #2302 and #2343.\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 204,
            "date": "Oct 9, 2017",
            "title": "Remove transparency from group images",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2346",
            "poster_name": "#2346\n            opened Oct 9, 2017 by\n            beutlich",
            "description": "When discussing #2344, it was agreed, that the PNG images used as group images should have white background. This refers to the following images in Magnetic.FluxTubes\n\n CoaxCylindersEndFaces.png\n Core_SinglePhase.png\n Core_ThreePhase1.png\n CuboidOrthogonalFlux.png\n CuboidParallelFlux.png\n EighthOfHollowSphere.png\n EighthOfSphere.png\n Eqn_ShapeFunctionsTellinen.png\n HalfCylinder.png\n HalfHollowCylinder.png\n HardMagneticHysteresis.png\n HollowCylinderAxialFlux.png\n HollowCylinderRadialFlux.png\n LeakageAroundPoles.png\n LeakageWithCoefficient.png\n MovingCoilActuator_dimensions.png\n QuarterCylinder.png\n QuarterHollowCylinder.png\n QuarterHollowSphere.png\n QuarterSphere.png\n SoftMagneticHysteresis1.png\n Solenoid_dimensions.png\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 205,
            "date": "Oct 2, 2017",
            "title": "Cleaning up multiple Release notes",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2333",
            "poster_name": "#2333\n            opened Oct 2, 2017 by\n            HansOlsson",
            "description": "Looking at #2331 I realized a general issue: several sub-libraries of MSL have \"Release Notes\" and there does not seem to be a common strategy for them leading the differences and outdated contents.\nMost of the sub-library release notes only include changes up to inclusion in MSL, e.g. for Modelica.StateGraph, Modelica.Fluid, Modelica.Media - but some contain some up-to-date changes like Modelica.Thermal.FluidHeatFlow.\nFrom a user-perspective I find that a release note in a sub-library only containing very old changes more confusing than helping: why is this relevant? why are there no changes after 2005?\nI would propose moving the sub-library release notes to sub-section(s) of Modelica.UsersGuide.ReleaseNotes, since it seems better than the alternatives:\nJust removing them doesn't seem right.\nTrying to maintain both the general release notes and package-specific ones seems excessive and will likely not be done correctly.\n--\nExactly how to add it is not clear - but one possibility would be that e.g. existing Fluid-release notes could be a sub-section under Modelica 3.1, and in Modelica 3.1 the addition of Modelica.Fluid references this.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 206,
            "date": "Aug 18, 2017",
            "title": "Use consistent units in Modelica.Electrical.Spice3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2302",
            "poster_name": "#2302\n            opened Aug 18, 2017 by\n            christiankral",
            "description": "In Modelica.Electrical.Spice3 some units are not declared correctly -- even if the units are obvious.\nFirst example (more may follow):\nThe units of the following variables are not specified correctly in Modelica.Electrical.Spice3.Internal.Functions.resDepTemp \n\ntc1 -> 1/K\ntc2 -> 1/K2\ndifference -> K\ndCond_dTemp -> 1/K/Ohm2\n\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 207,
            "date": "Jun 2, 2017",
            "title": "What is the purpose of Modelica.Utilities.Files.list?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2259",
            "poster_name": "#2259\n            opened Jun 2, 2017 by\n            HansOlsson",
            "description": "A colleague of mine stumbled upon this function and I have no good answer.\nBasically the function seems a bit misplaced. You can use it interactively - but I don't see a use inside other functions - since you cannot use the result.\nHowever, the internal routines Modelica.Utilities.Internal.FileSystem.readDirectory and Modelica.Utilities.Internal.FileSystem.stat  seem more useful  and can be used in user-written functions (after #639 ).\nWe could just document that the internal routines can be used directly, or we could add a list-variant that either returns the list as array of strings or calls a user-provided function for each file in the directory.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 208,
            "date": "May 2, 2017",
            "title": "Questions regarding FluxTubes, HysteresisModelComparison",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2248",
            "poster_name": "#2248\n            opened May 2, 2017 by\n            chria",
            "description": "Hi,\nSimulating the model Modelica.Magnetic.FluxTubes.Examples.Hysteresis.HysteresisModelComparison using JModelica result in that the variables:\nTellinenTable.Phi\nTellinenSoft.Phi\nPreisachEverett.Phi\nare chosen as states. These are poor choices for states as their magnitude are around 1e-4 and because of that they are missing nominal values. Would it be possible to include nominal values for these?\nA better choice, in this model, for states would be\nTellinenTable.B\nTellinenSoft.B\nPreisachEverett.B\nis this true in general? If so, would it be possible to set state select on these?\nThanks!\nBest\n/Christian\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 209,
            "date": "Apr 19, 2017",
            "title": "Add JointSUP and JointRPP to MultiBody",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2242",
            "poster_name": "#2242\n            opened Apr 19, 2017 by\n            beutlich",
            "description": "In Modelica.Mechanics.MultiBody.UsersGuide.Tutorial.LoopStructures.AnalyticLoopHandling the following announcement was made (already in summer 2004 \ud83d\ude2a).\n\nThe missing combinations (such as JointSUP or JointRPP) will be added in one of the next releases.\n\nThis simply is a reminder for it.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 210,
            "date": "Apr 19, 2017",
            "title": "External function wrapper dgees should not pass garbage for function pointer",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2241",
            "poster_name": "#2241\n            opened Apr 19, 2017 by\n            henrikt-ma",
            "description": "The Matrices.LAPACK.dgees function passes garbage to the third argument of the external dgees function where it expects a function pointer.\nInstead, Matrices.LAPACK.dgees needs to call a wrapper provided in ModelicaUtilities that is free of the function pointer argument, and in turn calls the external dgees with something more sensible.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 211,
            "date": "Apr 18, 2017",
            "title": "Inversion of complex matrices: usefulness and how to obtain in MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2239",
            "poster_name": "#2239\n            opened Apr 18, 2017 by\n            ceraolo",
            "description": "Inversion of complex matrices might seem a too esoteric task to be inserted in MSL.\nIn my opinion it is not. One part of MSL, Electrical.Analog.QuasiStationary relies completely on complex numbers.\nI've recently found a very important application of Quasi Stationary library: phasor simulation of an AC network which interferes with the dynamic systems constituted by trains: the feeding system of High-Speed railway lines.\nTo do this satisfactorily, complex inversion is needed. I omit here details for brevity, but in case complex inversion is added to MSL I can supply a significant, yet sufficiently simple, as an exampleto be possibly included in MSL.\nFor this application the best solution would be a \"cinv\" Modelica function which directly inverts a complex matrix. In fact: inversion is only needed at a system initial set-up, to create the parameter complex matrix of this system so\n\nthere is no need of high speed computation\ninversion is to be made in a function, i.e. in an algorithm\nthe matrix to be inverted is expected to be always well-conditioned.\n\nNaturally I have several options to solve my specific problem , e.g.:\n\nimposing the product of the matrix to be inverted times the expected inversion to be equal to identity in an equation section of a model\nmaking my own C code for inversion\n\nBut I prefer to work on a more general  solution which could imply an enhancement of MSL's usability.\nIt seems to me that adding complex inverse should not be a strong task, given the existing Lapack functions (cgetrf() , cgetri()). Since currently Modelica interfaces to C programs through real numbers, a simple Modelica wrapper would be needed to extract the two real matrix from the complex matrix to be inverted, send them to a C wrapper which combines them back into a complex matrix, use Lapack for inversion and make the inverse path to give the Modelica caller function the result.\nI could to this myself and propose the result for possible insertion in MSL.\nI only need to understand how to link cgetri() and the corresponding lapack dependencies to my Modelica installation. I repeat, it f there is interest, I can share everything I do on this ticket's topic to the Modelica community.\nCan someone help?\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 212,
            "date": "Feb 28, 2017",
            "title": "Problems with equations from IdealGTOThyristor resulting in infinite loop",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2193",
            "poster_name": "#2193\n            opened Feb 28, 2017 by\n            agnesramle",
            "description": "In the models\n\nModelica.Electrical.PowerConverters.Examples.DCAC.MultiPhaseTwoLevel.MultiPhaseTwoLevel_RL\nModelica.Electrical.PowerConverters.Examples.DCAC.SinglePhaseTwoLevel.SinglePhaseTwoLevel_RL\nModelica.Electrical.PowerConverters.Examples.DCDC.HBridge.HBridge_DC_Drive\n\nwe have the following mixed linear system\n--- Torn mixed linear system (Block 3) of 4 iteration variables and 7 solved variables ---\nCoefficient variability: discrete-time\nTorn variables:\ninverter.transistor_n.i\ninverter.diode_p.i\ninverter.diode_p.v\nfundamentalWaveVoltage.u\ninverter.diode_n.v\ninverter.diode_n.i\ninverter.transistor_p.i\nIteration variables:\ninverter.transistor_p.s\ninverter.transistor_n.s\ninverter.diode_p.s\ninverter.diode_n.s\nSolved discrete variables:\ninverter.transistor_p.off\ninverter.transistor_n.off\ninverter.diode_p.off\ninverter.diode_n.off\nTorn equations:\ninverter.transistor_n.i := inverter.transistor_n.s * (if inverter.transistor_n.off then inverter.transistor_n.Goff else 1) + inverter.transistor_n.Goff * inverter.transistor_n.Vknee\ninverter.diode_p.i := inverter.diode_p.s * (if inverter.diode_p.off then inverter.diode_p.Goff else 1) + inverter.diode_p.Goff * inverter.diode_p.Vknee\ninverter.diode_p.v := - inverter.transistor_p.s * (if inverter.transistor_p.off then 1 else inverter.transistor_p.Ron) - inverter.transistor_p.Vknee\nfundamentalWaveVoltage.u := inverter.diode_p.v + constantVoltage_p.p.v\ninverter.diode_n.v := - fundamentalWaveVoltage.u + constantVoltage_n.n.v\ninverter.diode_n.i := inverter.diode_n.s * (if inverter.diode_n.off then inverter.diode_n.Goff else 1) + inverter.diode_n.Goff * inverter.diode_n.Vknee\ninverter.transistor_p.i := inverter.transistor_p.s * (if inverter.transistor_p.off then inverter.transistor_p.Goff else 1) + inverter.transistor_p.Goff * inverter.transistor_p.Vknee\nContinuous residual equations:\n( - inverter.diode_n.v) = inverter.transistor_n.s * (if inverter.transistor_n.off then 1 else inverter.transistor_n.Ron) + inverter.transistor_n.Vknee\nIteration variables: inverter.transistor_p.s\ninverter.diode_p.v = inverter.diode_p.s * (if inverter.diode_p.off then 1 else inverter.diode_p.Ron) + inverter.diode_p.Vknee\nIteration variables: inverter.transistor_n.s\ninverter.diode_n.v = inverter.diode_n.s * (if inverter.diode_n.off then 1 else inverter.diode_n.Ron) + inverter.diode_n.Vknee\nIteration variables: inverter.diode_p.s\ninductor.i + (- inverter.diode_n.i) + inverter.diode_p.i + inverter.transistor_n.i + (- inverter.transistor_p.i) = 0\nIteration variables: inverter.diode_n.s\nDiscrete equations:\ninverter.transistor_p.off := inverter.transistor_p.s < 0 or not inverter.andCondition_p.y\ninverter.transistor_n.off := inverter.transistor_n.s < 0 or not inverter.andCondition_n.y\ninverter.diode_p.off := inverter.diode_p.s < 0\ninverter.diode_n.off := inverter.diode_n.s < 0\nJacobian:\n|1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, - (if inverter.transistor_n.off then inverter.transistor_n.Goff else 1), 0.0, 0.0|\n|0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, - (if inverter.diode_p.off then inverter.diode_p.Goff else 1), 0.0|\n|0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, - (if inverter.transistor_p.off then 1 else inverter.transistor_p.Ron), 0.0, 0.0, 0.0|\n|0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0|\n|0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0|\n|0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, - (if inverter.diode_n.off then inverter.diode_n.Goff else 1)|\n|0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, - (if inverter.transistor_p.off then inverter.transistor_p.Goff else 1), 0.0, 0.0, 0.0|\n|0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, - (if inverter.transistor_n.off then 1 else inverter.transistor_n.Ron), 0.0, 0.0|\n|0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, - (if inverter.diode_p.off then 1 else inverter.diode_p.Ron), 0.0|\n|0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, - (if inverter.diode_n.off then 1 else inverter.diode_n.Ron)|\n|1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0|\nThe right hand side of this system is independent of the switches and if we have a little bit of noise for the state variable inductor.i (e.g.. is -2.0000006918309519E-003 instead of -2E-003) at the time point where  inverter.andCondition_p.y is false and inverter.andCondition_n.y is true, the iteration variable  inverter.transistor_n.s will be bouncing between being equal to exactly 0 and being slightly negative (in the size of ~-1e-10) resulting in an infinite loop for the switches.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 213,
            "date": "Feb 26, 2017",
            "title": "State selection in Modelica.Blocks.Examples.NoiseExamples.ActuatorWithNoise",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2189",
            "poster_name": "#2189\n            opened Feb 26, 2017 by\n            modelica-trac-importer",
            "description": "Reported by agnes.ramle on 23 Feb 2017 13:02 UTC\nIn Modelica.Blocks.Examples.NoiseExamples.ActuatorWithNoise JModelica has a dynamic state selection between\nmotor.smpm.idq_sr[1]\nmotor.smpm.idq_sr[2]\n\nwhere these variables have stateSelect=StateSelect.prefer. A better choice would be controller.busdelay.y which doesn't have a stateSelect attribute. Therefore we suggest to set stateSelect=StateSelect.always on controller.busdelay.y. In that way the dynamic state selection would be removed.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 214,
            "date": "Feb 11, 2017",
            "title": "Replace Blocks.Logical",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2164",
            "poster_name": "#2164\n            opened Feb 11, 2017 by\n            beutlich",
            "description": "Package Modelica.Blocks.MathBoolean contains the following comment since 2010, that is MSL v3.2.\n\nPackage MathBoolean is a new design that shall replace in the future the Logical package.\n\nThis is a reminder for it.\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 215,
            "date": "Jan 15, 2017",
            "title": "Add Modelica.Blocks.Sources.StringExpression",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2126",
            "poster_name": "#2126\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by beutlich on 9 Dec 2016 11:16 UTC\nThere is block Modelica_DeviceDrivers.Utilities.StringExpression in Modelica_DeviceDrivers that could go to Modelica.Blocks.Sources and complete the already existing RealExpression, IntegerExpression and BooleanExpression.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2126\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 216,
            "date": "Jan 15, 2017",
            "title": "Missing comments for result variables in Modelica.Electrical.Spice3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2089",
            "poster_name": "#2089\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by beutlich on 18 Oct 2016 14:15 UTC\nMost of the variables in Modelica.Electrical.Spice3 have no comment\n\nSemiconductors.M_PMOS\nSemiconductors.M_NMOS\nSemiconductors.M_NMOS2\nSemiconductors.M_PMOS2\nSemiconductors.Q_NPNBJT\nSemiconductors.Q_PNPBJT\nSemiconductors.J_PJFJFET\nSemiconductors.J_NJFJFET\nSemiconductors.D_DIODE\nInternal.Rsemiconductor.ResistorModelLineParams.m_dRshIsGiven\nInternal.Rsemiconductor.ResistorVariables\n\nList is not complete. Since I checked this manually, I stopped here and will resume checking once this ticket is dealt with.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2089\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 217,
            "date": "Jan 15, 2017",
            "title": "Missing test or example model for Modelica.Electrical.Digital.Memories.DLATROM",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2083",
            "poster_name": "#2083\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by beutlich on 18 Oct 2016 12:04 UTC\nWhereas there is one example model utilizing Memories.DLATRAM (in Examples.RAM) there is no such model for Memories.DLATROM in MSL or ModelicaTest.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2083\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 218,
            "date": "Jan 15, 2017",
            "title": "Blocks.Interfaces should declare parameters that assign vector length as nonnegative",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2062",
            "poster_name": "#2062\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by jriel on 14 Sep 2016 18:41 UTC\nThe blocks in Modelica.Blocks.Interfaces should declare the minimum of the integer parameters that set the vector size (typically nin, nout, nu, etc), as 0.  Some blocks have that declaration, but not all.\nFor example, from partial block PartialRealMISO\nparameter Integer nu(min=0) = 0 \"Number of input connections\" ... ;\n\nbut MIMO has\nparameter Integer nin=1 \"Number of inputs\";\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2062\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 219,
            "date": "Jan 15, 2017",
            "title": "Improved version of ideal transmission lines",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2058",
            "poster_name": "#2058\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by jriel on 8 Sep 2016 18:13 UTC\nThe current implementation of Modelica.Electrical.Analog.Lines.TLine1 (and TLine2 and TLine3) uses four delay elements.  Because delay elements are expensive to instantiate, a better approach is to use only two delay elements, one for the forward propagation, the other for the reverse.  Here is a suggested rewrite:\nmodel TLine\n    \"Lossless transmission line with characteristic impedance Z0 and transmission delay TD\"\n\n    // Improved version of Modelica.Electrical.Analog.Lines.TLine1.\n    // It uses only two delay elements, rather than four in the original.\n\n    extends Modelica.Electrical.Analog.Interfaces.TwoPort;\n    parameter Modelica.SIunits.Resistance Z0(start=1)\n        \"Characteristic impedance\";\n    parameter Modelica.SIunits.Time TD(start=1) \"Transmission delay\";\nprotected\n    // Declare forward and reverse currents and voltages.\n    Modelica.SIunits.Current i1f, i1r, i2f, i2r;\n    Modelica.SIunits.Voltage v1f, v1r, v2f, v2r;\nequation\n    assert(Z0 > 0, \"Z0 has to be positive\");\n    assert(TD > 0, \"TD has to be positive\");\n    // continuity\n    v1 = +v1f + v1r;\n    v2 = +v2f + v2r;\n    i1 = +i1f + i1r;\n    i2 = -i2f - i2r;\n    // delay\n    v1r = delay(v2r, TD);\n    v2f = delay(v1f, TD);\n    // characteristic impedance\n    v1f = +Z0*i1f;\n    v2f = +Z0*i2f;\n    v1r = -Z0*i1r;\n    v2r = -Z0*i2r;\nend TLine;\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2058\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 220,
            "date": "Jan 15, 2017",
            "title": "Partially erroneous unit of Resistance",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2054",
            "poster_name": "#2054\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by massimo.ceraolo on 3 Sep 2016 06:42 UTC\nthe units of measure of quantities, when expressed in words (not symbols) are all lowercase: ampere, volt, henry, etc.\nSee for instance https://www.nist.gov/pml/special-publication-330.\nTherefore I think that the unit for resistance should be set to \"ohm\" instead of \"Ohm\".\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2054\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 221,
            "date": "Jan 15, 2017",
            "title": "Standardized interface between Modelica and PLC",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/2018",
            "poster_name": "#2018\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by ahaumer on 21 Jun 2016 16:12 UTC\nFrom industry I heard the wish of \"Virtual Putting into Operation\". The task would be to create a (standardized) interface between Modelica models of the plant and a PLC (e.g. Siemens S7, B&R, Rockwell, Beckhoff, Moeller, ...). This could be a soft-PLC running on a PC (no need for real time) or a real PLC, the model running in real time on a real-time capable PC. In case of a real PLC of course the user has to provide the physical I/O to the PLC. The advantages are clear: The developer can test his PLC-program long before the plant is available. A company could train people on certain automatisation applications without having demo plants. This reminds me somehow about the FMI-standardization. Any comments?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/2018\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 222,
            "date": "Jan 15, 2017",
            "title": "Issue due to new argument crossArea in wall friction functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1974",
            "poster_name": "#1974\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by otter on 4 Apr 2016 11:25 UTC\nThis ticket is for further discussion of #1973 (in particular also how to avoid or better handle such issues in the future).\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1974\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 223,
            "date": "Jan 15, 2017",
            "title": "Usage of pre in Modelica.Electrical.Digital erroneous",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1959",
            "poster_name": "#1959\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by clauss on 15 Mar 2016 13:34 UTC\nP. Junglas reported errors when using basic components of Modelica.Electrical.Digital. Care for:\nP. Junglas: Pitfalls using discrete event blocks in Simulink and Modelica. ASIM-Treffen STS/GMMS 2016, Treffen der ASIM/GI-Fachgruppen STS und GMMS, 10./11.M\u00e4rz 2016, Lippstadt, pp. 90-97.\nThe publication is attached.\nASIM.pdf\nThe reason of wrong behavior seems to be the usage of pre.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1959\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 224,
            "date": "Jan 15, 2017",
            "title": "Support directories in loadResource(..)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1954",
            "poster_name": "#1954\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by otter on 9 Mar 2016 18:40 UTC\nAt the 89th Modelica Design Meeting the following proposal was worked out:\nIt is proposed to generalize the available ModelicaService function \u201cloadResource(..)\u201d. If the URI or local path name identifies a directory (= collection of resources), then the absolute path name of this directory is returned. The returned absolute path of a directory does not have a trailing slash [If the URI would specify data in another form (say a database), then all resource elements identified by the URI could be copied to a temporary, local directory and the absolute path name of this directory is returned].\nThis feature is already supported by Dymola, JModelica.org, OpenModelica and by SystemModeller.\nIt has to be checked whether the \"not having a traling slash\" is fine. Otherwise, there seems to be agreement to introduce this feature in the next version of MSL (Modelica.Utilities.Files.loadResource()) and correspondingly in ModelicaServices.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1954\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 225,
            "date": "Jan 15, 2017",
            "title": "Resource leak in Modelica.Utilities.Examples.readRealParameterModel (long term edition)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1942",
            "poster_name": "#1942\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Modified by beutlich on 3 Mar 2016 07:59 UTC\nThere are Modelica tools that evaluate parameter/variable expressions in the GUI before simulation. In case of Modelica.Utilities.Examples.readRealParameterModel this means that parameter J, phi_rel0 and w_rel0 are determined by function calls of readRealParameter and thus by reading the values from file. It turns out that the file Examples_readRealParameters.txt is opened but not closed again.\nSee also #1940.\n\nReported by beutlich on 3 Mar 2016 07:52 UTC\nThere are Modelica tools that evaluate parameter/variable expressions in the GUI before simulation. In case of Modelica.Utilities.Examples.readRealParameterModel this means that parameter J, phi_rel0 and w_rel0 are determined by a function calls of readRealParameter and thus by reading the values from file. It turns out that the file Examples_readRealParameters.txt is opened but not closed again.\nSee also #1940.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1942\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 226,
            "date": "Jan 15, 2017",
            "title": "Check == and <> usages in functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1915",
            "poster_name": "#1915\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by otter on 19 Feb 2016 13:31 UTC\nIn https://trac.modelica.org/Modelica/ticket/1867#comment:41 the following was reported:\nThe LMS Amesim compiler found several \"warnings\" related to equality comparison of Real variables. For example, there are lines like if (d_vap <> d_liq) or if abs(m) <= tol or fb == 0.0 . I suspect most other tools just ignore the warnings, like we do. However, it might be nice to clean up as many of them as we can before the v3.2.2 release. This is most likely just a partial list\u2026\nFunctions that use == comparisons on Real variables:\nModelica.Media.Water.IF97_Utilities.BaseIF97.Basic.f3\nModelica.Media.Common.OneNonLinearEquation.solve \n\nFunctions that use <> comparisons on Real variables:\nModelica.Media.Water.IF97_Utilities.waterBaseProp_ph\nModelica.Media.Water.IF97_Utilities.waterBaseProp_ps\nModelica.Media.Water.IF97_Utilities.waterBaseProp_pT\nModelica.Media.Water.IF97_Utilities.BaseIF97.Isentropic.hofps4\nModelica.Media.Water.IF97_Utilities.BaseIF97.TwoPhase.waterSat_ph\nModelica.Media.Water.IF97_Utilities.BaseIF97.TwoPhase.waterR4_ph\nModelica.Media.Water.IF97_Utilities.BaseIF97.TwoPhase.waterR4_dT \n\nAlthough == and <> are allowed in Modelica functions, there might be issues and the functions should be inspected.\nI have analyzed the first two (Hubertus, please have a look at the other ones):\nModelica.Media.Common.OneNonLinearEquation.solve\nHere the following code is present\n if abs(m) <= tol or fb == 0.0 then\n    // root found (interval is small enough)\n\nThis code fragment checks whether the interval of the independent variable (abs(m) <= tol) is small enough or whether the residue is exactly zero. If this is the case, the root was found. The \"fb == 0.0\" is correct here: We cannot use an eps, abs(fb) <= eps, because the \"size\" of fb is not known (could be very large or very small). However, if the residue is exactly zero, it is impossible to further reduce the x-interval. Therefore, this check must be present.\nModelica.Media.Water.IF97_Utilities.BaseIF97.Basic.f3\nHere the following code fragement is present:\nf.delta := if (d == data.DCRIT and T == data.TCRIT) then \n                1 - Modelica.Constants.eps \n           else abs(d/data.DCRIT);\n\nLooks a bit surprising to me and it might be better to have an eps here, such as (but I am unsure):\nf.delta := if ( abs(d-data.DCRIT)<=eps and \n                abs(T-data.TCRIT)<=eps then \n                1 - Modelica.Constants.eps \n...\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1915\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 227,
            "date": "Jan 15, 2017",
            "title": "Modelica.Media.IdealGases.Common.MixtureGasNasa.specificEntropy correct?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1913",
            "poster_name": "#1913\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by hansolsson on 17 Feb 2016 16:46 UTC\nBased on #1909 I tried to see if functions are would be complicated for automatic differentiation (or algorithmic differentiation for those that prefer that term), and found something else that is suspicious:\nModelica.Media.IdealGases.Common.MixtureGasNasa.specificEntropy\ns :=  s_TX(state.T, state.X) - sum(state.X[i]*Modelica.Constants.R/MMX[i]*\n    (if state.X[i]<Modelica.Constants.eps then Y[i] else \n    Modelica.Math.log(Y[i]*state.p/reference_p)) for i in 1:nX);\n\nThe handling of low concentrations look odd (switching between Y and log (Y*...), and at least there should be a comment explaining how it works.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1913\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 228,
            "date": "Jan 15, 2017",
            "title": "Issue with uninitialized record fields",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1910",
            "poster_name": "#1910\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by awittkop on 16 Feb 2016 16:33 UTC\nIn the MSL file Media/Water/IF97_Utilities.mo on lines 894 and 931 in the functions boilingcurve_p and dewcurve_p respectively, a property record (Common.IF97PhaseBoundaryProperties) is populated.\nFor both these functions, in the else clauses of the contained if statement, the cp, vt, and vp fields are left uninitialized.\nIsn't it necessary that (all parts of) declared outputs be set before returning?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1910\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 229,
            "date": "Jan 15, 2017",
            "title": "Proposal to hide non-graphical protected outer world objects",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1906",
            "poster_name": "#1906\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by hansolsson on 12 Feb 2016 10:11 UTC\nMany classes in Modelica.Mechanics.MultiBody e.g. Modelica.Mechanics.MultiBody.Joints.Revolute have a non-graphical protected outer world object, and indirectly in Modelica.Mechanics.MultiBody.Interfaces.PartialTwoFrames that have outer world that is used in derived classes in the same way.\nThis non-graphical model-component world is only used for getting parameter-values, but prevents using the joint as a base-class and adding \"world\" or simulating it on its own.\nIt might be good for some cases - but there is another possibility that we can use that avoids any local name clash.\nReplace:\nprotected\n  outer Modelica.Mechanics.MultiBody.World world;\n  Visualizers.Advanced.Shape cylinder(...) if world.enableAnimation and animation;\n\nby\nprotected\n  Hide hide; \n  Visualizers.Advanced.Shape cylinder(...) if   hide.world.enableAnimation and animation;\n\nwith:\n  model Hide\n    outer Modelica.Mechanics.MultiBody.World world;\n  end Hide;\n\nall components can now have graphical annotations - and obviously better names could be used, and Hide is a common class that should be reused.\nThe difference is that the class no longer has an \"protected outer world\".\nHaving some syntactic sugar to hide \"hide\" would be possible - as would be special rules for inheritance and overriding, but I think that would be too large changes for too little gain.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1906\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 230,
            "date": "Jan 15, 2017",
            "title": "Support for textures in ModelicaServices",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1904",
            "poster_name": "#1904\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by hansolsson on 8 Feb 2016 16:47 UTC\nIn several applications it is useful to have specific textures for the animation objects (I will only propose it for surfaces for now - but it could be generalized to some other shapes as well), and Modelon asked me to propose adding this to ModelicaServices.\nA simple use case is to visualize a simple road for vehicle simulations. For surfaces one could imagine handling this by having a multicolored surfaceCharacteristic that returns the texture-colors, but a more direct approach seems better in my opinion.\nFor that to work the following two parts are needed:\n\nSpecifying which texture to use (and default to no texture).\nMapping surface coordinates to texture coordinates.\n\nDymola supports specifying the texture as an URL (and also as a \"texture number 1-99\" - which seems too awkward to standardize).\nFor the texture itself it is a matter of extending Modelica.Utilities.Internal.PartialModelicaServices.Animation.PartialSurface with:\n  parameter String texture=\"\" \n    \"URI for texture - or empty if no texture\";\n\n--\nThe default texture coordinates are something like: (u/nu, v/nv).\nThe important non-trivial mapping is that the texture is shorter than the surface and thus replicated. What we currently have are two possibilities:\n\nThe texture is replicated nreplicate_u times in the u-direction and nreplicate_v times in the v-direction.\nThe length of the texture is given in meters in the u-direction (think of a small road-section duplicated many times).\n\nThe following parameters would support that:\n  parameter Boolean useLengthInMeters=false;\n  parameter Integer replicate_u=1 annotation(Dialog(enable=not useLengthInMeters));\n  parameter Integer replicate_v=1;\n  parameter Real lengthInMeters annotation(Dialog(enable= useLengthInMeters));\n\n--\nObviously the exact parameter names and parameters can be modified.\nGeneralizing this to other shapes (like spheres, boxes, ... - but not dxf-files) would be possible. However, I view it as lower priority and note that we would need to standardize texture coordinates in more detail (especially for shapes that have multiple \"surfaces\").\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1904\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 231,
            "date": "Jan 15, 2017",
            "title": "MSL 3.2.1 build 4 - Fluid pump efficiency",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1898",
            "poster_name": "#1898\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by victor.avila on 28 Jan 2016 08:56 UTC\nIn the model SimpleMSLpump.mo, one simple MSL pump and two boundaries were connected to each other.\nWhen I run the simulation in Dymola2016FD01, I got these statistics:\nTranslated Model\nConstants: 68 scalars\nFree parameters: 50 scalars\nParameter depending: 38 scalars\nOutputs: 2 scalars\nContinuous time states: 2 scalars\nTime-varying variables: 24 scalars\nAlias variables: 54 scalars\nNumber of mixed real/discrete systems of equations: 0\nSizes of linear systems of equations: { }\nSizes after manipulation of the linear systems: { }\nSizes of nonlinear systems of equations: {10}\nSizes after manipulation of the nonlinear systems: {2}\nNumber of numerical Jacobians: 1\nInitialization problem\nSizes of nonlinear systems of equations: {10}\nSizes after manipulation of the nonlinear systems: {2}\nNumber of numerical Jacobians: 1\nHow can the efficiency of the MSL pump be improved? I mean, getting rid of non-linear equations and jacobian.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1898\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 232,
            "date": "Jan 15, 2017",
            "title": "Desired mechanical components",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1873",
            "poster_name": "#1873\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by ahaumer on 26 Dec 2015 10:02 UTC\nTwo mechanical components are missing:\n\n a model of drive pulley\n a simpler model of a gearbox with constant efficiency\n\nThe Mechanics.Rotational.Components.LossyGear is not that easy to parameterize and use for beginners; this is easier with the proposed gearbox with constant efficiency.\nFurthermore, a drive pulley can be modelled using Mechanics.Rotational.Components.IdealRollingWheel; though connections and parameterization of cabin and counterweight of an elevator is not that easy.\nThe drive pulley can be modelled as an IdealDrivePulley or with constant efficiency (like the gearbox mentioned above).\nFor cabin and counterweight, the mass is modelled together with the gravitational force.\nSee the enclosed library which also contains an example of usage.\nElevator.mo\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1873\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \ud83d\udc4d\n1\n traversaro reacted with thumbs up emoji\n\n\n \nAll reactions\n\n\n\n\n\ud83d\udc4d\n1 reaction",
            "comments": []
        },
        {
            "index": 233,
            "date": "Jan 15, 2017",
            "title": "Modelica.Utilities.Strings.sort",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1862",
            "poster_name": "#1862\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by beutlich on 16 Dec 2015 22:14 UTC\nSince 38b630e the function Modelica.Utilities.Strings.sort contains the following note\n/* shellsort algorithm; should be improved later */\n\nThis simply is a reminder to either remove that old note or to actually do it (one day).\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1862\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 234,
            "date": "Jan 15, 2017",
            "title": "\"class\" still a valid Modelica class type to use?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1860",
            "poster_name": "#1860\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by dietmarw on 16 Dec 2015 12:05 UTC\nI remember there were earlier discussion(s) on the Modelica class type class that should be discouraged to be used. Unfortunately I could not find a specific ticket on this. Now I was wondering should one in future try to avoid using class in all circumstances or are there still valid use-cases.\nIf it should be avoided then the next question would be what class the documentation class with DocumentationClass=true annotation should be. model?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1860\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 235,
            "date": "Jan 15, 2017",
            "title": "M_OLine: default resistance/meter is too high",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1808",
            "poster_name": "#1808\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by Joe Riel on 26 Oct 2015 17:17 UTC\nThe default series resistance values for the Electrical.Analog.Lines.M_OLine component are supposed to be \"sensible\" for a 0.1 m microelectronic line, however, they appear to be several orders of magnitude too large (~ 0.5 MOhm/meter).\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1808\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 236,
            "date": "Jan 15, 2017",
            "title": "Possible unspecified/arbitrary initial system",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1773",
            "poster_name": "#1773\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by johan_ylikiiskila on 3 Sep 2015 11:46 UTC\nI am working with some Modelica.Magnetic models while using JModelica.org and discovered some strange behaviour in the model Modelica.Magnetic.FundamentalWave.Examples.BasicMachines.SMPM_Inverter_MultiPhase.\nI was trying to reproduce the behaviour of the regression data I found at https://svn.modelica.org/projects/RegressionTesting/ReferenceResults/MSL/trunk when i found that JModelica.org started at a different initial point. I chose to investigate further and foudn the following behaviour where I need help:\nThe Two states smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[1].Phi.re and smpmM.stator.electroMagneticConverter.singlePhaseElectroMagneticConverter[2].Phi.im are initialized differently. In the reference data, the imaginary part is initialized to zero while the JModelica.org result has the real part initialized to zero. I started looking though the code to find where the initial conditions are set and found no start modifiers for the two states so I assume some default start values are used?\nTo avoid the tool adding starting conditions, I tried adding a start modifier to the imaginary part I was able to make JModleica.org behave as the regression data.\nTo my question:\nIs the initial system underdetermined so the different tools choose different starting conditions to add or is the starting state of the model defined and the tool (JModelica.org) is unable to determine that?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1773\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 237,
            "date": "Jan 15, 2017",
            "title": "Modelica.Electrical.Machines.Losses.InductionMachines.PermanentMagnetLosses needs connection for stator current",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1752",
            "poster_name": "#1752\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by Joe Riel on 1 Aug 2015 20:50 UTC\nThe Modelica.Electrical.Machines.Losses.InductionMachines.PermanentMagnetLosses has an input, is[m].  That should be replaced with either a real connector, or an electrical port.  As it is, it is not possible to use this model in a GUI because there is no port for the stator current.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1752\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 238,
            "date": "Jan 15, 2017",
            "title": "Reverse flow in steady-state two-port models of Modelica.Fluid",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1742",
            "poster_name": "#1742\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by mwetter on 30 Jun 2015 23:37 UTC\nFrancesco, Ruediger\nI have a question regarding reverse flow treatment in Modelica.Fluid.\nFilip Jorissen (cc'ed) proposes the following for steady-state two-port models:\nibpsa/modelica-ibpsa#281\nHowever, Modelica.Fluid uses\n\u00a0 port_a.h_outflow\u00a0=\u00a0inStream(port_b.h_outflow);\n\u00a0\u00a0port_b.h_outflow\u00a0=\u00a0inStream(port_a.h_outflow);\n\nin various models which is what has been adopted for the Annex60 library (and various\nothers that depend on it). Is there a compelling reason for doing so, rather than using something like\n\u00a0 port_a.h_outflow = if not allowFlowReversal then Medium.h_default else inStream(port_b.h_outflow);\n\u00a0 port_b.h_outflow = \u00a0inStream(port_a.h_outflow);\n\nwhich gives in some cases smaller systems of equations.\nAll the best,\nMichael\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1742\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 239,
            "date": "Jan 15, 2017",
            "title": "Problematic models for regression test",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1741",
            "poster_name": "#1741\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by jfrenkel on 30 Jun 2015 08:30 UTC\nThe MSL includes the following models with problems for regression tests. Some of them only needs simple changes but some also seems to be more complicate to solve.\n\nList of problematic models\n\n Modelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed\n Modelica.Electrical.Analog.Examples.ChuaCircuit\n Modelica.Fluid.Examples.ControlledTankSystem.ControlledTanks\n Modelica.Fluid.Examples.Explanatory.MeasuringTemperature\n Modelica.Fluid.Examples.Explanatory.MomentumBalanceFittings\n Modelica.Fluid.Examples.Tanks.EmptyTanks\n Modelica.Mechanics.MultiBody.Examples.Elementary.DoublePendulumInitTip\n Mechanics.MultiBody.Examples.Elementary.PointGravityWithPointMasses2 (Reference trajectories of chaotic systems should be limited to a short interval\u00a0#3477)\n Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot (Initialization of bearingFriction.sa in RobotR3.oneAxis\u00a0#2941)\n Modelica.Mechanics.MultiBody.Examples.Systems.RobotR3.oneAxis (Initialization of bearingFriction.sa in RobotR3.oneAxis\u00a0#2941)\n Modelica.Mechanics.Rotational.Examples.HeatLosses\n Modelica.StateGraph.Examples.FirstExample_Variant2 (Increase the stop time of Modelica.StateGraph.Examples.FirstExample and variants\u00a0#3386)\n\n\nModelica.Mechanics.MultiBody.Examples.Systems.RobotR3.oneAxis\nModelica.Mechanics.MultiBody.Examples.Systems.RobotR3.fullRobot\nFor the initialization of the Model the following equation needs to be solved for axis.gear.bearingFriction.sa:\n        a_relfric/unitAngularAcceleration = if locked then 0 else if free then sa\n     else if startForward then sa - tau0_max/unitTorque else if \n    startBackward then sa + tau0_max/unitTorque else if pre(mode) ==\n    Forward then sa - tau0_max/unitTorque else sa + tau0_max/unitTorque;\n\nThe problem is that for initialization locked needs to be true and in this case sa is not incident in the equation.\nBecause of that the solution of sa is not clearly defined and the initial value of axis.motor.La.i, which is an continuous time state, is also not clearly defined.\n\nModelica.Mechanics.Rotational.Examples.HeatLosses\nThe model is not robust. During the event iteration at t=0.5304, 0.7126, and 0.918 s the variables oneWayClutch.startForward and oneWayClutch.locked switch between 0 and 1. If one of these discrete states is selected as valid, the results correspond to the reference results. If the other discrete state is chosen, the model sticks at the discontinuity. Dymola prints the message \"Fix point iteration did not converge at time : xxx.\" There might be a problem with Modelica.Mechanics.Rotational.Components.OneWayClutch.\n\nModelica.Mechanics.MultiBody.Examples.Elementary.DoublePendulumInitTip\nThe mechanical mechanism is initialized with an absolute position of the pendulum tip. The problem is that therefore two valid solutions for revolute1.phi and revolute2.phi exist. In addition the solution for s1 and s2 can be multiple with\n\ns1(k)=s1+2\u03c0k\ns2(k)=s2+2\u03c0k.\n\n\n\nThe start values of revolute1.phi and revolute2.phi are both Zero. Because of the multiple valid solutions the model is not suitable for validation.\n\nModelica.Electrical.Analog.Examples.ChuaCircuit\nChua's circuit is a chaotic model: small differences lead to large changes in the behavior. This behavior can be checked with the variable C1.v, when the model is simulated with varying settings for the tolerances (for example: 1e-4, 1e-5, 1e-6). The simulation results results differ heavily.\n\nModelica.Electrical.Analog.Examples.AmplifierWithOpAmpDetailed\nThe results depend heavily from the tolerance settings. Small tolerances lead to wrong behavior (at least in Dymola). opAmp.v_source cannot be larger than its operating voltage (constantVoltage.V). But this is (in Dymola) the case with tolerances smaller than 2e-7 (for example with 1e-7). The reason for that behavior might be an ill conditioned Jacobian matrix, which is indicated (in Dymola) when a tolerance of 1e-8 is selected.\n\nModelica.StateGraph.Examples.FirstExample_Variant2\nThe variable transition1.enableFire has at the stopTime an event if the time points of the events are exactly calculated. The problem is that this is not part of the reference result. Hence if a tool exactly calculates the event time points it found an event for transition1.enableFire at the end of the simulation. To avoid this it would be good to change the stopTime to a value which is not an event time point. (For example 5.1s).\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1741\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 240,
            "date": "Jan 15, 2017",
            "title": "Missing term in entropy of table-based incompressible medium",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1659",
            "poster_name": "#1659\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by jorrit on 10 Feb 2015 19:22 UTC\nIs there any particular reason for ignoring the pressure term in Modelica.Media.Incompressible.TableBased.s_T?\nThe calculation of enthalpy contains the pressure term , while it is not found in the entropy formula\n.\nCould it be possible to add a second entropy function like this\nfunction s_pT \"Compute specific entropy from pressure and temperature\"\n  extends Modelica.Icons.Function;\n  input AbsolutePressure p \"Pressure\";\n  input Temperature T \"Temperature\";\n  output SpecificEntropy s \"Specific entropy\";\nalgorithm \n  s := s0 + (if TinK then \n    Poly.integralValue(poly_Cp[1:npol],T, T0) else \n    Poly.integralValue(poly_Cp[1:npol],Cv.to_degC(T),Cv.to_degC(T0)))\n    + Modelica.Math.log(T/T0)*\n    Poly.evaluate(poly_Cp,if TinK then 0 else Modelica.Constants.T_zero) \n    + (if densityOfT then \n      ((p - reference_p)/Poly.evaluate(poly_rho, if TinK then T else Cv.to_degC(T))^2\n  *Poly.derivativeValue(poly_rho,if TinK then T else Cv.to_degC(T))) \n    else 0.0);\n annotation(Inline=true,smoothOrder=2);\nend s_T;\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1659\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 241,
            "date": "Jan 15, 2017",
            "title": "R134a media - differentiation problems",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1575",
            "poster_name": "#1575\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by johan.windahl on 26 Sep 2014 16:25 UTC\nHello,\nI noted that the implementation of Modelica.Media.R134a.R134a_ph.setState_phX is not using the same structure as in most of the other Modelica.Media setState_XXX implementations where the state is calculated in one line.\nImplementing the expression in one line has the advantage that a tool (Dymola) can differentiate even that the function itself do not specify an derivative annotation (which is not possible due to the record contains both reals and non-reals), see example below:\nmodel TestDifferentiation\n  // This example will not work with R134a due to the code in setState_phX is not written in one row\n  // but it will work with Medium=Modelica.Media.Water.WaterIF97_ph \n   package Medium=Modelica.Media.R134a.R134a_ph;\n   Medium.ThermodynamicState state;\n   Modelica.SIunits.Density d;\n   Modelica.SIunits.Mass m;\n   Modelica.SIunits.Pressure p(stateSelect=StateSelect.always);\n   Modelica.SIunits.SpecificInternalEnergy u;\n   Modelica.SIunits.SpecificEnthalpy h(stateSelect=StateSelect.always);\n   parameter Modelica.SIunits.Volume V=1;\n\nequation \n   m=V*d;\n   state=Medium.setState_phX(p,h,Medium.reference_X);\n   u=Medium.specificInternalEnergy(state);\n   d=Medium.density(state);\n   der(m)=time;\n   der(m*u)=time;\nend TestDifferentiation;\nIn general I see a problem with that the Modelica.Media structure relies on several undocumented special constructs that are needed by the tool for an efficient implementation.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1575\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 242,
            "date": "Jan 15, 2017",
            "title": "Unused models in Modelica/ModelicaTest library",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1539",
            "poster_name": "#1539\n            opened Jan 15, 2017 by\n            modelica-trac-importer",
            "description": "Reported by sjoelund.se on 14 Jul 2014 14:48 UTC\nThe attached list of classes are unused by any experiments in ModelicaTest and Modelica. Many of them are due to testAllFunctions not being an experiment, and the testing of functions not being part of models; but there are some more models in there.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1539\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 243,
            "date": "Jan 14, 2017",
            "title": "Remove or reduce to a minimum the usage of cardinality in MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1410",
            "poster_name": "#1410\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by hubertus on 5 Feb 2014 18:13 UTC\nCardinality has been deprecated for a while, but is used at too many places in the MSL. This should be fixed asap, because we should not give bad examples and use deprecated features. I will post a list as found by Dymola (as image, does not copy text).\nThe affected libraries are only Stategraph, MultiBody, and Fluid. This should be doable. I'll make Martin the first owner for MultiBody.\u00a0\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1410\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 244,
            "date": "Jan 14, 2017",
            "title": "Mathematical mean functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1400",
            "poster_name": "#1400\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by kdavies on 17 Jan 2014 00:39 UTC\nThis ticket is to add a package of mathematical mean functions to Modelica.Math.  They were necessary for a model library I created and maybe they are useful to others.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1400\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 245,
            "date": "Jan 14, 2017",
            "title": "How to handle changes to resource data shipped with the MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1339",
            "poster_name": "#1339\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by dietmarw on 28 Oct 2013 09:40 UTC\nCurrently when doing changes to classes within Modelica classes we can use (hopefully soon standardised) conversion script to automatically upgrade user models from one version of the MSL to the next one.\nNow when it comes to resource data we don't actually have a procedure in place to update user models/libraries to reflect changes to resource data they use and have changed (e.g., name, location). This issue came up when trying to fix #1299, which I simply could not. Not even for a new MSL version with conversion script. I wonder how this can (if at all possible) be solved.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1339\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 246,
            "date": "Jan 14, 2017",
            "title": "Models that deliberately do not simulate in ModelicaTest",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1292",
            "poster_name": "#1292\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 26 Sep 2013 15:03 UTC\nAn important part of the design of the MSL is to make sure that incorrect models cannot be simulated, and that end users can get meaningful feedback to spot the root cause of incorrect models and fix them. These features should also be tested.\nAs a consequence, there might be models in ModelicaTest that are designed not to produce any simulation result (e.g., overconstrained initialization problems with inconsistent initial conditions). A proper convention should be decided to mark those models, so that the outcome \"no simulation result\" is considered as the desired output.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1292\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 247,
            "date": "Jan 14, 2017",
            "title": "SimpleAir with negative specific enthalpy",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1225",
            "poster_name": "#1225\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by rfranke on 29 Jul 2013 06:34 UTC\nModelicaTest.Fluid.TestComponents.Vessels.TestInitialization shows a negative specific enthalpy of about\nvol1.medium.h = -5000 J/kg\n\nfor regular ambient conditons of 20 \u00b0C, 1 bar.\nChanging the medium model from Modelica.Media.Air.SimpleAir to Modelica.Media.Air.MoistAir, the specific enthalpy becomes about +45000 J/kg (the larger absolute value might be due to moisture).\nIs there a sign error or a wrong offset in Modelica.Media.Air.SimpleAir?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1225\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 248,
            "date": "Jan 14, 2017",
            "title": "Modelica XML formats",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1157",
            "poster_name": "#1157\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by toivo on 5 Jun 2013 09:47 UTC\nThere has been talk about creating a standardized XML format for Modelica models at the level of\n\nsource code\ninstance trees\nflattened models\nflattened and transformed models\nI presented work in progress on this at the 79th Modelica Design Meeting in Coventry, 3-5 June 2013. The goal is a unified schema for all four levels. The work so far includes preliminary schemas aimed to include core concepts used at all four levels. Further work includes\n\n\nAdding support for missing Modelica constructs\nConsider what is needed to support transformed models\nAdd extensions for\n\noptimal control/NMPC problems\nstate/parameter estimation problems\n\n\nIterate the design\n\nThe schemas and presentation presented at the meeting are available at https://svn.modelica.org/projects/ModelicaXML/trunk/schemas/ModelicaXML/ModelicaDesignCoventry_June2013/ and\nhttps://svn.modelica.org/projects/ModelicaXML/trunk/documents/presentations/.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1157\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 249,
            "date": "Jan 14, 2017",
            "title": "Ideas for a new table call",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1153",
            "poster_name": "#1153\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by otter on 1 Jun 2013 21:52 UTC\nThe contract for the development of an open source implementation of the Table blocks was very successful, and it seems useful to continue in this fashion. Therefore, I plan to discuss on Wed. at the Modelica Design Meeting a new call for further improved tables and this ticket should collect ideas for such a new call. Please provide your input.\nHere is a start:\n\n Support more extrapolation options, see ticket Interpolation options\u00a0#477.\n Support n-dimensional tables (linear or Akima-Spline interpolation in N dimensions). Several details need to be discussed, especially, whether ASCII format should be extended (or not available for ND tables) and in which form the interpolation problem should be formulated (there are several options).\n Support new interpolation type for 1D tables: monotonic splines according to: Fritsch F.N. and Carlson R.E. (1980): Monotone piecewise cubic interpolation. SIAM J. Numerc. Anal., Vol. 17, No. 2, April 1980, pp. 238-246. These special cubic splines guarantee that if the ordinate points are monotonic, then all interpolated points are monotonic as well (so no \"unwanted vibrations\").\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1153\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 250,
            "date": "Jan 14, 2017",
            "title": "Standardize annotation __Dymola_Commands",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1118",
            "poster_name": "#1118\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by otter on 21 May 2013 16:33 UTC\n__Dymola_Commands is a vendor specific annotation to execute Modelica functions in a scripting environment (e.g. defining default plots for a model or model conversion). This functionality should be \"somehow\" standardized and this annotation be replaced by a tool-independent functionality.\nThis annotation should currently not be removed, since otherwise existing features of MSL would be removed. How to proceed, needs to be discussed.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1118\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 251,
            "date": "Jan 14, 2017",
            "title": "Handling of tiny capacitances in Spice-like electronic circuits",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/1064",
            "poster_name": "#1064\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by clauss on 4 Apr 2013 11:30 UTC\nThe example Spice3BenchmarkDifferentialPair shows numerical difficulties which are to be seen in connection to very small capacitance values. If the solver tolerance is chosen too small simulation fails.\nThis problem has to be analysed thoroughly taking into account the Spice models as well as the Spice simulation algorithm which handles such constellations.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/1064\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 252,
            "date": "Jan 14, 2017",
            "title": "Media shall define type PressureDifference",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/967",
            "poster_name": "#967\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by rfranke on 17 Jan 2013 20:20 UTC\nFluid generally uses types defined in Media for the medium at hand, like:\nMedium.Temperature\nMedium.SpecificEnthalpy\nMedium.AbsolutePressure\nMedium.MassFlowRate\n\nThis enables the approprate definition of attributes like min, max, nominal, default together with a selected medium model. Moreover the medium decides on preferred states, like temperature vs. specific enthalpy.\nThere is one basic type missing in the medium model:\nMedium.PressureDifference\n\nFluid 3.2(.1) inconsistently uses Medium.AbsolutePressure, SI.AbsolutePressure or SI.Pressure instead. A consistent use of SI.PressureDifference would be feasible, but break with the advantages of using specific medium types, e.g. for the provision of appropriate nominal values.\nA medium model already defining preferred states and Medium.MassFlowRate, should also define Medium.PressureDifference.\nOne could even think of going one step further: why not defining a new medium model with appropriate type attributes for an application at hand, instead of going through the Advanced tabs of all component models?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/967\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 253,
            "date": "Jan 14, 2017",
            "title": "Fluid names for density and viscosity",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/966",
            "poster_name": "#966\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by rfranke on 17 Jan 2013 19:39 UTC\nModelica.Fluid generally uses the names rho for density and mu for dynamic viscosity. See e.g.:\nModelica.Fluid.Machines.Pump\nModelica.Fluid.Pipes.BaseClasses.FlowModels\nModelica.Fluid.Fittings.BaseClasses.massFlowRate_dp_and_Re\n\nThe models\nModelica.Fluid.Interfaces.PartialPressureLoss\nModelica.Fluid.Fittings.SimpleGenericOrifice\n\ninternally use the names d and eta instead. These alternative names are not used in Fluid because:\n\neta is reserved for efficiency (see e.g. Pump)\nd is ultimately short, complicating maintenance, and might be messed up with diameter\n\nThe uses if d and eta for density and dynamic viscosity shall be replaced with rho and mu, respectively.\nEven though these names are only used internally, a renaming in MSL3.2.1 might break compatibility, e.g. for models extending from Modelica.Fluid.Interfaces.PartialPressureLoss.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/966\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 254,
            "date": "Jan 14, 2017",
            "title": "Vendor Neutral Modelica Annotation Prototypes in MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/849",
            "poster_name": "#849\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by peter.fritzson on 1 Oct 2012 15:17 UTC\nRegarding new annotations,\nThere should a neutral mechanism where vendor names do not appear in MSL. This can e.g. be used for new annotations in the prototype\nstage, for prototype version of the annotations.\nProposal:\nIntroduce  something called AnnotationPrototype__AnnotationName\nAn annotation prototype can be introduced in MSL, provided that:\n\n\nName and Documentation about the annotation is registered at modelica.org somewhere (or the SVN). The purpose, motivation, implementation hints.\n\n\nThere should be a contact person for the Annotation Prototype proposal, and also a library officer who has done some preliminary checking of it.\n\n\nAs usual, annotations should not influence the simulation behavior, only tool appearance (graphical), and maybe performance.\nThere is a discussion if such annotation prototypes should be allowed in MSL, since the language and library standard need to become more stable in the future.\nThe annotation prototypes could be coupled to the innovation process. The question is whether they should be allowed in released versions of MSL or only in prototype versions of MSL?\nAnyway, anotation prototypes is a step forward compared to the current situation when we have vendor specific annotations with vendor names in MSL.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/849\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 255,
            "date": "Jan 14, 2017",
            "title": "Default parameters in Modelica.Electrical.Spice3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/825",
            "poster_name": "#825\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by alessandro.picarelli on 18 Sep 2012 09:50 UTC\nModelica.Electrical.Spice3.Semiconductors.M_NMOS default model card parameters such as PHI have a default parameter of -1e40V whereas the comment says the default is 0.6V. This is a massive difference in value as per VTO, KP, GAMMA, RD, RS, CBD, CBS, TOX, NSUB, TNOM. Could the default values be brought to reflect those stated in the relative comments to ensure a more robust default parameterisation of these and other Spice3 components.\nA list of equivalent parameters to those in LTSpice would also be beneficial.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/825\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 256,
            "date": "Jan 14, 2017",
            "title": "Duplicate definitions of basic electric elements present in Spice3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/814",
            "poster_name": "#814\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by dietmarw on 11 Sep 2012 16:54 UTC\nI noticed that at least these basic elements are basically duplicates of the ones provided by\nModelica.Electrical.Analog.Basic library:\n\nModelica.Electrical.Spice3.Basic.Ground\n\n-> Modelica.Electrical.Analog.Basic.Ground\n\n\nModelica.Electrical.Spice3.Basic.R_Resistor\n\n-> Modelica.Electrical.Analog.Basic.Resistor\n\n\nModelica.Electrical.Spice3.Basic.L_Inductor\n\n-> Modelica.Electrical.Analog.Basic.Inductor\n\n\nModelica.Electrical.Spice3.Basic.C_Capacitor\n\n-> Modelica.Electrical.Analog.Basic.Capacitor\n\n\n\nMaybe I'm not seeing the difference but if not those classes should be removed and references updated in the MSL and a conversion script given for used libraries.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/814\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 257,
            "date": "Jan 14, 2017",
            "title": "Unified framework for regularized functions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/742",
            "poster_name": "#742\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 2 Jun 2008 21:40 UTC\nThe Modelica_Fluid library currently contains several functions (regRoot, regRoot2, etc.) which aim at approximating non-smooth functions with smooth approximation.\nAll these functions could be rewritten based on the theory of distribution, which might also help writing their derivatives.\nGoal: develop a stand-alone package with examples, for later inclusion within Modelica_Fluid and possibly within Modelica.Math.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/742\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 258,
            "date": "Jan 14, 2017",
            "title": "Create a simple turbine model",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/740",
            "poster_name": "#740\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by msielemann on 26 May 2009 14:05 UTC\nDiscussed at the Design Meeting 62 in Lund:\nTicket #11 requires a turbine model, which has to be implemented in Modelica_Fluid. The Stodola turbine model implemented by Ruediger Franke in PowerFluid may be used as starting point.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/740\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 259,
            "date": "Jan 14, 2017",
            "title": "Analyze semantics of stream connectors and inStream() for separate compilation",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/738",
            "poster_name": "#738\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 6 Mar 2009 08:23 UTC\nSeparate compilation of sub-models can be a useful means to handle very large models in an efficient way. The proposed semantics of stream connectors and inStream() operator require knowledge of the structure of the model itself \"on the other side of the connection\" and this is not possible if separate compilation is performed.\nOne possible solution is to only restrict connections at the boundaries of separately compiled models to the one-to-one case, so that the semantics of inStream() is just the stream variable on the other side.\nA more thorough analysis is required\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/738\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 260,
            "date": "Jan 14, 2017",
            "title": "Reference temperature in resistors",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/694",
            "poster_name": "#694\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by m.ceraolo on 2 Feb 2012 08:04 UTC\nIn Modelica.Electrical.Analog.Basic.Resistor the resitor temperature T_ref is set as default to 300.15 kelvin.\nHowever in the ConditionalHeatPort it uses, the HeatPort temperature in case HeatPort=false, is set to 293.15 kelvin.\nAccording to my tests, this never causes troubles; but it is still a minor glitch.\nIs it possibile to choose one value (I suggest 293.15) for both variables?\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/694\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 261,
            "date": "Jan 14, 2017",
            "title": "Different icon sizes of Block connectors (input vs output)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/671",
            "poster_name": "#671\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Modified by dietmarw on 20 Dec 2011 11:46 UTC\nThe input icons in Blocks.Interfaces are much larger than the output icons. The reason for this according to Martin Otter is to resemble how it looks like in Simulink, where the output connector is removed when the connection is made.\nAlternative solutions\ncopied from email-conversation- Johan Andreasson):\nA bit off the original topic: I guess an alternative way to achieve Simulink look-alike would be to have small icons for both input and output, and have the connection line as arrow instead. This would make scaling when mixing smaller and larger blocks much nicer (especially when the block are not scaled proportionally in x and y). Maybe it could be similar to how (at least) Dymola let you affect the thickness and color of the connection line. The directions would then have to be handled.\n(copied from email-conversation- Martin Otter):\n\nA general annoying issue is that connector sizes are changed, if the icon size is changed. This holds for all types of connectors. This is a Modelica issue, and one would need to improve the graphical annotations, so that a point in the connector is specially marked and the relative relation to the unscaled coordinate system is defined. When the size of the icon is changed, then the size of the connector is not changed, and only the specially marked point in the connector is appropriately moved (and therefore the connector icon).\nHow to get a signal arrow? Whether the proposal from Johan works needs to be evaluated. Unfortunately, arrows are not precisely defined in the Modelica graphical annotations. It is therefore a tool issue how this looks like. When I tested this feature (having a line with an arrow) the last time in Dymola, it was still not practical to use, because depending on the environment, the arrow was either too small (in diagram layer) or too large (in generated html documentation). Therefore, I never use graphical annotation arrows. When needed, I construct them by myself with polylines. Even if this would work in Dymola, one cannot be sure that this works in other tools reasonably. Therefore, in order to improve this situation, one should also improve the graphical annotations (and define arrows precisely).\n\n(copied from email-conversation - Mike Tiller)\nFor the first point, one could define two annotations for a connector.  One representing the unconnected appearance and the other representing its appearance if there is at least one connection made to it.  It seems like this could be generally useful (particularly for connectors that MUST be connected) and it would be mostly backward compatible as well.\n\nReported by petar on 20 Dec 2011 11:42 UTC\nThe input icons in Blocks.Interfaces are much larger than the output icons. The reason for this according to Martin Otter is to resemble how it looks like in Matlab, where the output connector is removed when the connection is made.\nAlternative solutions\ncopied from email-conversation- Johan Andreasson):\nA bit off the original topic: I guess an alternative way to achieve Simulink look-alike would be to have small icons for both input and output, and have the connection line as arrow instead. This would make scaling when mixing smaller and larger blocks much nicer (especially when the block are not scaled proportionally in x and y). Maybe it could be similar to how (at least) Dymola let you affect the thickness and color of the connection line. The directions would then have to be handled.\n(copied from email-conversation- Martin Otter):\n\nA general annoying issue is that connector sizes are changed, if the icon size is changed. This holds for all types of connectors. This is a Modelica issue, and one would need to improve the graphical annotations, so that a point in the connector is specially marked and the relative relation to the unscaled coordinate system is defined. When the size of the icon is changed, then the size of the connector is not changed, and only the specially marked point in the connector is appropriately moved (and therefore the connector icon).\nHow to get a signal arrow? Whether the proposal from Johan works needs to be evaluated. Unfortunately, arrows are not precisely defined in the Modelica graphical annotations. It is therefore a tool issue how this looks like. When I tested this feature (having a line with an arrow) the last time in Dymola, it was still not practical to use, because depending on the environment, the arrow was either too small (in diagram layer) or too large (in generated html documentation). Therefore, I never use graphical annotation arrows. When needed, I construct them by myself with polylines. Even if this would work in Dymola, one cannot be sure that this works in other tools reasonably. Therefore, in order to improve this situation, one should also improve the graphical annotations (and define arrows precisely).\n\n(copied from email-conversation - Mike Tiller)\nFor the first point, one could define two annotations for a connector.  One representing the unconnected appearance and the other representing its appearance if there is at least one connection made to it.  It seems like this could be generally useful (particularly for connectors that MUST be connected) and it would be mostly backward compatible as well.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/671\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 262,
            "date": "Jan 14, 2017",
            "title": "Homotopy for Modelica.Fluid---Tests and examples",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/669",
            "poster_name": "#669\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by msielemann on 15 Dec 2011 15:40 UTC\nIn order to implement homotopy in Modelica Fluid, tests shall be made using MSL from branch\nhttps://svn.modelica.org/projects/Modelica/branches/development/Homotopy3.3-dev\nand the changes implemented according to tickets #665, #666, #667, #668.\nThis shall be done along the ideas presented in\nhttps://www.modelica.org/events/modelica2011/Proceedings/pages/papers/04_2_ID_131_a_fv.pdf\nPlease include test models in ModelicaTest.Fluid and derive a number of examples for inclusion in Modelica.Fluid\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/669\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 263,
            "date": "Jan 14, 2017",
            "title": "Homotopy for Modelica.Fluid---Wall friction in fitting models",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/668",
            "poster_name": "#668\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by msielemann on 15 Dec 2011 15:37 UTC\nIn order to implement homotopy in Modelica Fluid, the fitting models shall be modified on the branch\nhttps://svn.modelica.org/projects/Modelica/branches/development/Homotopy3.3-dev\nThis shall be done along the ideas presented in\nhttps://www.modelica.org/events/modelica2011/Proceedings/pages/papers/04_2_ID_131_a_fv.pdf\nPlease make the modifications and implement two or more test models in ModelicaTest.Fluid\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/668\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 264,
            "date": "Jan 14, 2017",
            "title": "Homotopy for Modelica.Fluid---Wall friction in valve models",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/667",
            "poster_name": "#667\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by msielemann on 15 Dec 2011 15:35 UTC\nIn order to implement homotopy in Modelica Fluid, the valve models shall be modified on the branch\nhttps://svn.modelica.org/projects/Modelica/branches/development/Homotopy3.3-dev\nThis shall be done along the ideas presented in\nhttps://www.modelica.org/events/modelica2011/Proceedings/pages/papers/04_2_ID_131_a_fv.pdf\nPlease make the modifications and implement two or more test models in ModelicaTest.Fluid\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/667\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 265,
            "date": "Jan 14, 2017",
            "title": "Homotopy for Modelica.Fluid---Heat transfer in volume models",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/666",
            "poster_name": "#666\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by msielemann on 15 Dec 2011 14:17 UTC\nIn order to implement homotopy in Modelica Fluid, the volume models shall be modified on the branch\nhttps://svn.modelica.org/projects/Modelica/branches/development/Homotopy3.3-dev\nThis shall be done along the ideas presented in\nhttps://www.modelica.org/events/modelica2011/Proceedings/pages/papers/04_2_ID_131_a_fv.pdf\nPlease make the modifications and implement two or more test models in ModelicaTest.Fluid.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/666\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 266,
            "date": "Jan 14, 2017",
            "title": "Homotopy for Modelica.Fluid---Wall friction in pipe models",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/665",
            "poster_name": "#665\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by msielemann on 15 Dec 2011 14:13 UTC\nIn order to implement homotopy in Modelica Fluid, the pipe models shall be modified on the branch\nhttps://svn.modelica.org/projects/Modelica/branches/development/Homotopy3.3-dev\nThis shall be done along the ideas presented in\nhttps://www.modelica.org/events/modelica2011/Proceedings/pages/papers/04_2_ID_131_a_fv.pdf\nPlease make the modifications and implement two or more test models in ModelicaTest.Fluid\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/665\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 267,
            "date": "Jan 14, 2017",
            "title": "Rename models that do not follow the naming convention",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/609",
            "poster_name": "#609\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by dietmarw on 14 Sep 2011 14:05 UTC\nLooking at the MSL there exist several models that don't quite follow the naming convention as pointed out in Modelica.UsersGuide.Conventions.ModelicaCode.Naming\nSo far I found that the following models need to be corrected once a new version with conversion script will be released:\nModelica.Blocks.Interfaces.partial*\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/609\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 268,
            "date": "Jan 14, 2017",
            "title": "Differential model missing in MSL",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/506",
            "poster_name": "#506\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by frank.rettig on 17 Mar 2011 15:51 UTC\nIt would be nice to have a differential in the \"Modelica.Mechanics.Rotational\" library.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/506\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 269,
            "date": "Jan 14, 2017",
            "title": "Add PlanarMultiBody to MSL?",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/464",
            "poster_name": "#464\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by Volker Beuter on 2 Dec 2010 16:26 UTC\nThe PlanarMultiBody package developed at DLR-RM and already presented at the Modelica2008 conference was intended to be included into the MSL some day. This could be done with the 3.3 release. As soon as I have some Dymola 7 license again I may do some testing.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/464\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 270,
            "date": "Jan 14, 2017",
            "title": "Fix and add unit definitions in Spice3",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/414",
            "poster_name": "#414\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Modified by dietmarw on 28 Sep 2010 11:36 UTC\nThe Spice3 library still has a number of unit-less variables representing physical quantities. Some quantities have wrong units defined. This should be improved by fixing the existing units and adding unit definitions to all physical quantities.\nOriginal description:\n\n,,When doing a check of Modelica.Electrical.Spice3 I'm getting about 217 Warnings about incompatible units. This is normally an indicator for ill-designed equations and parameters and should be avoided and fixed if possible.,,\n\n\nReported by dietmarw on 20 Sep 2010 08:58 UTC\nWhen doing a check of Modelica.Electrical.Spice3 I'm getting about 217 Warnings about incompatible units. This is normally an indicator for ill-designed equations and parameters and should be avoided and fixed if possible.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/414\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 271,
            "date": "Jan 14, 2017",
            "title": "Move conditional heat port models to Modelica.Thermal.HeatTransfer.Interfaces",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/359",
            "poster_name": "#359\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by christiankral on 21 Apr 2010 15:44 UTC\nThe conditional heat port models Modelica.Electrical.Analog.Interfaces.ConditionalHeatPort and Modelica.Electrical.MultiPhase.Interfaces.ConditionalHeatPort are not specific for electrical systems. Since these conditional heat port models can be applied to any model with one or more conditional heatports, the location in the electrical domain is not correct. Therefore, both conditional heat port models shall be moved to Modelica.Thermal.HeatTransfer.Interfaces when the next conversion script is due.\nExample: Conditional heat port models shall also be applied in Modelica.Magnetic.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/359\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 272,
            "date": "Jan 14, 2017",
            "title": "Integrate pipe pressure loss and heat transfer correlations",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/344",
            "poster_name": "#344\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by kproelss on 28 Mar 2010 19:46 UTC\nPressure drop and heat transfer correlations for turbulent and laminar pipe flow are added to Modelica.Fluid in MSL 3.2 with the new package Dissipation. In order to make them available as choices in the pipe models already existing in Modelica.Fluid several changes have to be made to these models. The main challenges are:\n\nCurrent correlations combine pressure changes due to friction and to static head, while the dissipation correlations only cover friction losses.\nAll pressure drop or heat transfer choices require the same variable input (replaceable functions) or a common set of variable modifications (replaceable models).\nAll pressure drop or heat transfer choices require the same parameter input (replaceable functions) or parameter modifications are applied to the redeclared model (and disappear if another choice is made)\nHow can non-matching choice combinations be avoided, e.g. a two-phase pressure drop correlation and one-phase medium package?\nRobustness at flow reversal\nRedundant correlation choices must be avoided, while still maintaining backwards compatibility or at least conversion to equivalent physical behavior.\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/344\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 273,
            "date": "Jan 14, 2017",
            "title": "Integrate PressureLoss components from Dissipation library",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/342",
            "poster_name": "#342\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by kproelss on 28 Mar 2010 19:11 UTC\nPressure drop component models from the Dissipation library which make use of the library's collection of pressure drop correlations were decided to be integrated into Modelica.Fluid.Fittings release version 3.2 at the 66th Design Meeting, as complete top level component models.\nThe component models to be included need to fulfill the following requirements:\n\nA component model with an equivalent behavior must not exist among the already present components in Fluid.Fittings. Since MSL 3.2 will not be released with a conversion script. Non-backwards compatible changes such as removing such an obsolete component will not be permitted and are subject to a later release.\nAll functions in Fluid.Dissipation, including those that are used in the component models, are called with two records as inputs. One contains the time-constant parameters, the other time-varying variables. At least the entire variable record needs to be set within the component model (such that the user does not need to set variable modifiers when using the component). It would be more convenient also to propagate all required parameter inputs to the component top level.\nAs a component inside the Fittings package it actually has to belong to this category.\n\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/342\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 274,
            "date": "Jan 14, 2017",
            "title": "Conservation of kinetic energy in valves and fittings",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/329",
            "poster_name": "#329\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by rfranke on 12 Jan 2009 06:47 UTC\nPipes.BaseClasses.PartialTwoPortFlow (former distributed pipes) and the main docu in UsersGuide.ComponentDefinition.BalanceEquations contain a notice about not conserved energy if changing fluid velocities are neglected.\nShould not a model like Modelica_Fluid.Valves.ValveVaporizing,\nValve for possibly vaporizing (almost) incompressible fluids, accounts for choked flow conditions,\n\naccount for the impact of the different density of vapour on the energy balance?\nCurrently the Valves.BaseClasses.PartialValve formulates an isenthalpic state transformation. This assumptions appears reasonable for ValveIncompressible.\nNote that, without further extending the number of parameters, ValveVaporizing and ValveCompressible know the metric flow coefficient Av, which should be a good value for the cross flow areas at inlet and outlet.\nWhy not extending the energy balance to account for \"choked flow conditions\"? Also Fittings.SuddenExpansion sounds like a bad model in this regard.\nAlternatively, at least the docus should explain why energy is not conserved.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/329\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 275,
            "date": "Jan 14, 2017",
            "title": "Test cases with inner/outer connections",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/328",
            "poster_name": "#328\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 2 Jun 2008 23:25 UTC\nPrepare simple test cases with inner/outer connections, for debugging of tool support.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/328\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 276,
            "date": "Jan 14, 2017",
            "title": "Example cases: heat exchangers",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/327",
            "poster_name": "#327\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 2 Jun 2008 22:06 UTC\nDevelop example cases for different heat exchangers.\nGeometry: shell&tube, plate, others (co-current, counter-current, cross-flow)\nFluids: gas-gas, gas-liquid, liquid-liquid.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/327\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 277,
            "date": "Jan 14, 2017",
            "title": "Example cases: steam generator",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/326",
            "poster_name": "#326\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 2 Jun 2008 22:02 UTC\nDevelop example cases of steam generators with feedpumps, evaporator, superheater (1 level of pressure).\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/326\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 278,
            "date": "Jan 14, 2017",
            "title": "Example cases: steam turbine system",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/325",
            "poster_name": "#325\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 2 Jun 2008 22:00 UTC\nDevelop example cases of realistic steam turbine systems, including bypass circuits and possibly start-up/shut-down operations.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/325\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 279,
            "date": "Jan 14, 2017",
            "title": "Example cases: closed circuits with pump and accumulator",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/324",
            "poster_name": "#324\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Modified by fcasella on 2 Jun 2008 22:09 UTC\nDevelop example cases of closed circuits with pump and accumulator, using compressible and incompressible fluids.\nAlso a case with a reciprocating pump, using piston models and valves with check flow behaviour could be interesting.\n\nReported by fcasella on 2 Jun 2008 21:55 UTC\nDevelop example cases of closed circuits with pump and accumulator, using compressible and incompressible fluids\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/324\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 280,
            "date": "Jan 14, 2017",
            "title": "Conservation of energy in Modelica.Fluid (kinetic term)",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/322",
            "poster_name": "#322\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by fcasella on 23 Jan 2009 00:23 UTC\nA few general considerations about the energy balance equations in Modelica_Fluid\nThe energy balance equation for 1D systems includes a term\nd/dx(m_flow*(e + p/rho + u2/2 + gz))\nwhich accounts for internal energy, pressure energy, kinetic energy, and potential energy. Let's consider for simplicity the equations of components with no storage and no heat or work added from the outside (i.e. PartialTwoPortTransport): the balance equation is then\nd/dx(m_flow*(h + u2/2 + gz)) = 0\nand m_flow is uniform from inlet to outlet (due to the mass balance equation). The equation can thus be integrated from port_a to port_b, giving\nh_a + u_a2/2 + gz_a = h_b + u_b2/2 + gz_b\nIn many applications where there is significant heat transfer, the mechanical terms gz and u2/2 are negligible, compared to the changes in h due to heat transfer, so the equation is approximated as\nh_a = h_b\nwhich then becomes\nport_a.h_outflow = inStream(port_b.h_outflow);\nport_b.h_outflow = inStream(port_a.h_outflow);\n\nHowever, there are cases where this terms might be significant (e.g. nozzles, vertical pipes), so it is interesting to check whether it would be possible to consider them in Modelica_Fluid without too much overhead.\nThe gravity term is no big deal, as it gives a constant contribution. Furthermore, if z_a-z_b = 0, it is easy to get rid of it by symbolic manipulation. So, we agreed to write these equations in PartialTwoPortTransport:\nport_a.h_outflow = inStream(port_b.h_outflow) + g*(z_b-z_a); \nport_b.h_outflow = inStream(port_a.h_outflow) + g*(z_a-z_b);\n\nThe kinetic term is much more problematic, as it depends on the velocity, and thus on density, mass flow rate, and cross section at the port. The cross section might not be available in many cases (and usually not relevant either). Furthermore, the dependence on the mass flow rate would break the nice property of propagation of inStream enthalpy in series-connected flow models, by introducing nonlinear implicit equations for the stream enthalpy involving the mass flow rates. Finally, computing the velocity at both ports requires to always compute the port density, which might be not needed otherwise.  Therefore, writing:\nport_a.h_outflow = inStream(port_b.h_outflow) + g*(z_b-z_a) +\n                   (u_b^2-u_a^2)/2;\nport_b.h_outflow = inStream(port_a.h_outflow) + g*(z_a-z_b) +\n                   (u_a^2-u_b^2)/2;\n\nmight not be convenient.\nOne possible solution is to define h_outflow on the ports as the so-called total enthalpy, or stagnation enthalpy, i.e. h + u2/2. In this way, the equations\nport_a.h_outflow = inStream(port_b.h_outflow) + g*(z_b-z_a);\nport_b.h_outflow = inStream(port_a.h_outflow) + g*(z_a-z_b);\n\nare exact, and (total) enthalpy is propagated through chains of flow components without generating implicit nonlinear equations involving the mass flow rate.\nFor all the applications where u2/2 is negligible, one could use h_outflow directly to compute the thermodynamic properties of the fluid, thus ignoring the small difference between enthalpy and total enthalpy. In those special cases where the velocity is significant (e.g. a nozzle), it is possible to write\nh_total = inStream(port.h_outflow);\nstate = Medium.setState_ph(port.p, h_total - u^2/2);\n\nOf course this additional term could be made optional, so the additional numerical complication due to more coupled nonlinear algebraic equations is only included when necessary.\nThe advantage of this solution is that, while allowing exact results, the added complication is local to those few components where the velocity is relevant. Furthermore, the energy balance is always correct, while the approximation would just involve the computation of the thermodynamic state corresponding to a certain enthalpy.\nThe changes to the existing library are minor: a change to the description of the connector variables, and a few changes on those components which might have a significant variation of velocity between inlet and outlet.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/322\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 281,
            "date": "Jan 14, 2017",
            "title": "Refine temperature dependency modelling",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/287",
            "poster_name": "#287\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by AHaumer on 12 Feb 2010 18:29 UTC\nThe following can only be done when a conversion script is allowed, and holds not only for Electrical but also for Modelica.Thermal.HeatTransfer.Sources.Fixed/PrescribedHeatFlow:\n\n\nWe should choose a consistent default / start value for all reference temperatures of 20 degC = 293.15 K (27 degC = 300.15 K has no meaning to me).\n\n\nWe should define the LinearTemperatureCoefficient alpha consistently at 20 degC = 293.15 K (not at reference temperature).\n\n\nSuch a material coefficient can be found in material databases defined at 20 degC, not at other temperatures. I have attached a document that shows how alpha can be converted from 20 degC to an other reference temperature.\nLinearTemperatureDependency.pdf\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/287\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 282,
            "date": "Jan 14, 2017",
            "title": "Improve the whole MSL to follow the naming conventions",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/283",
            "poster_name": "#283\n            opened Jan 14, 2017 by\n            modelica-trac-importer",
            "description": "Reported by AHaumer on 12 Feb 2010 14:34 UTC\nWhen a conversion script is allowed, some naming styles should be adapated:\nNaming of functions (starting with a lower case letter)\nNaming of connectors without '_' (e.g. Flange_a -> FlangeA)\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/283\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 283,
            "date": "Jan 13, 2017",
            "title": "Have a unified concept/connector for electrical power systems",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/241",
            "poster_name": "#241\n            opened Jan 13, 2017 by\n            modelica-trac-importer",
            "description": "Reported by dietmarw on 19 Nov 2009 15:58 UTC\nFrom [milestone:Design63]:\nDiscussion to model electrical power systems. R\u00fcdiger Franke presented the library PowerFlow. Discussion about the differences between PowerFlow, SPOT and Modelica.Electrical. It is planned to work on a unified concept/connector design at the next (64th) design meeting based on experience with PowerFlow and SPOT.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/241\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 284,
            "date": "Jan 13, 2017",
            "title": "3-phase transformer transforms DC-signals",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/143",
            "poster_name": "#143\n            opened Jan 13, 2017 by\n            modelica-trac-importer",
            "description": "Reported by AHaumer on 23 Jan 2009 13:51 UTC\nModelica.Electrical.Machines.BasicMachines.Transformers transform also DC-signals; no need for testing: the equations are equivalent to Modelica.Electrical.Analog.Basic.Transformer (see Ticket #142).\nI do not know a solution for an ideal transformer (without magnetization current) to avoid this. At least a warning should be noted in the documentation.\nHowever, I plan to redesign the technical transformers Modelica.Electrical.Machines.BasicMachines.Transformers, including a good estimation of the magnetizing current. To do this, parameterization of these models has to be changed - unfortunately not backward-compatible, and I'm unsure how to handle this in a conversion script.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/143\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 285,
            "date": "Jan 13, 2017",
            "title": "Update of the Modelica Tutorial",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/106",
            "poster_name": "#106\n            opened Jan 13, 2017 by\n            modelica-trac-importer",
            "description": "Reported by dietmarw on 11 Sep 2008 16:10 UTC\nThe current version of the Modelica Tutorial is still version 1.4 and in desperate need of an update.\nAny volunteers? I guess Peter Fritzson will be happy to provide the document sources.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/106\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 286,
            "date": "Jan 13, 2017",
            "title": "Continue discussion on library structure",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/89",
            "poster_name": "#89\n            opened Jan 13, 2017 by\n            modelica-trac-importer",
            "description": "Modified by dietmarw on 3 Jul 2008 17:49 UTC\nI file this ticket to get back to the library structure discussion started at the 56th Modelica Design Meeting in March 2008, in Bielefeld.\nThe first thing I did was transforming the [attachment\ud83c\udfab89:NotesOnLibraryStructure.txt notes taken by Michael Tiller] into a  nice wikipage wiki:Documents/NotesOnLibraryStructure ([wiki:Documents/NotesOnLibraryStructure?format=pdf click here] to download the generated pdf-version of that page).\nI hope I got the indentation right...if not or if you like to enhance that document then feel free to do so but add also a comment about the changes to this ticket.\nSo now it seems that the discussion was not continued since then. By going through the notes right at the end ([wiki:Documents/NotesOnLibraryStructure#notes link to that section]) I think the three remaining issues are:\nQuote from notes: ::\n\nMike raised the issue and Modelon seemed to agree that management of packages is complicated by the fact that must be \"flattened at the top\".  Martin will send out the minutes of the meeting where this was previously discussed.\nThere was a discussion about what constraining classes should be.\nOne issue that Mike brought up would be cases where multiple behaviors use the same data.\n\nSo for the first item it would be nice if Martin can find those minutes and maybe attach them to this ticket.\n\nReported by dietmarw on 3 Jul 2008 17:46 UTC\nI file this ticket to get back to the library structure discussion started at the 56th Modelica Design Meeting in March 2008, in Bielefeld.\nThe first thing I did was transforming the [attachement\ud83c\udfab89:NotesOnLibraryStructure.txt notes taken by Michael Tiller] into a  nice wikipage wiki:Documents/NotesOnLibraryStructure ([wiki:Documents/NotesOnLibraryStructure?format=pdf click here] to download the generated pdf-version of that page).\nI hope I got the indentation right...if not or if you like to enhance that document then feel free to do so but add also a comment about the changes to this ticket.\nSo now it seems that the discussion was not continued since then. By going through the notes right at the end ([wiki:Documents/NotesOnLibraryStructure#notes link to that section]) I think the three remaining issues are:\nQuote from notes: ::\n\nMike raised the issue and Modelon seemed to agree that management of packages is complicated by the fact that must be \"flattened at the top\".  Martin will send out the minutes of the meeting where this was previously discussed.\nThere was a discussion about what constraining classes should be.\nOne issue that Mike brought up would be cases where multiple behaviors use the same data.\n\nSo for the first item it would be nice if Martin can find those minutes and maybe attach them to this ticket.\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/89\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 287,
            "date": "Jan 13, 2017",
            "title": "Re-design and simplification of Modelica.Media",
            "url": "https://github.com/modelica/ModelicaStandardLibrary/issues/85",
            "poster_name": "#85\n            opened Jan 13, 2017 by\n            modelica-trac-importer",
            "description": "Reported by hubertus on 30 May 2008 07:44 UTC\nThe discussion in the Fluid group and experiences at Modelon have shown a few shortcomings in the Media library. Discussions in the group have resulted in a suggestion for improvement that is documented in the attached file. Hubertus will start a branch, Siemens and TU-Braunschweig offered to help.\nModelicaMediaProblems.docx\n\nMigrated-From: https://trac.modelica.org/Modelica/ticket/85\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        }
    ],
    [
        {
            "index": 0,
            "date": "Jan 13, 2023",
            "title": "FromCanUtilsLog.py doesnt handle lines with no data after the arb id",
            "url": "https://github.com/brent-stone/CAN_Reverse_Engineering/issues/14",
            "poster_name": "#14\n            opened Jan 13, 2023 by\n            350SBC",
            "description": "FromCanUtilsLog.py fails to reformat lines without data after the arbid\nExample\n(1672682646.133427) can0 0E0014F2#\nThe Holley terminator x for some reason will create messages with no data like this .\nNot to be confused with a line with 0's\nexample\n(1672682697.717538) can0 1E3754F2#0000000000000000\nI am just going to clean my log file before processing with the this awesome piece of software.\nhere is the cli example of how i will do it\ncat candump-2023-01-02_110400.log | sed '/#$/d'  > candump-2023-01-02_110400_noBlanks.log\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 1,
            "date": "Dec 16, 2021",
            "title": "The PickleFiles",
            "url": "https://github.com/brent-stone/CAN_Reverse_Engineering/issues/12",
            "poster_name": "#12\n            opened Dec 16, 2021 by\n            nimans4",
            "description": "Where can I extract all the Data which is plotted at the end ?\nI want to plot my own plots in MATLAB and need a matrix which contains the arb id, id position and alle values for all sampletimes.\nAre those information on the pickle files? I am not able to open those files with python...(?)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        },
        {
            "index": 2,
            "date": "Oct 6, 2020",
            "title": "TypeError: ufunc 'isnan' not supported for the input types...",
            "url": "https://github.com/brent-stone/CAN_Reverse_Engineering/issues/9",
            "poster_name": "#9\n            opened Oct 6, 2020 by\n            mitchdetailed",
            "description": "Hoping for some clarification .\nusing socketcan .log files , I receive the following errors after installing on my new laptop, (mint 20.04, same as desktop)\nFile \"Main.py\", line 85, in \nid_dictionary, j1979_dictionary = pre_processor.generate_arb_id_dictionary(a_timer,\nFile \"/home/mitch/Canbus/CAN_Reverse_Engineering/Pipeline/PreProcessor.py\", line 87, in generate_arb_id_dictionary\nself.import_csv(a_timer, self.data_filename)\nFile \"/home/mitch/Canbus/CAN_Reverse_Engineering/Pipeline/PreProcessor.py\", line 43, in import_csv\nself.data = read_csv(filename,\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 686, in read_csv\nreturn _read(filepath_or_buffer, kwds)\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 458, in _read\ndata = parser.read(nrows)\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1196, in read\nret = self._engine.read(nrows)\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 2231, in read\nindex, names = self._make_index(data, alldata, names)\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1677, in _make_index\nindex = self._agg_index(index)\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1770, in _agg_index\narr, _ = self._infer_types(arr, col_na_values | col_na_fvalues)\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/io/parsers.py\", line 1871, in _infer_types\nmask = algorithms.isin(values, list(na_values))\nFile \"/home/mitch/.local/lib/python3.8/site-packages/pandas/core/algorithms.py\", line 443, in isin\nif np.isnan(values).any():\nTypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\nodd thing is, it doesn't happen on my desktop.. (Same OS)\n\n\n\n\n\n\n\n\n\n              The text was updated successfully, but these errors were encountered:\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nAll reactions",
            "comments": []
        }
    ]
]